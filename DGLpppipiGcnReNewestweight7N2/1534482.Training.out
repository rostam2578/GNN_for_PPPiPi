0: gpu019.ihep.ac.cn
GPU 0: Tesla V100-SXM2-32GB (UUID: GPU-69b817fd-44f4-09f0-151a-848e9aa01c8f)
GPU 1: Tesla V100-SXM2-32GB (UUID: GPU-5b7c256d-b33e-669f-0cd1-b5800c0c0535)
GPU 2: Tesla V100-SXM2-32GB (UUID: GPU-87f76ae0-b17e-178f-7822-c7c115666eb2)
Allocate GPU cards : 0,1,2

modinfo:
filename:       /lib/modules/3.10.0-1127.8.2.el7.x86_64/extra/nvidia.ko.xz
alias:          char-major-195-*
version:        450.36.06
supported:      external
license:        NVIDIA
retpoline:      Y
rhelversion:    7.8
srcversion:     BB5CB243542347D4EB0C79C
alias:          pci:v000010DEd*sv*sd*bc03sc02i00*
alias:          pci:v000010DEd*sv*sd*bc03sc00i00*
depends:        
vermagic:       3.10.0-1127.8.2.el7.x86_64 SMP mod_unload modversions 
parm:           NvSwitchRegDwords:NvSwitch regkey (charp)
parm:           NvSwitchBlacklist:NvSwitchBlacklist=uuid[,uuid...] (charp)
parm:           NVreg_ResmanDebugLevel:int
parm:           NVreg_RmLogonRC:int
parm:           NVreg_ModifyDeviceFiles:int
parm:           NVreg_DeviceFileUID:int
parm:           NVreg_DeviceFileGID:int
parm:           NVreg_DeviceFileMode:int
parm:           NVreg_InitializeSystemMemoryAllocations:int
parm:           NVreg_UsePageAttributeTable:int
parm:           NVreg_MapRegistersEarly:int
parm:           NVreg_RegisterForACPIEvents:int
parm:           NVreg_EnablePCIeGen3:int
parm:           NVreg_EnableMSI:int
parm:           NVreg_TCEBypassMode:int
parm:           NVreg_EnableStreamMemOPs:int
parm:           NVreg_EnableBacklightHandler:int
parm:           NVreg_RestrictProfilingToAdminUsers:int
parm:           NVreg_PreserveVideoMemoryAllocations:int
parm:           NVreg_DynamicPowerManagement:int
parm:           NVreg_DynamicPowerManagementVideoMemoryThreshold:int
parm:           NVreg_EnableUserNUMAManagement:int
parm:           NVreg_MemoryPoolSize:int
parm:           NVreg_KMallocHeapMaxSize:int
parm:           NVreg_VMallocHeapMaxSize:int
parm:           NVreg_IgnoreMMIOCheck:int
parm:           NVreg_NvLinkDisable:int
parm:           NVreg_EnablePCIERelaxedOrderingMode:int
parm:           NVreg_RegisterPCIDriver:int
parm:           NVreg_RegistryDwords:charp
parm:           NVreg_RegistryDwordsPerDevice:charp
parm:           NVreg_RmMsg:charp
parm:           NVreg_GpuBlacklist:charp
parm:           NVreg_TemporaryFilePath:charp
parm:           NVreg_AssignGpus:charp

nvidia-smi:
Tue Aug  9 16:33:38 2022       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 450.36.06    Driver Version: 450.36.06    CUDA Version: 11.0     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  Tesla V100-SXM2...  On   | 00000000:1F:00.0 Off |                    0 |
| N/A   34C    P0    44W / 300W |      0MiB / 32510MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   1  Tesla V100-SXM2...  On   | 00000000:B4:00.0 Off |                    0 |
| N/A   32C    P0    42W / 300W |      0MiB / 32510MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   2  Tesla V100-SXM2...  On   | 00000000:B5:00.0 Off |                    0 |
| N/A   32C    P0    42W / 300W |      0MiB / 32510MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+

nvcc --version:
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2021 NVIDIA Corporation
Built on Sun_Mar_21_19:15:46_PDT_2021
Cuda compilation tools, release 11.3, V11.3.58
Build cuda_11.3.r11.3/compiler.29745058_0

 torch version: 1.10.2

 cuda version: 11.3

 is cuda available: True

 CUDNN VERSION: 8200

 Number CUDA Devices: 3

 CUDA Device Name: Tesla V100-SXM2-32GB

 CUDA Device Total Memory [GB]: 34.089730048

 Device capability: (7, 0) 

 Cuda deviice: <torch.cuda.device object at 0x2ad8ef454a00> 

 Is cuda initialized: True

 CUDA_HOME: /hpcfs/bes/mlgpu/hoseinkk/Miniconda3/envs/dgl1

real	0m13.892s
user	0m3.204s
sys	0m2.952s
[16:33:53] /opt/dgl/src/runtime/tensordispatch.cc:43: TensorDispatcher: dlopen failed: /hpcfs/bes/mlgpu/hoseinkk/Miniconda3/envs/dgl1/lib/python3.9/site-packages/dgl/tensoradapter/pytorch/libtensoradapter_pytorch_1.10.2.so: cannot open shared object file: No such file or directory
Using backend: pytorch
/hpcfs/bes/mlgpu/hoseinkk/Miniconda3/envs/dgl1/lib/python3.9/site-packages/cupy/_environment.py:438: UserWarning: 
--------------------------------------------------------------------------------

  CuPy may not function correctly because multiple CuPy packages are installed
  in your environment:

    cupy, cupy-cuda110

  Follow these steps to resolve this issue:

    1. For all packages listed above, run the following command to remove all
       existing CuPy installations:

         $ pip uninstall <package_name>

      If you previously installed CuPy via conda, also run the following:

         $ conda uninstall cupy

    2. Install the appropriate CuPy package.
       Refer to the Installation Guide for detailed instructions.

         https://docs.cupy.dev/en/stable/install.html

--------------------------------------------------------------------------------

  warnings.warn(f'''




 Training ... 






 The Network ... 






 The graph ... 



edge_index
 tensor([[   0,    1,    2,  ..., 4907, 4907, 4907],
        [   1,    2,    3,  ..., 4918, 4919, 4920]]) 

edge_index shape
 torch.Size([2, 36593])
graph: Graph(num_nodes=6796, num_edges=36593,
      ndata_schemes={}
      edata_schemes={}) 
nodes: tensor([   0,    1,    2,  ..., 6793, 6794, 6795], device='cuda:0') 
nodes shape: torch.Size([6796]) 
edges: (tensor([   0,    1,    2,  ..., 4907, 4907, 4907], device='cuda:0'), tensor([   1,    2,    3,  ..., 4918, 4919, 4920], device='cuda:0')) 
edges shae:

number of nodes: 6796

number of edges: 73186

node features (random input): tensor([[ 0.2905],
        [-1.7418],
        [-0.2841],
        ...,
        [ 0.2248],
        [-1.5332],
        [-1.7300]], device='cuda:0', requires_grad=True) 
node features sum: tensor(21.6154, device='cuda:0', grad_fn=<SumBackward0>)

edges features: tensor([[1.],
        [1.],
        [1.],
        ...,
        [1.],
        [1.],
        [1.]], device='cuda:0', requires_grad=True) 
edges features sum: tensor(73186., device='cuda:0', grad_fn=<SumBackward0>)

example: 
Out degrees of node 234: 14

In degrees of node 234: 14





 Loading data ... 


shape (80000, 6796) (80000, 6796)
sum 5574226 8401300
shape torch.Size([80000, 6796]) torch.Size([80000, 6796])
Model name: DGLpppipiGcnReNewestweight7N2
net GCN(
  (conv1): GraphConv(in=1, out=256, normalization=both, activation=None)
  (conv2): GraphConv(in=256, out=128, normalization=both, activation=None)
  (conv3): GraphConv(in=128, out=64, normalization=both, activation=None)
  (conv4): GraphConv(in=64, out=32, normalization=both, activation=None)
  (conv5): GraphConv(in=32, out=1, normalization=both, activation=None)
)
conv1.weight 
 torch.Size([1, 256]) 
 True 
 tensor([[-0.0042, -0.1258, -0.0444,  0.0314, -0.1427, -0.0065,  0.0311,  0.0978,
         -0.0924, -0.0322, -0.0394,  0.0268, -0.1248, -0.0724,  0.1409,  0.0991,
         -0.0403,  0.0306, -0.1380,  0.1234,  0.0997,  0.0706, -0.1394,  0.0812,
          0.1467,  0.0827,  0.0753, -0.0058,  0.0943, -0.0230,  0.0034, -0.1213,
          0.0330,  0.0891,  0.1200, -0.1199,  0.0344, -0.0547, -0.0153,  0.1307,
         -0.0249, -0.0560,  0.0373,  0.1481, -0.1094, -0.0207, -0.1506, -0.0280,
          0.1362,  0.0581, -0.1312,  0.0844,  0.1020,  0.1204,  0.0464,  0.0936,
         -0.1455, -0.0275, -0.0580,  0.0761, -0.0399,  0.0729, -0.0716,  0.0438,
         -0.1257,  0.0466, -0.1132, -0.1207, -0.0694, -0.0680, -0.0876, -0.1030,
         -0.1144, -0.0753,  0.0699,  0.0722, -0.0437, -0.1320, -0.0956, -0.0804,
         -0.0469, -0.0039, -0.0172,  0.0359,  0.0794, -0.0318, -0.0938,  0.0699,
         -0.0872, -0.0259,  0.0757,  0.1176, -0.0175, -0.1511,  0.1225,  0.0110,
          0.0850,  0.0683, -0.0342,  0.1485,  0.0330,  0.1130,  0.0771, -0.0727,
          0.0517,  0.0614,  0.0475, -0.1105, -0.0453,  0.0611, -0.0516,  0.1489,
         -0.1458,  0.1514, -0.0222, -0.0749, -0.1002,  0.1080,  0.0459,  0.0725,
          0.1097, -0.0288,  0.0245, -0.1433, -0.1156,  0.0460,  0.1011,  0.0879,
          0.0681, -0.1124,  0.0244, -0.1500, -0.1000,  0.0501, -0.1504,  0.0115,
         -0.1031,  0.1348, -0.1060, -0.1305,  0.1447,  0.0273, -0.0156, -0.0462,
         -0.0364, -0.1201,  0.0478,  0.0488, -0.1169, -0.0512, -0.0037,  0.1065,
         -0.0560,  0.1075, -0.1351,  0.0539,  0.0823,  0.0550,  0.0011,  0.1167,
         -0.1114,  0.0728, -0.0253,  0.0014,  0.0306,  0.0819,  0.1258, -0.0387,
          0.1106, -0.1324,  0.0108,  0.0407,  0.0527, -0.0812,  0.1299,  0.0104,
         -0.0888, -0.0695,  0.1340,  0.0115, -0.0406, -0.0842, -0.0943,  0.0691,
         -0.0741, -0.1513, -0.0710, -0.0780, -0.0916, -0.1123, -0.0005, -0.0144,
         -0.0970,  0.0654, -0.0328,  0.0518,  0.0237, -0.0148,  0.0444, -0.1136,
         -0.1329, -0.0531,  0.0483, -0.1029, -0.0602,  0.0773, -0.0588,  0.0049,
          0.1168,  0.1424, -0.1273,  0.0723,  0.0270,  0.1166, -0.0150,  0.0454,
          0.1447, -0.0603, -0.1307, -0.1299,  0.1272,  0.0165, -0.0787,  0.1010,
          0.0584,  0.1092, -0.0321,  0.0831, -0.0075, -0.0164, -0.1083, -0.0488,
          0.0428, -0.0733, -0.1505, -0.1419, -0.0896,  0.0849,  0.0607, -0.0669,
         -0.1117,  0.0958,  0.1507,  0.1224, -0.0690,  0.1469, -0.0343,  0.0898,
         -0.0162,  0.0070, -0.0180,  0.0956, -0.0227, -0.1197,  0.0799, -0.1051]],
       device='cuda:0') 
 Parameter containing:
tensor([[-0.0042, -0.1258, -0.0444,  0.0314, -0.1427, -0.0065,  0.0311,  0.0978,
         -0.0924, -0.0322, -0.0394,  0.0268, -0.1248, -0.0724,  0.1409,  0.0991,
         -0.0403,  0.0306, -0.1380,  0.1234,  0.0997,  0.0706, -0.1394,  0.0812,
          0.1467,  0.0827,  0.0753, -0.0058,  0.0943, -0.0230,  0.0034, -0.1213,
          0.0330,  0.0891,  0.1200, -0.1199,  0.0344, -0.0547, -0.0153,  0.1307,
         -0.0249, -0.0560,  0.0373,  0.1481, -0.1094, -0.0207, -0.1506, -0.0280,
          0.1362,  0.0581, -0.1312,  0.0844,  0.1020,  0.1204,  0.0464,  0.0936,
         -0.1455, -0.0275, -0.0580,  0.0761, -0.0399,  0.0729, -0.0716,  0.0438,
         -0.1257,  0.0466, -0.1132, -0.1207, -0.0694, -0.0680, -0.0876, -0.1030,
         -0.1144, -0.0753,  0.0699,  0.0722, -0.0437, -0.1320, -0.0956, -0.0804,
         -0.0469, -0.0039, -0.0172,  0.0359,  0.0794, -0.0318, -0.0938,  0.0699,
         -0.0872, -0.0259,  0.0757,  0.1176, -0.0175, -0.1511,  0.1225,  0.0110,
          0.0850,  0.0683, -0.0342,  0.1485,  0.0330,  0.1130,  0.0771, -0.0727,
          0.0517,  0.0614,  0.0475, -0.1105, -0.0453,  0.0611, -0.0516,  0.1489,
         -0.1458,  0.1514, -0.0222, -0.0749, -0.1002,  0.1080,  0.0459,  0.0725,
          0.1097, -0.0288,  0.0245, -0.1433, -0.1156,  0.0460,  0.1011,  0.0879,
          0.0681, -0.1124,  0.0244, -0.1500, -0.1000,  0.0501, -0.1504,  0.0115,
         -0.1031,  0.1348, -0.1060, -0.1305,  0.1447,  0.0273, -0.0156, -0.0462,
         -0.0364, -0.1201,  0.0478,  0.0488, -0.1169, -0.0512, -0.0037,  0.1065,
         -0.0560,  0.1075, -0.1351,  0.0539,  0.0823,  0.0550,  0.0011,  0.1167,
         -0.1114,  0.0728, -0.0253,  0.0014,  0.0306,  0.0819,  0.1258, -0.0387,
          0.1106, -0.1324,  0.0108,  0.0407,  0.0527, -0.0812,  0.1299,  0.0104,
         -0.0888, -0.0695,  0.1340,  0.0115, -0.0406, -0.0842, -0.0943,  0.0691,
         -0.0741, -0.1513, -0.0710, -0.0780, -0.0916, -0.1123, -0.0005, -0.0144,
         -0.0970,  0.0654, -0.0328,  0.0518,  0.0237, -0.0148,  0.0444, -0.1136,
         -0.1329, -0.0531,  0.0483, -0.1029, -0.0602,  0.0773, -0.0588,  0.0049,
          0.1168,  0.1424, -0.1273,  0.0723,  0.0270,  0.1166, -0.0150,  0.0454,
          0.1447, -0.0603, -0.1307, -0.1299,  0.1272,  0.0165, -0.0787,  0.1010,
          0.0584,  0.1092, -0.0321,  0.0831, -0.0075, -0.0164, -0.1083, -0.0488,
          0.0428, -0.0733, -0.1505, -0.1419, -0.0896,  0.0849,  0.0607, -0.0669,
         -0.1117,  0.0958,  0.1507,  0.1224, -0.0690,  0.1469, -0.0343,  0.0898,
         -0.0162,  0.0070, -0.0180,  0.0956, -0.0227, -0.1197,  0.0799, -0.1051]],
       device='cuda:0', requires_grad=True)
conv1.bias 
 torch.Size([256]) 
 True 
 tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0') 
 Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
conv2.weight 
 torch.Size([256, 128]) 
 True 
 tensor([[ 0.0268, -0.0420, -0.0668,  ..., -0.0797,  0.1066,  0.1004],
        [-0.0642,  0.0920,  0.0577,  ..., -0.1208, -0.0318,  0.0572],
        [-0.0239, -0.0701,  0.0269,  ..., -0.1026, -0.0406, -0.0378],
        ...,
        [-0.1123, -0.0053,  0.0404,  ...,  0.0501,  0.1055, -0.0169],
        [-0.0055, -0.0361, -0.1083,  ...,  0.0585, -0.1213, -0.1191],
        [-0.0681,  0.0922, -0.0552,  ...,  0.0937,  0.0662,  0.0937]],
       device='cuda:0') 
 Parameter containing:
tensor([[ 0.0268, -0.0420, -0.0668,  ..., -0.0797,  0.1066,  0.1004],
        [-0.0642,  0.0920,  0.0577,  ..., -0.1208, -0.0318,  0.0572],
        [-0.0239, -0.0701,  0.0269,  ..., -0.1026, -0.0406, -0.0378],
        ...,
        [-0.1123, -0.0053,  0.0404,  ...,  0.0501,  0.1055, -0.0169],
        [-0.0055, -0.0361, -0.1083,  ...,  0.0585, -0.1213, -0.1191],
        [-0.0681,  0.0922, -0.0552,  ...,  0.0937,  0.0662,  0.0937]],
       device='cuda:0', requires_grad=True)
conv2.bias 
 torch.Size([128]) 
 True 
 tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0') 
 Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)
conv3.weight 
 torch.Size([128, 64]) 
 True 
 tensor([[-0.1328, -0.0239, -0.0972,  ...,  0.0332, -0.0194, -0.0100],
        [ 0.1380, -0.0152,  0.0356,  ..., -0.1093,  0.0261,  0.0328],
        [ 0.1023,  0.1205,  0.0062,  ..., -0.0830, -0.1367,  0.0918],
        ...,
        [-0.1331, -0.0596, -0.0129,  ...,  0.1314, -0.1721,  0.0774],
        [ 0.0167,  0.0220, -0.0051,  ..., -0.0604, -0.0737,  0.0993],
        [-0.0254, -0.0087, -0.1760,  ...,  0.1030,  0.1571, -0.0159]],
       device='cuda:0') 
 Parameter containing:
tensor([[-0.1328, -0.0239, -0.0972,  ...,  0.0332, -0.0194, -0.0100],
        [ 0.1380, -0.0152,  0.0356,  ..., -0.1093,  0.0261,  0.0328],
        [ 0.1023,  0.1205,  0.0062,  ..., -0.0830, -0.1367,  0.0918],
        ...,
        [-0.1331, -0.0596, -0.0129,  ...,  0.1314, -0.1721,  0.0774],
        [ 0.0167,  0.0220, -0.0051,  ..., -0.0604, -0.0737,  0.0993],
        [-0.0254, -0.0087, -0.1760,  ...,  0.1030,  0.1571, -0.0159]],
       device='cuda:0', requires_grad=True)
conv3.bias 
 torch.Size([64]) 
 True 
 tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0') 
 Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
conv4.weight 
 torch.Size([64, 32]) 
 True 
 tensor([[-0.2008, -0.1073, -0.1621,  ..., -0.1500,  0.1478, -0.1867],
        [-0.0499, -0.2500, -0.2214,  ..., -0.0914,  0.1116, -0.0521],
        [-0.1422,  0.2213,  0.1250,  ..., -0.1480,  0.0647, -0.2025],
        ...,
        [-0.0258, -0.2105, -0.0248,  ...,  0.2110, -0.0720,  0.1202],
        [-0.2050,  0.1324,  0.1136,  ...,  0.2311,  0.2347,  0.1837],
        [ 0.1019,  0.1776, -0.1823,  ...,  0.2260,  0.1142, -0.1290]],
       device='cuda:0') 
 Parameter containing:
tensor([[-0.2008, -0.1073, -0.1621,  ..., -0.1500,  0.1478, -0.1867],
        [-0.0499, -0.2500, -0.2214,  ..., -0.0914,  0.1116, -0.0521],
        [-0.1422,  0.2213,  0.1250,  ..., -0.1480,  0.0647, -0.2025],
        ...,
        [-0.0258, -0.2105, -0.0248,  ...,  0.2110, -0.0720,  0.1202],
        [-0.2050,  0.1324,  0.1136,  ...,  0.2311,  0.2347,  0.1837],
        [ 0.1019,  0.1776, -0.1823,  ...,  0.2260,  0.1142, -0.1290]],
       device='cuda:0', requires_grad=True)
conv4.bias 
 torch.Size([32]) 
 True 
 tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0') 
 Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)
conv5.weight 
 torch.Size([32, 1]) 
 True 
 tensor([[-0.0878],
        [-0.3713],
        [-0.2993],
        [ 0.2257],
        [ 0.3321],
        [ 0.4221],
        [-0.2505],
        [-0.3449],
        [ 0.3426],
        [-0.1893],
        [-0.4171],
        [-0.0170],
        [ 0.3776],
        [-0.0421],
        [-0.1843],
        [ 0.1652],
        [ 0.3735],
        [-0.2865],
        [ 0.0188],
        [ 0.3334],
        [-0.0604],
        [ 0.1627],
        [ 0.1726],
        [ 0.1456],
        [-0.2189],
        [ 0.0385],
        [ 0.2873],
        [-0.0771],
        [-0.4263],
        [ 0.3180],
        [ 0.2392],
        [ 0.1035]], device='cuda:0') 
 Parameter containing:
tensor([[-0.0878],
        [-0.3713],
        [-0.2993],
        [ 0.2257],
        [ 0.3321],
        [ 0.4221],
        [-0.2505],
        [-0.3449],
        [ 0.3426],
        [-0.1893],
        [-0.4171],
        [-0.0170],
        [ 0.3776],
        [-0.0421],
        [-0.1843],
        [ 0.1652],
        [ 0.3735],
        [-0.2865],
        [ 0.0188],
        [ 0.3334],
        [-0.0604],
        [ 0.1627],
        [ 0.1726],
        [ 0.1456],
        [-0.2189],
        [ 0.0385],
        [ 0.2873],
        [-0.0771],
        [-0.4263],
        [ 0.3180],
        [ 0.2392],
        [ 0.1035]], device='cuda:0', requires_grad=True)
conv5.bias 
 torch.Size([1]) 
 True 
 tensor([0.], device='cuda:0') 
 Parameter containing:
tensor([0.], device='cuda:0', requires_grad=True)
conv1.weight 
 torch.Size([1, 256]) 
 True 
 tensor([[-0.0312,  0.0805, -0.1287,  0.1472, -0.1210,  0.0638, -0.0675, -0.0318,
         -0.1128, -0.1082,  0.0248,  0.0146,  0.1465, -0.1237, -0.0502,  0.0549,
          0.0970, -0.0525,  0.1011, -0.0467, -0.0816,  0.0414,  0.0341, -0.1269,
         -0.0073, -0.0823,  0.0148, -0.0158, -0.0251,  0.0740,  0.1112, -0.0978,
         -0.1393,  0.0413, -0.1356,  0.0255,  0.0026,  0.1509, -0.1376,  0.0152,
         -0.0041,  0.1157, -0.0757, -0.1392,  0.0849,  0.0431, -0.0956, -0.0705,
          0.1126, -0.1030, -0.0005,  0.0711,  0.1173, -0.0251, -0.0909, -0.0733,
         -0.1233, -0.0867,  0.0038, -0.0883, -0.1135,  0.1148, -0.0208, -0.0739,
          0.1453,  0.0191, -0.1355, -0.0687, -0.0785,  0.1352, -0.0117, -0.0554,
          0.0224, -0.1095,  0.1063,  0.1298, -0.0919,  0.0621,  0.1097, -0.1161,
         -0.0393,  0.0139,  0.0886, -0.1301, -0.0974, -0.0554, -0.0524,  0.0675,
          0.0681, -0.0684,  0.1161, -0.0471,  0.1051, -0.1277,  0.0378, -0.1376,
          0.0143, -0.0231, -0.0325, -0.0578, -0.0198, -0.0352, -0.0122, -0.1409,
          0.1250,  0.1154,  0.0519,  0.0029,  0.1315,  0.1214,  0.1210, -0.0330,
          0.0078,  0.1159,  0.1502,  0.0854,  0.1397, -0.0621,  0.1366,  0.0698,
         -0.0856, -0.0570, -0.1500, -0.0201, -0.0846,  0.1501,  0.1178,  0.0656,
          0.0619,  0.0905, -0.1146, -0.0324, -0.0451,  0.0998,  0.1515,  0.1210,
          0.0078,  0.0003, -0.1455, -0.0918,  0.0892, -0.0100,  0.0828, -0.0953,
          0.0384,  0.1275, -0.0869,  0.0310, -0.0511, -0.0387,  0.0345,  0.0059,
          0.1092,  0.0886, -0.0868, -0.0003, -0.0805, -0.0279,  0.0943, -0.0742,
          0.0103,  0.0033,  0.0812, -0.0746, -0.0994,  0.1310,  0.1515, -0.0249,
         -0.0096,  0.1468, -0.0853, -0.0727, -0.0591,  0.0063,  0.0012,  0.0936,
         -0.1088,  0.0805, -0.0954, -0.1243, -0.1309,  0.0792,  0.0860,  0.0721,
          0.0615, -0.1094, -0.0751, -0.0004, -0.0008,  0.0887,  0.1168, -0.1482,
          0.1393, -0.1381,  0.0457,  0.0743,  0.0711, -0.0181, -0.0900,  0.0856,
         -0.0548, -0.1181,  0.0683,  0.1215,  0.1159,  0.0571, -0.0258,  0.0220,
          0.1201,  0.0084, -0.1018,  0.0443, -0.0498,  0.0844, -0.0886,  0.0532,
          0.0578,  0.1420, -0.0740, -0.0479, -0.0321,  0.1269,  0.1510,  0.1478,
          0.0491, -0.0966,  0.1446,  0.1217,  0.0029,  0.0049, -0.1386, -0.0617,
         -0.0898,  0.1111,  0.0651, -0.0638, -0.0442, -0.1374,  0.0131,  0.1479,
          0.0398,  0.0220, -0.0688,  0.0038,  0.1289, -0.0503,  0.1044,  0.0268,
         -0.0264,  0.0096,  0.0212, -0.0389,  0.0877, -0.0881, -0.1499,  0.0750]],
       device='cuda:0') 
 Parameter containing:
tensor([[-0.0312,  0.0805, -0.1287,  0.1472, -0.1210,  0.0638, -0.0675, -0.0318,
         -0.1128, -0.1082,  0.0248,  0.0146,  0.1465, -0.1237, -0.0502,  0.0549,
          0.0970, -0.0525,  0.1011, -0.0467, -0.0816,  0.0414,  0.0341, -0.1269,
         -0.0073, -0.0823,  0.0148, -0.0158, -0.0251,  0.0740,  0.1112, -0.0978,
         -0.1393,  0.0413, -0.1356,  0.0255,  0.0026,  0.1509, -0.1376,  0.0152,
         -0.0041,  0.1157, -0.0757, -0.1392,  0.0849,  0.0431, -0.0956, -0.0705,
          0.1126, -0.1030, -0.0005,  0.0711,  0.1173, -0.0251, -0.0909, -0.0733,
         -0.1233, -0.0867,  0.0038, -0.0883, -0.1135,  0.1148, -0.0208, -0.0739,
          0.1453,  0.0191, -0.1355, -0.0687, -0.0785,  0.1352, -0.0117, -0.0554,
          0.0224, -0.1095,  0.1063,  0.1298, -0.0919,  0.0621,  0.1097, -0.1161,
         -0.0393,  0.0139,  0.0886, -0.1301, -0.0974, -0.0554, -0.0524,  0.0675,
          0.0681, -0.0684,  0.1161, -0.0471,  0.1051, -0.1277,  0.0378, -0.1376,
          0.0143, -0.0231, -0.0325, -0.0578, -0.0198, -0.0352, -0.0122, -0.1409,
          0.1250,  0.1154,  0.0519,  0.0029,  0.1315,  0.1214,  0.1210, -0.0330,
          0.0078,  0.1159,  0.1502,  0.0854,  0.1397, -0.0621,  0.1366,  0.0698,
         -0.0856, -0.0570, -0.1500, -0.0201, -0.0846,  0.1501,  0.1178,  0.0656,
          0.0619,  0.0905, -0.1146, -0.0324, -0.0451,  0.0998,  0.1515,  0.1210,
          0.0078,  0.0003, -0.1455, -0.0918,  0.0892, -0.0100,  0.0828, -0.0953,
          0.0384,  0.1275, -0.0869,  0.0310, -0.0511, -0.0387,  0.0345,  0.0059,
          0.1092,  0.0886, -0.0868, -0.0003, -0.0805, -0.0279,  0.0943, -0.0742,
          0.0103,  0.0033,  0.0812, -0.0746, -0.0994,  0.1310,  0.1515, -0.0249,
         -0.0096,  0.1468, -0.0853, -0.0727, -0.0591,  0.0063,  0.0012,  0.0936,
         -0.1088,  0.0805, -0.0954, -0.1243, -0.1309,  0.0792,  0.0860,  0.0721,
          0.0615, -0.1094, -0.0751, -0.0004, -0.0008,  0.0887,  0.1168, -0.1482,
          0.1393, -0.1381,  0.0457,  0.0743,  0.0711, -0.0181, -0.0900,  0.0856,
         -0.0548, -0.1181,  0.0683,  0.1215,  0.1159,  0.0571, -0.0258,  0.0220,
          0.1201,  0.0084, -0.1018,  0.0443, -0.0498,  0.0844, -0.0886,  0.0532,
          0.0578,  0.1420, -0.0740, -0.0479, -0.0321,  0.1269,  0.1510,  0.1478,
          0.0491, -0.0966,  0.1446,  0.1217,  0.0029,  0.0049, -0.1386, -0.0617,
         -0.0898,  0.1111,  0.0651, -0.0638, -0.0442, -0.1374,  0.0131,  0.1479,
          0.0398,  0.0220, -0.0688,  0.0038,  0.1289, -0.0503,  0.1044,  0.0268,
         -0.0264,  0.0096,  0.0212, -0.0389,  0.0877, -0.0881, -0.1499,  0.0750]],
       device='cuda:0', requires_grad=True)
conv1.bias 
 torch.Size([256]) 
 True 
 tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0') 
 Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
conv2.weight 
 torch.Size([256, 128]) 
 True 
 tensor([[ 0.1026,  0.1192, -0.0734,  ...,  0.1245, -0.0676,  0.0886],
        [-0.0230, -0.0499,  0.1055,  ..., -0.0580, -0.1068, -0.0952],
        [-0.1227, -0.0406, -0.0641,  ..., -0.0411,  0.0559,  0.0075],
        ...,
        [ 0.1030, -0.0869, -0.1215,  ...,  0.0703, -0.0964, -0.1010],
        [-0.0089, -0.1137, -0.0064,  ...,  0.0848, -0.0993,  0.0437],
        [-0.0626, -0.0356, -0.0629,  ...,  0.0774, -0.0639, -0.1051]],
       device='cuda:0') 
 Parameter containing:
tensor([[ 0.1026,  0.1192, -0.0734,  ...,  0.1245, -0.0676,  0.0886],
        [-0.0230, -0.0499,  0.1055,  ..., -0.0580, -0.1068, -0.0952],
        [-0.1227, -0.0406, -0.0641,  ..., -0.0411,  0.0559,  0.0075],
        ...,
        [ 0.1030, -0.0869, -0.1215,  ...,  0.0703, -0.0964, -0.1010],
        [-0.0089, -0.1137, -0.0064,  ...,  0.0848, -0.0993,  0.0437],
        [-0.0626, -0.0356, -0.0629,  ...,  0.0774, -0.0639, -0.1051]],
       device='cuda:0', requires_grad=True)
conv2.bias 
 torch.Size([128]) 
 True 
 tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0') 
 Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)
conv3.weight 
 torch.Size([128, 64]) 
 True 
 tensor([[-0.1026,  0.1191,  0.0190,  ..., -0.0046, -0.0641, -0.0044],
        [-0.1524,  0.0398, -0.1306,  ...,  0.0730,  0.0199,  0.1361],
        [-0.0647, -0.0931,  0.1454,  ..., -0.1013,  0.0324,  0.0990],
        ...,
        [-0.0836, -0.1316, -0.0791,  ..., -0.1364,  0.0671, -0.1160],
        [-0.0083,  0.0941, -0.0685,  ..., -0.1308, -0.0794,  0.1489],
        [-0.0802,  0.0493, -0.0075,  ..., -0.1008, -0.1428, -0.1641]],
       device='cuda:0') 
 Parameter containing:
tensor([[-0.1026,  0.1191,  0.0190,  ..., -0.0046, -0.0641, -0.0044],
        [-0.1524,  0.0398, -0.1306,  ...,  0.0730,  0.0199,  0.1361],
        [-0.0647, -0.0931,  0.1454,  ..., -0.1013,  0.0324,  0.0990],
        ...,
        [-0.0836, -0.1316, -0.0791,  ..., -0.1364,  0.0671, -0.1160],
        [-0.0083,  0.0941, -0.0685,  ..., -0.1308, -0.0794,  0.1489],
        [-0.0802,  0.0493, -0.0075,  ..., -0.1008, -0.1428, -0.1641]],
       device='cuda:0', requires_grad=True)
conv3.bias 
 torch.Size([64]) 
 True 
 tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0') 
 Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
conv4.weight 
 torch.Size([64, 32]) 
 True 
 tensor([[ 0.2142,  0.2002, -0.2424,  ...,  0.1305,  0.2477,  0.0327],
        [ 0.2428,  0.1804, -0.1250,  ...,  0.2301,  0.1104, -0.2392],
        [ 0.2357,  0.0435, -0.0046,  ..., -0.1830, -0.0332, -0.1330],
        ...,
        [ 0.1988, -0.0199,  0.0560,  ..., -0.1542, -0.1501,  0.2389],
        [ 0.0342, -0.0256, -0.2087,  ..., -0.0110, -0.1314,  0.1850],
        [ 0.1239,  0.0620, -0.1720,  ..., -0.2475, -0.1466,  0.2031]],
       device='cuda:0') 
 Parameter containing:
tensor([[ 0.2142,  0.2002, -0.2424,  ...,  0.1305,  0.2477,  0.0327],
        [ 0.2428,  0.1804, -0.1250,  ...,  0.2301,  0.1104, -0.2392],
        [ 0.2357,  0.0435, -0.0046,  ..., -0.1830, -0.0332, -0.1330],
        ...,
        [ 0.1988, -0.0199,  0.0560,  ..., -0.1542, -0.1501,  0.2389],
        [ 0.0342, -0.0256, -0.2087,  ..., -0.0110, -0.1314,  0.1850],
        [ 0.1239,  0.0620, -0.1720,  ..., -0.2475, -0.1466,  0.2031]],
       device='cuda:0', requires_grad=True)
conv4.bias 
 torch.Size([32]) 
 True 
 tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0') 
 Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)
conv5.weight 
 torch.Size([32, 1]) 
 True 
 tensor([[-0.1225],
        [-0.0677],
        [ 0.1476],
        [ 0.2543],
        [ 0.0614],
        [-0.1319],
        [ 0.3019],
        [ 0.3603],
        [ 0.3048],
        [-0.1364],
        [ 0.2379],
        [ 0.1967],
        [-0.0502],
        [ 0.3096],
        [ 0.2579],
        [ 0.0160],
        [-0.3243],
        [-0.2538],
        [-0.4178],
        [-0.4095],
        [-0.2127],
        [ 0.2901],
        [ 0.3098],
        [ 0.1996],
        [-0.3025],
        [ 0.0972],
        [ 0.0342],
        [ 0.2617],
        [-0.2055],
        [-0.3888],
        [-0.1639],
        [ 0.3632]], device='cuda:0') 
 Parameter containing:
tensor([[-0.1225],
        [-0.0677],
        [ 0.1476],
        [ 0.2543],
        [ 0.0614],
        [-0.1319],
        [ 0.3019],
        [ 0.3603],
        [ 0.3048],
        [-0.1364],
        [ 0.2379],
        [ 0.1967],
        [-0.0502],
        [ 0.3096],
        [ 0.2579],
        [ 0.0160],
        [-0.3243],
        [-0.2538],
        [-0.4178],
        [-0.4095],
        [-0.2127],
        [ 0.2901],
        [ 0.3098],
        [ 0.1996],
        [-0.3025],
        [ 0.0972],
        [ 0.0342],
        [ 0.2617],
        [-0.2055],
        [-0.3888],
        [-0.1639],
        [ 0.3632]], device='cuda:0', requires_grad=True)
conv5.bias 
 torch.Size([1]) 
 True 
 tensor([0.], device='cuda:0') 
 Parameter containing:
tensor([0.], device='cuda:0', requires_grad=True)



input node feature: 
g.ndata[nfet] tensor([[0.],
        [0.],
        [0.],
        ...,
        [0.],
        [0.],
        [0.]], device='cuda:0') 
g.ndata[nfet].shape torch.Size([6796, 1]) 
g.ndata[nfet].sum tensor(33.1882, device='cuda:0')



input graph: 
g Graph(num_nodes=6796, num_edges=73186,
      ndata_schemes={'nfet': Scheme(shape=(1,), dtype=torch.float32), 'h1': Scheme(shape=(256,), dtype=torch.float32), 'h2': Scheme(shape=(128,), dtype=torch.float32), 'h3': Scheme(shape=(64,), dtype=torch.float32)}
      edata_schemes={'efet': Scheme(shape=(1,), dtype=torch.float32)}) 
g.edata[efet].shape torch.Size([73186, 1]) 
g.edata[efet] tensor([[1.],
        [1.],
        [1.],
        ...,
        [1.],
        [1.],
        [1.]], device='cuda:0', requires_grad=True) 
g.edata[efet].sum tensor(73186., device='cuda:0', grad_fn=<SumBackward0>) 
g.ndata[nfet].shape torch.Size([6796, 1]) 
g.ndata[nfet] tensor([[0.],
        [0.],
        [0.],
        ...,
        [0.],
        [0.],
        [0.]], device='cuda:0') 
g.ndata[nfet].sum tensor(33.1882, device='cuda:0')
param0_0.shape torch.Size([256])
param.data[:, 0].shape torch.Size([256])



h after the first convolutional layer: 
 tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='cuda:0',
       grad_fn=<AddBackward0>) 
h.shape torch.Size([6796, 256]) 
h.sum tensor(-72.5277, device='cuda:0', grad_fn=<SumBackward0>)



h[:, 0].sum tensor(3.2127, device='cuda:0', grad_fn=<SumBackward0>)

g.ndata[nfet].sum() * conv1.weight[0] tensor(3.2972, device='cuda:0')



h[100].sum tensor(-3.6210, device='cuda:0', grad_fn=<SumBackward0>)

g.ndata[nfet].sum() * conv1.weight[100] tensor(-3.7163, device='cuda:0')



h[200].sum tensor(-3.2251, device='cuda:0', grad_fn=<SumBackward0>)

g.ndata[nfet].sum() * conv1.weight[200] tensor(-3.3099, device='cuda:0')



h1 after relu, the first updating, and another relu: 
 tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='cuda:0',
       grad_fn=<ReluBackward0>) 
h.shape torch.Size([6796, 256]) 
h.sum tensor(2691.0491, device='cuda:0', grad_fn=<SumBackward0>)



h2 after the second convolutional layer: 
 tensor([[0.0000e+00, 0.0000e+00, 0.0000e+00,  ..., 0.0000e+00, 0.0000e+00,
         0.0000e+00],
        [0.0000e+00, 1.6238e-03, 9.8005e-04,  ..., 4.4778e-05, 0.0000e+00,
         0.0000e+00],
        [0.0000e+00, 8.4725e-03, 5.1136e-03,  ..., 2.3364e-04, 0.0000e+00,
         0.0000e+00],
        ...,
        [0.0000e+00, 0.0000e+00, 0.0000e+00,  ..., 0.0000e+00, 0.0000e+00,
         0.0000e+00],
        [0.0000e+00, 0.0000e+00, 0.0000e+00,  ..., 0.0000e+00, 0.0000e+00,
         0.0000e+00],
        [0.0000e+00, 0.0000e+00, 0.0000e+00,  ..., 0.0000e+00, 0.0000e+00,
         0.0000e+00]], device='cuda:0', grad_fn=<ReluBackward0>) 
h2.shape torch.Size([6796, 128]) 
h2.sum tensor(16182.5879, device='cuda:0', grad_fn=<SumBackward0>)



h2[0].sum tensor(0., device='cuda:0', grad_fn=<SumBackward0>)

(h1.sum(axis=0) * param0_2).sum() + bias0 tensor(-25.7846, device='cuda:0', grad_fn=<AddBackward0>)



h2[100].sum tensor(121.9089, device='cuda:0', grad_fn=<SumBackward0>)

(h1.sum(axis=0) * param50_2).sum() + bias50 tensor(9.7524, device='cuda:0', grad_fn=<AddBackward0>)



h2[200].sum tensor(426.0875, device='cuda:0', grad_fn=<SumBackward0>)

(h1.sum(axis=0) * param100_2).sum() + bias100 tensor(34.0859, device='cuda:0', grad_fn=<AddBackward0>)



g Graph(num_nodes=6796, num_edges=73186,
      ndata_schemes={'nfet': Scheme(shape=(1,), dtype=torch.float32), 'h1': Scheme(shape=(256,), dtype=torch.float32), 'h2': Scheme(shape=(128,), dtype=torch.float32), 'h3': Scheme(shape=(64,), dtype=torch.float32)}
      edata_schemes={'efet': Scheme(shape=(1,), dtype=torch.float32)})



 output, 
h5 tensor([[0.0061],
        [0.0075],
        [0.0108],
        ...,
        [0.0017],
        [0.0017],
        [0.0014]], device='cuda:0', grad_fn=<AddBackward0>) 
h5.shape torch.Size([6796, 1]) 
h5.sum tensor(154.4486, device='cuda:0', grad_fn=<SumBackward0>) 
g.edata[efet] tensor([[1.],
        [1.],
        [1.],
        ...,
        [1.],
        [1.],
        [1.]], device='cuda:0', requires_grad=True) 
g.edata[efet].shape torch.Size([73186, 1]) 
g.edata[efet].sum tensor(73186., device='cuda:0', grad_fn=<SumBackward0>)

Passing event 20 from the network before training 
result1: tensor([[0.0061],
        [0.0075],
        [0.0108],
        ...,
        [0.0017],
        [0.0017],
        [0.0014]], device='cuda:0', grad_fn=<AddBackward0>) 
result1.shape: torch.Size([6796, 1]) 
input: [0. 0. 0. ... 0. 0. 0.]
Traceback (most recent call last):
  File "/hpcfs/bes/mlgpu/hoseinkk/MLTracking/otherparticles/pppipi/DGLpppipiGcnReNewestweight7N2/./TrainingBha.py", line 5, in <module>
    from ModelBha import *
  File "/hpcfs/bes/mlgpu/hoseinkk/MLTracking/otherparticles/pppipi/DGLpppipiGcnReNewestweight7N2/ModelBha.py", line 148, in <module>
    fig.colorbar(ax2.matshow(sitonsquare(result1.reshape(6796)), aspect=2, extent=[0, 288, 0, 43], origin='lower')\
  File "/hpcfs/bes/mlgpu/hoseinkk/MLTracking/otherparticles/pppipi/DGLpppipiGcnReNewestweight7N2/DataLoadBha.py", line 40, in sitonsquare
    sqevent[i, j + 144] = event[(wiresum[i]) + j + w]
  File "cupy/_core/core.pyx", line 1494, in cupy._core.core._ndarray_base.__len__
TypeError: len() of unsized object

real	0m33.624s
user	0m10.717s
sys	0m14.278s
