0: gpu034.ihep.ac.cn
GPU 0: Tesla V100-SXM2-32GB (UUID: GPU-2a4ace0e-1b57-7704-e60c-776ff7392ff6)
GPU 1: Tesla V100-SXM2-32GB (UUID: GPU-eebd80b6-1fcd-752f-76ce-5d389deeef29)
GPU 2: Tesla V100-SXM2-32GB (UUID: GPU-c9be9eae-eff2-9fa8-8d59-a269b376214a)
Allocate GPU cards : 0,1,2

modinfo:
filename:       /lib/modules/3.10.0-1127.8.2.el7.x86_64/extra/nvidia.ko.xz
alias:          char-major-195-*
version:        450.36.06
supported:      external
license:        NVIDIA
retpoline:      Y
rhelversion:    7.8
srcversion:     BB5CB243542347D4EB0C79C
alias:          pci:v000010DEd*sv*sd*bc03sc02i00*
alias:          pci:v000010DEd*sv*sd*bc03sc00i00*
depends:        
vermagic:       3.10.0-1127.8.2.el7.x86_64 SMP mod_unload modversions 
parm:           NvSwitchRegDwords:NvSwitch regkey (charp)
parm:           NvSwitchBlacklist:NvSwitchBlacklist=uuid[,uuid...] (charp)
parm:           NVreg_ResmanDebugLevel:int
parm:           NVreg_RmLogonRC:int
parm:           NVreg_ModifyDeviceFiles:int
parm:           NVreg_DeviceFileUID:int
parm:           NVreg_DeviceFileGID:int
parm:           NVreg_DeviceFileMode:int
parm:           NVreg_InitializeSystemMemoryAllocations:int
parm:           NVreg_UsePageAttributeTable:int
parm:           NVreg_MapRegistersEarly:int
parm:           NVreg_RegisterForACPIEvents:int
parm:           NVreg_EnablePCIeGen3:int
parm:           NVreg_EnableMSI:int
parm:           NVreg_TCEBypassMode:int
parm:           NVreg_EnableStreamMemOPs:int
parm:           NVreg_EnableBacklightHandler:int
parm:           NVreg_RestrictProfilingToAdminUsers:int
parm:           NVreg_PreserveVideoMemoryAllocations:int
parm:           NVreg_DynamicPowerManagement:int
parm:           NVreg_DynamicPowerManagementVideoMemoryThreshold:int
parm:           NVreg_EnableUserNUMAManagement:int
parm:           NVreg_MemoryPoolSize:int
parm:           NVreg_KMallocHeapMaxSize:int
parm:           NVreg_VMallocHeapMaxSize:int
parm:           NVreg_IgnoreMMIOCheck:int
parm:           NVreg_NvLinkDisable:int
parm:           NVreg_EnablePCIERelaxedOrderingMode:int
parm:           NVreg_RegisterPCIDriver:int
parm:           NVreg_RegistryDwords:charp
parm:           NVreg_RegistryDwordsPerDevice:charp
parm:           NVreg_RmMsg:charp
parm:           NVreg_GpuBlacklist:charp
parm:           NVreg_TemporaryFilePath:charp
parm:           NVreg_AssignGpus:charp

nvidia-smi:
Tue Aug  9 16:23:34 2022       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 450.36.06    Driver Version: 450.36.06    CUDA Version: 11.0     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  Tesla V100-SXM2...  On   | 00000000:16:00.0 Off |                    0 |
| N/A   36C    P0    44W / 300W |      0MiB / 32510MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   1  Tesla V100-SXM2...  On   | 00000000:3A:00.0 Off |                    0 |
| N/A   33C    P0    42W / 300W |      0MiB / 32510MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   2  Tesla V100-SXM2...  On   | 00000000:8A:00.0 Off |                    0 |
| N/A   33C    P0    45W / 300W |      0MiB / 32510MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+

nvcc --version:
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2021 NVIDIA Corporation
Built on Sun_Mar_21_19:15:46_PDT_2021
Cuda compilation tools, release 11.3, V11.3.58
Build cuda_11.3.r11.3/compiler.29745058_0

 torch version: 1.10.2

 cuda version: 11.3

 is cuda available: True

 CUDNN VERSION: 8200

 Number CUDA Devices: 3

 CUDA Device Name: Tesla V100-SXM2-32GB

 CUDA Device Total Memory [GB]: 34.089730048

 Device capability: (7, 0) 

 Cuda deviice: <torch.cuda.device object at 0x2ad57d96da00> 

 Is cuda initialized: True

 CUDA_HOME: /hpcfs/bes/mlgpu/hoseinkk/Miniconda3/envs/dgl1

real	0m16.370s
user	0m2.670s
sys	0m2.273s
[16:23:52] /opt/dgl/src/runtime/tensordispatch.cc:43: TensorDispatcher: dlopen failed: /hpcfs/bes/mlgpu/hoseinkk/Miniconda3/envs/dgl1/lib/python3.9/site-packages/dgl/tensoradapter/pytorch/libtensoradapter_pytorch_1.10.2.so: cannot open shared object file: No such file or directory
Using backend: pytorch
/hpcfs/bes/mlgpu/hoseinkk/Miniconda3/envs/dgl1/lib/python3.9/site-packages/cupy/_environment.py:438: UserWarning: 
--------------------------------------------------------------------------------

  CuPy may not function correctly because multiple CuPy packages are installed
  in your environment:

    cupy, cupy-cuda110

  Follow these steps to resolve this issue:

    1. For all packages listed above, run the following command to remove all
       existing CuPy installations:

         $ pip uninstall <package_name>

      If you previously installed CuPy via conda, also run the following:

         $ conda uninstall cupy

    2. Install the appropriate CuPy package.
       Refer to the Installation Guide for detailed instructions.

         https://docs.cupy.dev/en/stable/install.html

--------------------------------------------------------------------------------

  warnings.warn(f'''




 Training ... 






 The Network ... 






 The graph ... 



edge_index
 tensor([[   0,    1,    2,  ..., 4907, 4907, 4907],
        [   1,    2,    3,  ..., 4918, 4919, 4920]]) 

edge_index shape
 torch.Size([2, 36593])
graph: Graph(num_nodes=6796, num_edges=36593,
      ndata_schemes={}
      edata_schemes={}) 
nodes: tensor([   0,    1,    2,  ..., 6793, 6794, 6795], device='cuda:0') 
nodes shape: torch.Size([6796]) 
edges: (tensor([   0,    1,    2,  ..., 4907, 4907, 4907], device='cuda:0'), tensor([   1,    2,    3,  ..., 4918, 4919, 4920], device='cuda:0')) 
edges shae:

number of nodes: 6796

number of edges: 73186

node features (random input): tensor([[ 0.2696],
        [ 0.2777],
        [ 0.4998],
        ...,
        [-0.4571],
        [ 3.8450],
        [ 0.1310]], device='cuda:0', requires_grad=True) 
node features sum: tensor(-8.7591, device='cuda:0', grad_fn=<SumBackward0>)

edges features: tensor([[1.],
        [1.],
        [1.],
        ...,
        [1.],
        [1.],
        [1.]], device='cuda:0', requires_grad=True) 
edges features sum: tensor(73186., device='cuda:0', grad_fn=<SumBackward0>)

example: 
Out degrees of node 234: 14

In degrees of node 234: 14





 Loading data ... 


shape (80000, 6796) (80000, 6796)
sum 5574226 8401300
shape torch.Size([80000, 6796]) torch.Size([80000, 6796])
Model name: DGLpppipiGcnReNewestweight7N2
net GCN(
  (conv1): GraphConv(in=1, out=256, normalization=both, activation=None)
  (conv2): GraphConv(in=256, out=128, normalization=both, activation=None)
  (conv3): GraphConv(in=128, out=64, normalization=both, activation=None)
  (conv4): GraphConv(in=64, out=32, normalization=both, activation=None)
  (conv5): GraphConv(in=32, out=1, normalization=both, activation=None)
)
conv1.weight 
 torch.Size([1, 256]) 
 True 
 tensor([[-6.8310e-02, -1.1212e-01,  1.2762e-01, -9.7223e-02, -9.0948e-02,
          2.1144e-02, -1.3206e-01,  1.3557e-01,  1.1683e-01, -1.3102e-01,
         -1.1219e-01,  1.2246e-01, -1.2953e-01,  5.1459e-02,  1.1431e-01,
         -4.4668e-02,  4.8709e-04,  1.5082e-01, -2.1413e-02, -3.8362e-02,
         -1.2265e-01, -3.8373e-02,  1.2863e-01, -1.1677e-01, -8.3656e-02,
          2.0212e-02,  2.5247e-02, -8.8658e-02,  2.5373e-02, -1.4997e-01,
          1.2258e-01, -1.3848e-01, -2.8432e-02,  2.9587e-02, -4.1162e-02,
          4.7980e-02, -1.9187e-03,  9.6286e-02,  2.6855e-02, -4.1047e-02,
         -8.6598e-02, -8.1341e-02, -9.5691e-02,  1.2935e-02, -1.1260e-01,
          4.5719e-06, -3.0165e-02,  1.4699e-04,  8.1745e-03,  1.1327e-01,
         -2.1935e-02,  2.4776e-02,  1.1422e-02,  1.2269e-02,  1.1338e-02,
         -8.9126e-02, -3.3965e-02, -3.5813e-02, -1.3592e-01,  2.0045e-02,
          8.4598e-02,  6.4183e-03, -8.9544e-02,  9.9330e-02,  5.8407e-02,
          1.2716e-01, -1.3028e-01, -1.5985e-02, -2.3281e-02, -1.0026e-01,
          1.9355e-02,  3.3831e-03,  4.9897e-02, -8.0592e-02,  9.0213e-02,
          3.0470e-02, -1.1581e-01,  1.3218e-01,  3.7604e-02,  1.0394e-01,
          1.0027e-01, -4.4551e-02, -1.1148e-01, -1.3722e-03,  7.0756e-02,
         -6.6001e-02,  6.7816e-02, -4.5976e-02,  1.3053e-01,  1.2893e-01,
         -7.3934e-02,  7.0063e-02,  3.5532e-02, -6.1622e-02,  1.2175e-01,
         -1.7364e-03, -9.6901e-02,  1.0088e-01, -1.0598e-01, -1.3444e-01,
          1.2825e-01, -1.2507e-01, -6.7762e-02,  6.7151e-02, -1.0391e-01,
         -1.2871e-01, -7.6121e-02,  1.2229e-01,  4.2530e-02, -1.0635e-01,
         -3.8319e-02, -1.3358e-01,  4.6647e-02, -1.3576e-01,  1.6021e-02,
          1.3645e-01, -2.2047e-03, -1.3023e-01,  9.1148e-02,  6.5668e-02,
          7.8458e-02, -1.0379e-01,  1.0069e-01,  1.1697e-01,  2.5543e-02,
          7.1782e-02, -8.9521e-02,  9.6553e-02,  7.4104e-02,  7.8863e-02,
          9.2020e-03,  4.5600e-02, -1.4574e-01, -9.4864e-02, -4.4939e-02,
         -9.6589e-03,  1.1126e-01, -7.4519e-03,  7.2288e-02, -7.8187e-02,
          1.5849e-03,  1.3887e-01, -1.1264e-01,  1.3322e-01,  8.0285e-02,
         -9.7497e-02, -1.4870e-01,  8.2493e-02,  4.2984e-03, -6.7233e-02,
          7.1199e-02,  9.1436e-02, -4.2961e-02,  1.4622e-01,  7.9819e-02,
          6.2376e-02, -1.3580e-01,  8.6305e-02, -2.7667e-02, -1.4703e-01,
          4.9907e-02, -8.8253e-03,  3.5044e-02,  1.3024e-01,  1.2942e-01,
          1.0244e-01,  9.8952e-02,  1.3710e-01,  4.1628e-02,  6.7871e-02,
         -5.7479e-02,  7.3671e-02, -1.5628e-02, -5.8554e-02,  1.3427e-01,
          2.3223e-02,  1.8846e-02,  1.4139e-01,  4.7020e-02, -1.8125e-02,
         -3.8713e-02,  4.1460e-02, -1.2098e-01, -1.1160e-01, -1.9054e-02,
         -1.4898e-02, -7.2942e-02,  1.1300e-01, -6.9125e-03, -1.5043e-01,
         -7.2924e-02,  1.5153e-01, -1.0137e-02,  2.5893e-02, -1.9239e-02,
         -8.2931e-04, -3.1799e-02, -5.5719e-02, -2.6975e-02, -2.5331e-02,
         -9.1718e-02, -1.3988e-01, -4.5742e-02,  1.0498e-01, -8.2926e-02,
         -4.9677e-02, -2.2062e-02, -1.0396e-01, -1.2212e-01, -3.4453e-02,
         -1.3705e-01,  1.2476e-01, -4.7210e-02,  1.3911e-01,  1.2343e-02,
          1.2800e-01,  9.8565e-02, -1.3047e-01,  5.8029e-03, -2.4499e-02,
         -1.4066e-01, -1.2429e-01,  9.8646e-02, -1.1358e-02,  4.5601e-02,
         -5.6381e-02,  9.8710e-02, -1.2265e-01, -1.0262e-01,  4.1554e-02,
         -1.1332e-02,  3.7766e-02, -4.4405e-02,  3.0487e-02, -6.8848e-02,
          1.3771e-01,  7.3117e-02,  1.0720e-01, -6.3467e-02, -6.4036e-02,
         -5.8543e-02,  1.2983e-01, -3.2398e-02, -1.3966e-01,  9.9765e-02,
         -1.4382e-01,  4.0843e-02, -3.5884e-03,  4.7292e-02, -1.4546e-01,
          3.1274e-02, -8.9549e-02,  1.4021e-01,  4.3354e-02,  7.1444e-02,
          1.4346e-01]], device='cuda:0') 
 Parameter containing:
tensor([[-6.8310e-02, -1.1212e-01,  1.2762e-01, -9.7223e-02, -9.0948e-02,
          2.1144e-02, -1.3206e-01,  1.3557e-01,  1.1683e-01, -1.3102e-01,
         -1.1219e-01,  1.2246e-01, -1.2953e-01,  5.1459e-02,  1.1431e-01,
         -4.4668e-02,  4.8709e-04,  1.5082e-01, -2.1413e-02, -3.8362e-02,
         -1.2265e-01, -3.8373e-02,  1.2863e-01, -1.1677e-01, -8.3656e-02,
          2.0212e-02,  2.5247e-02, -8.8658e-02,  2.5373e-02, -1.4997e-01,
          1.2258e-01, -1.3848e-01, -2.8432e-02,  2.9587e-02, -4.1162e-02,
          4.7980e-02, -1.9187e-03,  9.6286e-02,  2.6855e-02, -4.1047e-02,
         -8.6598e-02, -8.1341e-02, -9.5691e-02,  1.2935e-02, -1.1260e-01,
          4.5719e-06, -3.0165e-02,  1.4699e-04,  8.1745e-03,  1.1327e-01,
         -2.1935e-02,  2.4776e-02,  1.1422e-02,  1.2269e-02,  1.1338e-02,
         -8.9126e-02, -3.3965e-02, -3.5813e-02, -1.3592e-01,  2.0045e-02,
          8.4598e-02,  6.4183e-03, -8.9544e-02,  9.9330e-02,  5.8407e-02,
          1.2716e-01, -1.3028e-01, -1.5985e-02, -2.3281e-02, -1.0026e-01,
          1.9355e-02,  3.3831e-03,  4.9897e-02, -8.0592e-02,  9.0213e-02,
          3.0470e-02, -1.1581e-01,  1.3218e-01,  3.7604e-02,  1.0394e-01,
          1.0027e-01, -4.4551e-02, -1.1148e-01, -1.3722e-03,  7.0756e-02,
         -6.6001e-02,  6.7816e-02, -4.5976e-02,  1.3053e-01,  1.2893e-01,
         -7.3934e-02,  7.0063e-02,  3.5532e-02, -6.1622e-02,  1.2175e-01,
         -1.7364e-03, -9.6901e-02,  1.0088e-01, -1.0598e-01, -1.3444e-01,
          1.2825e-01, -1.2507e-01, -6.7762e-02,  6.7151e-02, -1.0391e-01,
         -1.2871e-01, -7.6121e-02,  1.2229e-01,  4.2530e-02, -1.0635e-01,
         -3.8319e-02, -1.3358e-01,  4.6647e-02, -1.3576e-01,  1.6021e-02,
          1.3645e-01, -2.2047e-03, -1.3023e-01,  9.1148e-02,  6.5668e-02,
          7.8458e-02, -1.0379e-01,  1.0069e-01,  1.1697e-01,  2.5543e-02,
          7.1782e-02, -8.9521e-02,  9.6553e-02,  7.4104e-02,  7.8863e-02,
          9.2020e-03,  4.5600e-02, -1.4574e-01, -9.4864e-02, -4.4939e-02,
         -9.6589e-03,  1.1126e-01, -7.4519e-03,  7.2288e-02, -7.8187e-02,
          1.5849e-03,  1.3887e-01, -1.1264e-01,  1.3322e-01,  8.0285e-02,
         -9.7497e-02, -1.4870e-01,  8.2493e-02,  4.2984e-03, -6.7233e-02,
          7.1199e-02,  9.1436e-02, -4.2961e-02,  1.4622e-01,  7.9819e-02,
          6.2376e-02, -1.3580e-01,  8.6305e-02, -2.7667e-02, -1.4703e-01,
          4.9907e-02, -8.8253e-03,  3.5044e-02,  1.3024e-01,  1.2942e-01,
          1.0244e-01,  9.8952e-02,  1.3710e-01,  4.1628e-02,  6.7871e-02,
         -5.7479e-02,  7.3671e-02, -1.5628e-02, -5.8554e-02,  1.3427e-01,
          2.3223e-02,  1.8846e-02,  1.4139e-01,  4.7020e-02, -1.8125e-02,
         -3.8713e-02,  4.1460e-02, -1.2098e-01, -1.1160e-01, -1.9054e-02,
         -1.4898e-02, -7.2942e-02,  1.1300e-01, -6.9125e-03, -1.5043e-01,
         -7.2924e-02,  1.5153e-01, -1.0137e-02,  2.5893e-02, -1.9239e-02,
         -8.2931e-04, -3.1799e-02, -5.5719e-02, -2.6975e-02, -2.5331e-02,
         -9.1718e-02, -1.3988e-01, -4.5742e-02,  1.0498e-01, -8.2926e-02,
         -4.9677e-02, -2.2062e-02, -1.0396e-01, -1.2212e-01, -3.4453e-02,
         -1.3705e-01,  1.2476e-01, -4.7210e-02,  1.3911e-01,  1.2343e-02,
          1.2800e-01,  9.8565e-02, -1.3047e-01,  5.8029e-03, -2.4499e-02,
         -1.4066e-01, -1.2429e-01,  9.8646e-02, -1.1358e-02,  4.5601e-02,
         -5.6381e-02,  9.8710e-02, -1.2265e-01, -1.0262e-01,  4.1554e-02,
         -1.1332e-02,  3.7766e-02, -4.4405e-02,  3.0487e-02, -6.8848e-02,
          1.3771e-01,  7.3117e-02,  1.0720e-01, -6.3467e-02, -6.4036e-02,
         -5.8543e-02,  1.2983e-01, -3.2398e-02, -1.3966e-01,  9.9765e-02,
         -1.4382e-01,  4.0843e-02, -3.5884e-03,  4.7292e-02, -1.4546e-01,
          3.1274e-02, -8.9549e-02,  1.4021e-01,  4.3354e-02,  7.1444e-02,
          1.4346e-01]], device='cuda:0', requires_grad=True)
conv1.bias 
 torch.Size([256]) 
 True 
 tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0') 
 Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
conv2.weight 
 torch.Size([256, 128]) 
 True 
 tensor([[-0.0473, -0.0850, -0.0455,  ...,  0.0521, -0.1048, -0.0020],
        [ 0.1102, -0.0935,  0.0360,  ..., -0.0750,  0.0492,  0.0236],
        [-0.0729, -0.1040,  0.0295,  ..., -0.0554,  0.0225,  0.0406],
        ...,
        [-0.0299,  0.0143,  0.0234,  ..., -0.0703,  0.1181, -0.0213],
        [ 0.1047, -0.0807, -0.0945,  ...,  0.1150,  0.1249, -0.1111],
        [-0.0669,  0.0325, -0.0508,  ..., -0.0736,  0.0732,  0.0988]],
       device='cuda:0') 
 Parameter containing:
tensor([[-0.0473, -0.0850, -0.0455,  ...,  0.0521, -0.1048, -0.0020],
        [ 0.1102, -0.0935,  0.0360,  ..., -0.0750,  0.0492,  0.0236],
        [-0.0729, -0.1040,  0.0295,  ..., -0.0554,  0.0225,  0.0406],
        ...,
        [-0.0299,  0.0143,  0.0234,  ..., -0.0703,  0.1181, -0.0213],
        [ 0.1047, -0.0807, -0.0945,  ...,  0.1150,  0.1249, -0.1111],
        [-0.0669,  0.0325, -0.0508,  ..., -0.0736,  0.0732,  0.0988]],
       device='cuda:0', requires_grad=True)
conv2.bias 
 torch.Size([128]) 
 True 
 tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0') 
 Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)
conv3.weight 
 torch.Size([128, 64]) 
 True 
 tensor([[ 0.0263,  0.0943,  0.1503,  ...,  0.0519, -0.0284, -0.0991],
        [ 0.0189,  0.0698, -0.0536,  ..., -0.1048,  0.0339,  0.1599],
        [ 0.0902, -0.0217,  0.1510,  ...,  0.0527,  0.1562,  0.0940],
        ...,
        [-0.0213,  0.1615,  0.0531,  ...,  0.1167, -0.0421, -0.0387],
        [ 0.0783, -0.0472, -0.0812,  ...,  0.1747,  0.1544, -0.1455],
        [ 0.1080,  0.1325, -0.1425,  ..., -0.0837,  0.0137, -0.0295]],
       device='cuda:0') 
 Parameter containing:
tensor([[ 0.0263,  0.0943,  0.1503,  ...,  0.0519, -0.0284, -0.0991],
        [ 0.0189,  0.0698, -0.0536,  ..., -0.1048,  0.0339,  0.1599],
        [ 0.0902, -0.0217,  0.1510,  ...,  0.0527,  0.1562,  0.0940],
        ...,
        [-0.0213,  0.1615,  0.0531,  ...,  0.1167, -0.0421, -0.0387],
        [ 0.0783, -0.0472, -0.0812,  ...,  0.1747,  0.1544, -0.1455],
        [ 0.1080,  0.1325, -0.1425,  ..., -0.0837,  0.0137, -0.0295]],
       device='cuda:0', requires_grad=True)
conv3.bias 
 torch.Size([64]) 
 True 
 tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0') 
 Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
conv4.weight 
 torch.Size([64, 32]) 
 True 
 tensor([[ 0.1195,  0.2364,  0.1173,  ...,  0.2375,  0.2039, -0.0684],
        [-0.1527, -0.0548, -0.2273,  ...,  0.2377, -0.0154,  0.2425],
        [-0.1596,  0.1065,  0.2357,  ..., -0.1599,  0.1264,  0.0371],
        ...,
        [ 0.1574, -0.0751,  0.1730,  ...,  0.2023, -0.1021, -0.1506],
        [ 0.1846, -0.0962, -0.1622,  ...,  0.2092, -0.0291,  0.2453],
        [-0.2219,  0.0553,  0.1831,  ..., -0.2401, -0.1999,  0.1550]],
       device='cuda:0') 
 Parameter containing:
tensor([[ 0.1195,  0.2364,  0.1173,  ...,  0.2375,  0.2039, -0.0684],
        [-0.1527, -0.0548, -0.2273,  ...,  0.2377, -0.0154,  0.2425],
        [-0.1596,  0.1065,  0.2357,  ..., -0.1599,  0.1264,  0.0371],
        ...,
        [ 0.1574, -0.0751,  0.1730,  ...,  0.2023, -0.1021, -0.1506],
        [ 0.1846, -0.0962, -0.1622,  ...,  0.2092, -0.0291,  0.2453],
        [-0.2219,  0.0553,  0.1831,  ..., -0.2401, -0.1999,  0.1550]],
       device='cuda:0', requires_grad=True)
conv4.bias 
 torch.Size([32]) 
 True 
 tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0') 
 Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)
conv5.weight 
 torch.Size([32, 1]) 
 True 
 tensor([[ 0.1925],
        [ 0.2227],
        [-0.0966],
        [ 0.0099],
        [ 0.0607],
        [-0.2574],
        [-0.1196],
        [ 0.0799],
        [-0.3956],
        [-0.0278],
        [ 0.1396],
        [-0.1515],
        [ 0.2458],
        [ 0.2235],
        [ 0.3890],
        [-0.1168],
        [ 0.2923],
        [ 0.0187],
        [ 0.1191],
        [ 0.3494],
        [ 0.3038],
        [ 0.2255],
        [ 0.0302],
        [-0.2494],
        [ 0.1217],
        [-0.2480],
        [-0.3175],
        [ 0.3953],
        [-0.4126],
        [-0.4021],
        [-0.0584],
        [ 0.1868]], device='cuda:0') 
 Parameter containing:
tensor([[ 0.1925],
        [ 0.2227],
        [-0.0966],
        [ 0.0099],
        [ 0.0607],
        [-0.2574],
        [-0.1196],
        [ 0.0799],
        [-0.3956],
        [-0.0278],
        [ 0.1396],
        [-0.1515],
        [ 0.2458],
        [ 0.2235],
        [ 0.3890],
        [-0.1168],
        [ 0.2923],
        [ 0.0187],
        [ 0.1191],
        [ 0.3494],
        [ 0.3038],
        [ 0.2255],
        [ 0.0302],
        [-0.2494],
        [ 0.1217],
        [-0.2480],
        [-0.3175],
        [ 0.3953],
        [-0.4126],
        [-0.4021],
        [-0.0584],
        [ 0.1868]], device='cuda:0', requires_grad=True)
conv5.bias 
 torch.Size([1]) 
 True 
 tensor([0.], device='cuda:0') 
 Parameter containing:
tensor([0.], device='cuda:0', requires_grad=True)
conv1.weight 
 torch.Size([1, 256]) 
 True 
 tensor([[ 0.0382, -0.1248,  0.0637,  0.0909,  0.0624, -0.0414,  0.1167, -0.1403,
         -0.1185,  0.1337, -0.0155,  0.0658, -0.0941, -0.0388,  0.1339,  0.0899,
         -0.0835,  0.0153, -0.1069,  0.0459,  0.0821, -0.0805,  0.0098,  0.0438,
         -0.1304, -0.0322,  0.0163,  0.1499, -0.1255, -0.1454, -0.1042,  0.0600,
         -0.0842, -0.1249, -0.0610,  0.0543, -0.0215, -0.0358, -0.0324, -0.0540,
         -0.0612,  0.1208,  0.1430,  0.0536, -0.0402, -0.1123,  0.1078, -0.0522,
          0.0679, -0.0069, -0.0221,  0.1380, -0.0548, -0.0466, -0.1509,  0.1268,
          0.0131, -0.0537,  0.0052, -0.0772, -0.0082, -0.0675, -0.0827, -0.0782,
         -0.0226,  0.1327,  0.1318,  0.1161,  0.0210,  0.0584,  0.0690,  0.1356,
          0.0387, -0.0111, -0.0396, -0.0943,  0.0742, -0.0158,  0.0480, -0.0282,
          0.0350, -0.0101,  0.0158, -0.0104,  0.0859, -0.1217, -0.0082,  0.0803,
          0.0266,  0.1110,  0.0777, -0.0865, -0.0998, -0.0006,  0.0599,  0.0874,
          0.0323,  0.0020,  0.0338,  0.0985, -0.1313, -0.0867, -0.0158,  0.0259,
         -0.1007,  0.0276, -0.0887,  0.1078,  0.1300, -0.0969, -0.1517,  0.1350,
         -0.1433, -0.0379,  0.0579, -0.0830, -0.0829, -0.1496,  0.0075,  0.0502,
          0.1065, -0.1294, -0.1033,  0.0078,  0.0138, -0.0868, -0.0515, -0.0665,
          0.0353, -0.0596, -0.1194, -0.0936,  0.0412,  0.1154,  0.0100,  0.1299,
          0.0659,  0.0425, -0.0297,  0.1468,  0.1281, -0.0038,  0.0276,  0.0051,
         -0.1243,  0.1285, -0.1127,  0.1036,  0.1141,  0.1217, -0.0037,  0.0335,
          0.0032,  0.1033, -0.1250, -0.1383,  0.0755, -0.1280, -0.1508,  0.0682,
         -0.1216, -0.1249, -0.0087, -0.0053, -0.0194, -0.0665, -0.1163,  0.0032,
          0.0234, -0.0494, -0.0767, -0.0679, -0.0051, -0.1489, -0.1205, -0.1166,
         -0.0870, -0.0025,  0.1048, -0.0919,  0.0929, -0.0046, -0.0147, -0.0230,
         -0.1275, -0.1108,  0.1307, -0.0069, -0.0328, -0.1165, -0.0715, -0.0784,
         -0.1356,  0.0796, -0.0421,  0.0620, -0.0401,  0.0541, -0.0533,  0.0102,
         -0.0436, -0.1033,  0.0999,  0.1493, -0.1188, -0.0734, -0.0293,  0.0095,
         -0.0991, -0.0611, -0.0425, -0.0135,  0.0220,  0.0864,  0.0791,  0.0161,
         -0.0136,  0.1407,  0.0129,  0.0612,  0.0149, -0.0074,  0.0981, -0.0917,
          0.0921,  0.0436,  0.1260,  0.1405,  0.0134, -0.1254,  0.0391, -0.0627,
          0.0700,  0.0743,  0.0836, -0.1160, -0.0965, -0.1093, -0.1493,  0.1072,
         -0.0610,  0.0819, -0.1256,  0.0115, -0.0651,  0.1046, -0.1493, -0.0707,
         -0.1022,  0.0097,  0.1328, -0.0885,  0.0708, -0.1131, -0.0073, -0.0480]],
       device='cuda:0') 
 Parameter containing:
tensor([[ 0.0382, -0.1248,  0.0637,  0.0909,  0.0624, -0.0414,  0.1167, -0.1403,
         -0.1185,  0.1337, -0.0155,  0.0658, -0.0941, -0.0388,  0.1339,  0.0899,
         -0.0835,  0.0153, -0.1069,  0.0459,  0.0821, -0.0805,  0.0098,  0.0438,
         -0.1304, -0.0322,  0.0163,  0.1499, -0.1255, -0.1454, -0.1042,  0.0600,
         -0.0842, -0.1249, -0.0610,  0.0543, -0.0215, -0.0358, -0.0324, -0.0540,
         -0.0612,  0.1208,  0.1430,  0.0536, -0.0402, -0.1123,  0.1078, -0.0522,
          0.0679, -0.0069, -0.0221,  0.1380, -0.0548, -0.0466, -0.1509,  0.1268,
          0.0131, -0.0537,  0.0052, -0.0772, -0.0082, -0.0675, -0.0827, -0.0782,
         -0.0226,  0.1327,  0.1318,  0.1161,  0.0210,  0.0584,  0.0690,  0.1356,
          0.0387, -0.0111, -0.0396, -0.0943,  0.0742, -0.0158,  0.0480, -0.0282,
          0.0350, -0.0101,  0.0158, -0.0104,  0.0859, -0.1217, -0.0082,  0.0803,
          0.0266,  0.1110,  0.0777, -0.0865, -0.0998, -0.0006,  0.0599,  0.0874,
          0.0323,  0.0020,  0.0338,  0.0985, -0.1313, -0.0867, -0.0158,  0.0259,
         -0.1007,  0.0276, -0.0887,  0.1078,  0.1300, -0.0969, -0.1517,  0.1350,
         -0.1433, -0.0379,  0.0579, -0.0830, -0.0829, -0.1496,  0.0075,  0.0502,
          0.1065, -0.1294, -0.1033,  0.0078,  0.0138, -0.0868, -0.0515, -0.0665,
          0.0353, -0.0596, -0.1194, -0.0936,  0.0412,  0.1154,  0.0100,  0.1299,
          0.0659,  0.0425, -0.0297,  0.1468,  0.1281, -0.0038,  0.0276,  0.0051,
         -0.1243,  0.1285, -0.1127,  0.1036,  0.1141,  0.1217, -0.0037,  0.0335,
          0.0032,  0.1033, -0.1250, -0.1383,  0.0755, -0.1280, -0.1508,  0.0682,
         -0.1216, -0.1249, -0.0087, -0.0053, -0.0194, -0.0665, -0.1163,  0.0032,
          0.0234, -0.0494, -0.0767, -0.0679, -0.0051, -0.1489, -0.1205, -0.1166,
         -0.0870, -0.0025,  0.1048, -0.0919,  0.0929, -0.0046, -0.0147, -0.0230,
         -0.1275, -0.1108,  0.1307, -0.0069, -0.0328, -0.1165, -0.0715, -0.0784,
         -0.1356,  0.0796, -0.0421,  0.0620, -0.0401,  0.0541, -0.0533,  0.0102,
         -0.0436, -0.1033,  0.0999,  0.1493, -0.1188, -0.0734, -0.0293,  0.0095,
         -0.0991, -0.0611, -0.0425, -0.0135,  0.0220,  0.0864,  0.0791,  0.0161,
         -0.0136,  0.1407,  0.0129,  0.0612,  0.0149, -0.0074,  0.0981, -0.0917,
          0.0921,  0.0436,  0.1260,  0.1405,  0.0134, -0.1254,  0.0391, -0.0627,
          0.0700,  0.0743,  0.0836, -0.1160, -0.0965, -0.1093, -0.1493,  0.1072,
         -0.0610,  0.0819, -0.1256,  0.0115, -0.0651,  0.1046, -0.1493, -0.0707,
         -0.1022,  0.0097,  0.1328, -0.0885,  0.0708, -0.1131, -0.0073, -0.0480]],
       device='cuda:0', requires_grad=True)
conv1.bias 
 torch.Size([256]) 
 True 
 tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0') 
 Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
conv2.weight 
 torch.Size([256, 128]) 
 True 
 tensor([[ 0.0908, -0.1006, -0.0742,  ..., -0.1083,  0.0918,  0.0146],
        [-0.0527,  0.0476,  0.1054,  ...,  0.0150,  0.0408, -0.0306],
        [ 0.0722, -0.0688,  0.0247,  ..., -0.0429,  0.0718, -0.0649],
        ...,
        [ 0.1030, -0.1028,  0.1015,  ...,  0.0260,  0.0619, -0.0426],
        [-0.0237,  0.0369, -0.0652,  ..., -0.0335, -0.0605, -0.0006],
        [ 0.0251, -0.0025, -0.0939,  ...,  0.0600, -0.1219, -0.0437]],
       device='cuda:0') 
 Parameter containing:
tensor([[ 0.0908, -0.1006, -0.0742,  ..., -0.1083,  0.0918,  0.0146],
        [-0.0527,  0.0476,  0.1054,  ...,  0.0150,  0.0408, -0.0306],
        [ 0.0722, -0.0688,  0.0247,  ..., -0.0429,  0.0718, -0.0649],
        ...,
        [ 0.1030, -0.1028,  0.1015,  ...,  0.0260,  0.0619, -0.0426],
        [-0.0237,  0.0369, -0.0652,  ..., -0.0335, -0.0605, -0.0006],
        [ 0.0251, -0.0025, -0.0939,  ...,  0.0600, -0.1219, -0.0437]],
       device='cuda:0', requires_grad=True)
conv2.bias 
 torch.Size([128]) 
 True 
 tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0') 
 Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)
conv3.weight 
 torch.Size([128, 64]) 
 True 
 tensor([[ 0.1689,  0.0700, -0.1399,  ..., -0.0896,  0.0381, -0.1104],
        [ 0.1738,  0.0481, -0.0163,  ...,  0.0320, -0.1649, -0.0565],
        [ 0.1064, -0.1267, -0.0398,  ...,  0.0008, -0.1608, -0.1056],
        ...,
        [ 0.1658,  0.1387,  0.1514,  ..., -0.0120,  0.0522, -0.0656],
        [-0.1594, -0.1375,  0.1160,  ..., -0.0742, -0.0093, -0.0022],
        [ 0.0634,  0.1284,  0.0135,  ..., -0.0133, -0.1594,  0.0388]],
       device='cuda:0') 
 Parameter containing:
tensor([[ 0.1689,  0.0700, -0.1399,  ..., -0.0896,  0.0381, -0.1104],
        [ 0.1738,  0.0481, -0.0163,  ...,  0.0320, -0.1649, -0.0565],
        [ 0.1064, -0.1267, -0.0398,  ...,  0.0008, -0.1608, -0.1056],
        ...,
        [ 0.1658,  0.1387,  0.1514,  ..., -0.0120,  0.0522, -0.0656],
        [-0.1594, -0.1375,  0.1160,  ..., -0.0742, -0.0093, -0.0022],
        [ 0.0634,  0.1284,  0.0135,  ..., -0.0133, -0.1594,  0.0388]],
       device='cuda:0', requires_grad=True)
conv3.bias 
 torch.Size([64]) 
 True 
 tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0') 
 Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
conv4.weight 
 torch.Size([64, 32]) 
 True 
 tensor([[ 0.1967,  0.1813,  0.0305,  ..., -0.0429, -0.0733,  0.2315],
        [-0.1568, -0.1756, -0.2080,  ...,  0.2071,  0.2026,  0.0976],
        [ 0.2269,  0.0714, -0.1718,  ..., -0.1901,  0.0655, -0.1485],
        ...,
        [-0.1689,  0.1190, -0.0466,  ..., -0.0535, -0.1713, -0.0472],
        [-0.2318,  0.1109,  0.0974,  ...,  0.0295,  0.2098, -0.1465],
        [ 0.0250, -0.0971, -0.0972,  ...,  0.2485,  0.0156,  0.1174]],
       device='cuda:0') 
 Parameter containing:
tensor([[ 0.1967,  0.1813,  0.0305,  ..., -0.0429, -0.0733,  0.2315],
        [-0.1568, -0.1756, -0.2080,  ...,  0.2071,  0.2026,  0.0976],
        [ 0.2269,  0.0714, -0.1718,  ..., -0.1901,  0.0655, -0.1485],
        ...,
        [-0.1689,  0.1190, -0.0466,  ..., -0.0535, -0.1713, -0.0472],
        [-0.2318,  0.1109,  0.0974,  ...,  0.0295,  0.2098, -0.1465],
        [ 0.0250, -0.0971, -0.0972,  ...,  0.2485,  0.0156,  0.1174]],
       device='cuda:0', requires_grad=True)
conv4.bias 
 torch.Size([32]) 
 True 
 tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0') 
 Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)
conv5.weight 
 torch.Size([32, 1]) 
 True 
 tensor([[-0.2416],
        [-0.0333],
        [ 0.1089],
        [-0.3033],
        [ 0.2637],
        [ 0.2462],
        [-0.4079],
        [-0.3337],
        [ 0.3497],
        [ 0.2932],
        [ 0.3260],
        [-0.0854],
        [ 0.0142],
        [-0.4137],
        [ 0.0653],
        [-0.3654],
        [ 0.1785],
        [-0.2512],
        [-0.1934],
        [-0.3148],
        [ 0.2064],
        [-0.2673],
        [ 0.2565],
        [-0.2857],
        [-0.0134],
        [ 0.0734],
        [ 0.0714],
        [-0.0228],
        [ 0.1164],
        [-0.3615],
        [-0.1803],
        [-0.2296]], device='cuda:0') 
 Parameter containing:
tensor([[-0.2416],
        [-0.0333],
        [ 0.1089],
        [-0.3033],
        [ 0.2637],
        [ 0.2462],
        [-0.4079],
        [-0.3337],
        [ 0.3497],
        [ 0.2932],
        [ 0.3260],
        [-0.0854],
        [ 0.0142],
        [-0.4137],
        [ 0.0653],
        [-0.3654],
        [ 0.1785],
        [-0.2512],
        [-0.1934],
        [-0.3148],
        [ 0.2064],
        [-0.2673],
        [ 0.2565],
        [-0.2857],
        [-0.0134],
        [ 0.0734],
        [ 0.0714],
        [-0.0228],
        [ 0.1164],
        [-0.3615],
        [-0.1803],
        [-0.2296]], device='cuda:0', requires_grad=True)
conv5.bias 
 torch.Size([1]) 
 True 
 tensor([0.], device='cuda:0') 
 Parameter containing:
tensor([0.], device='cuda:0', requires_grad=True)
Traceback (most recent call last):
  File "/hpcfs/bes/mlgpu/hoseinkk/MLTracking/otherparticles/pppipi/DGLpppipiGcnReNewestweight7N2/./TrainingBha.py", line 5, in <module>
    from ModelBha import *
  File "/hpcfs/bes/mlgpu/hoseinkk/MLTracking/otherparticles/pppipi/DGLpppipiGcnReNewestweight7N2/ModelBha.py", line 135, in <module>
    fig.colorbar(ax1.matshow(sitonsquare(traingnnpppipi[EvBTr]), aspect=2, vmin=0, vmax=1, extent=[0, 288, 0, 43], origin='lower')\
  File "/hpcfs/bes/mlgpu/hoseinkk/Miniconda3/envs/dgl1/lib/python3.9/site-packages/matplotlib/axes/_axes.py", line 7926, in matshow
    Z = np.asanyarray(Z)
  File "cupy/_core/core.pyx", line 1473, in cupy._core.core._ndarray_base.__array__
TypeError: Implicit conversion to a NumPy array is not allowed. Please use `.get()` to construct a NumPy array explicitly.

real	0m48.870s
user	0m15.939s
sys	0m12.081s
