0: cmsgpu001.ihep.ac.cn
GPU 0: NVIDIA A100-PCIE-40GB (UUID: GPU-83673d1f-01b2-490d-5bc6-a84aaf3ddc65)
Allocate GPU cards : 0

modinfo:
filename:       /lib/modules/3.10.0-1160.71.1.el7.x86_64/extra/nvidia.ko.xz
firmware:       nvidia/515.65.01/gsp.bin
alias:          char-major-195-*
version:        515.65.01
supported:      external
license:        NVIDIA
retpoline:      Y
rhelversion:    7.9
srcversion:     8049D44E2C1B08F41E1B8A6
alias:          pci:v000010DEd*sv*sd*bc06sc80i00*
alias:          pci:v000010DEd*sv*sd*bc03sc02i00*
alias:          pci:v000010DEd*sv*sd*bc03sc00i00*
depends:        drm
vermagic:       3.10.0-1160.71.1.el7.x86_64 SMP mod_unload modversions 
signer:         DKMS module signing key
sig_key:        9B:9E:55:A9:86:D9:50:0B:6D:2D:9F:BA:A7:E6:45:39:D4:DD:5F:C6
sig_hashalgo:   sha512
parm:           NvSwitchRegDwords:NvSwitch regkey (charp)
parm:           NvSwitchBlacklist:NvSwitchBlacklist=uuid[,uuid...] (charp)
parm:           NVreg_ResmanDebugLevel:int
parm:           NVreg_RmLogonRC:int
parm:           NVreg_ModifyDeviceFiles:int
parm:           NVreg_DeviceFileUID:int
parm:           NVreg_DeviceFileGID:int
parm:           NVreg_DeviceFileMode:int
parm:           NVreg_InitializeSystemMemoryAllocations:int
parm:           NVreg_UsePageAttributeTable:int
parm:           NVreg_EnablePCIeGen3:int
parm:           NVreg_EnableMSI:int
parm:           NVreg_TCEBypassMode:int
parm:           NVreg_EnableStreamMemOPs:int
parm:           NVreg_RestrictProfilingToAdminUsers:int
parm:           NVreg_PreserveVideoMemoryAllocations:int
parm:           NVreg_EnableS0ixPowerManagement:int
parm:           NVreg_S0ixPowerManagementVideoMemoryThreshold:int
parm:           NVreg_DynamicPowerManagement:int
parm:           NVreg_DynamicPowerManagementVideoMemoryThreshold:int
parm:           NVreg_EnableGpuFirmware:int
parm:           NVreg_EnableGpuFirmwareLogs:int
parm:           NVreg_OpenRmEnableUnsupportedGpus:int
parm:           NVreg_EnableUserNUMAManagement:int
parm:           NVreg_MemoryPoolSize:int
parm:           NVreg_KMallocHeapMaxSize:int
parm:           NVreg_VMallocHeapMaxSize:int
parm:           NVreg_IgnoreMMIOCheck:int
parm:           NVreg_NvLinkDisable:int
parm:           NVreg_EnablePCIERelaxedOrderingMode:int
parm:           NVreg_RegisterPCIDriver:int
parm:           NVreg_EnableDbgBreakpoint:int
parm:           NVreg_RegistryDwords:charp
parm:           NVreg_RegistryDwordsPerDevice:charp
parm:           NVreg_RmMsg:charp
parm:           NVreg_GpuBlacklist:charp
parm:           NVreg_TemporaryFilePath:charp
parm:           NVreg_ExcludedGpus:charp
parm:           NVreg_DmaRemapPeerMmio:int
parm:           rm_firmware_active:charp

nvidia-smi:
Sat Sep 17 06:16:42 2022       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 515.65.01    Driver Version: 515.65.01    CUDA Version: 11.7     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  NVIDIA A100-PCI...  On   | 00000000:3B:00.0 Off |                    0 |
| N/A   24C    P0    32W / 250W |      0MiB / 40960MiB |      0%      Default |
|                               |                      |             Disabled |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+

nvcc --version:
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2021 NVIDIA Corporation
Built on Sun_Mar_21_19:15:46_PDT_2021
Cuda compilation tools, release 11.3, V11.3.58
Build cuda_11.3.r11.3/compiler.29745058_0

 torch version: 1.10.2

 cuda version: 11.3

 is cuda available: True

 CUDNN VERSION: 8200

 Number CUDA Devices: 1

 CUDA Device Name: NVIDIA A100-PCIE-40GB

 CUDA Device Total Memory [GB]: 42.358472704

 Device capability: (8, 0) 

 Cuda deviice: <torch.cuda.device object at 0x2b00769d18e0> 

 Is cuda initialized: True

 CUDA_HOME: /hpcfs/bes/mlgpu/hoseinkk/Miniconda3/envs/dgl1

real	0m5.138s
user	0m2.650s
sys	0m1.210s
[06:16:49] /opt/dgl/src/runtime/tensordispatch.cc:43: TensorDispatcher: dlopen failed: /hpcfs/bes/mlgpu/hoseinkk/Miniconda3/envs/dgl1/lib/python3.9/site-packages/dgl/tensoradapter/pytorch/libtensoradapter_pytorch_1.10.2.so: cannot open shared object file: No such file or directory
Using backend: pytorch
/hpcfs/bes/mlgpu/hoseinkk/Miniconda3/envs/dgl1/lib/python3.9/site-packages/cupy/_environment.py:438: UserWarning: 
--------------------------------------------------------------------------------

  CuPy may not function correctly because multiple CuPy packages are installed
  in your environment:

    cupy, cupy-cuda110

  Follow these steps to resolve this issue:

    1. For all packages listed above, run the following command to remove all
       existing CuPy installations:

         $ pip uninstall <package_name>

      If you previously installed CuPy via conda, also run the following:

         $ conda uninstall cupy

    2. Install the appropriate CuPy package.
       Refer to the Installation Guide for detailed instructions.

         https://docs.cupy.dev/en/stable/install.html

--------------------------------------------------------------------------------

  warnings.warn(f'''




 The Network ... 






 The graph ... 



edge_index
 tensor([[   0,    1,    2,  ..., 4907, 4907, 4907],
        [   1,    2,    3,  ..., 4918, 4919, 4920]]) 

edge_index shape
 torch.Size([2, 36593])
graph: Graph(num_nodes=6796, num_edges=36593,
      ndata_schemes={}
      edata_schemes={}) 
nodes: tensor([   0,    1,    2,  ..., 6793, 6794, 6795], device='cuda:0') 
nodes shape: torch.Size([6796]) 
edges: (tensor([   0,    1,    2,  ..., 4907, 4907, 4907], device='cuda:0'), tensor([   1,    2,    3,  ..., 4918, 4919, 4920], device='cuda:0')) 
edges shae:

number of nodes: 6796

number of edges: 73186

node features (random input): tensor([[ 0.5000],
        [-1.4026],
        [ 1.3772],
        ...,
        [ 0.1346],
        [-0.5683],
        [ 1.3098]], device='cuda:0', requires_grad=True) 
node features sum: tensor(203.8714, device='cuda:0', grad_fn=<SumBackward0>)

edges features: tensor([[1.],
        [1.],
        [1.],
        ...,
        [1.],
        [1.],
        [1.]], device='cuda:0', requires_grad=True) 
edges features sum: tensor(73186., device='cuda:0', grad_fn=<SumBackward0>)

example: 
Out degrees of node 234: 14

In degrees of node 234: 14





 Loading data ... 



training set shape (80000, 6796) 
sum 8401300

target set shape (80000, 6796) 
sum 5574226

TraTen and TrvTen shape:
 torch.Size([80000, 6796]) torch.Size([80000, 6796])
Model name: DGLBhaGcnReNewestweight7N4

net GCN(
  (conv1): GraphConv(in=1, out=256, normalization=both, activation=None)
  (conv2): GraphConv(in=256, out=128, normalization=both, activation=None)
  (conv3): GraphConv(in=128, out=64, normalization=both, activation=None)
  (conv4): GraphConv(in=64, out=32, normalization=both, activation=None)
  (conv5): GraphConv(in=32, out=1, normalization=both, activation=None)
) 
number of the free learnable parameters: 43777

parameters of the network:

name conv1.weight 
shape:
 torch.Size([1, 256]) 
grad:
 True 
date:
 tensor([[ 0.0755,  0.0805,  0.0897, -0.1434, -0.0519, -0.1220,  0.1173,  0.0879,
          0.0763, -0.0218,  0.0435, -0.1082, -0.0991,  0.0256,  0.0636,  0.1261,
          0.1470,  0.0977,  0.1425,  0.0268,  0.0089,  0.0188, -0.1527, -0.0714,
          0.0159, -0.0052,  0.1035,  0.0373,  0.1170,  0.0150,  0.0373, -0.0660,
         -0.1111, -0.0248, -0.0565, -0.0355, -0.0008,  0.0702,  0.1235, -0.1405,
         -0.1427,  0.1302, -0.1519, -0.1067,  0.0337,  0.0460,  0.0912,  0.0864,
          0.0501,  0.0743, -0.0002,  0.0878,  0.1239,  0.0129,  0.1003,  0.0385,
          0.0790, -0.0481, -0.1131, -0.1513, -0.0313,  0.0967, -0.1310,  0.0615,
          0.1131,  0.1184, -0.0442,  0.1167,  0.1465,  0.1507, -0.1479, -0.1522,
         -0.0150,  0.0565,  0.0498,  0.0446,  0.0855,  0.0719, -0.0993, -0.1332,
          0.1146,  0.0594, -0.1146, -0.0349,  0.0119, -0.0355,  0.0920, -0.1082,
          0.0656, -0.0845,  0.0175, -0.0235, -0.0960,  0.0408, -0.0165, -0.0114,
         -0.1495, -0.0690, -0.1128, -0.0141, -0.0036,  0.0145, -0.0848,  0.1395,
          0.0654, -0.1266,  0.0604,  0.0919, -0.1001, -0.1501, -0.1477, -0.1513,
         -0.0165,  0.0573,  0.0809,  0.0960, -0.0817,  0.0817, -0.0885,  0.1184,
         -0.1448, -0.1244,  0.1468, -0.1111, -0.1466, -0.0426,  0.0847,  0.0310,
         -0.0616, -0.0719, -0.1379, -0.1167, -0.1404,  0.0800, -0.0758, -0.0486,
         -0.1166,  0.0992, -0.1067,  0.0241,  0.0253,  0.0450, -0.0316,  0.0383,
         -0.0972,  0.0779,  0.0625, -0.1123, -0.0674,  0.0688,  0.0281, -0.0808,
         -0.1104,  0.0678, -0.0740, -0.1239, -0.1453, -0.0648,  0.0610, -0.0785,
          0.0721,  0.1286,  0.0091, -0.1322,  0.0310,  0.1035,  0.0872,  0.1054,
         -0.1305, -0.1000, -0.0740, -0.1261, -0.0899,  0.0153,  0.0681,  0.0840,
          0.1153, -0.0397,  0.0712,  0.0374,  0.0778,  0.1317,  0.0285,  0.0623,
          0.1225,  0.0558,  0.0155, -0.0727,  0.0021, -0.1313, -0.0592, -0.1238,
          0.0482,  0.0701,  0.0496, -0.1092, -0.0645, -0.1057, -0.0461, -0.0961,
         -0.1258,  0.0888, -0.1010, -0.0645,  0.1060, -0.0347, -0.0980,  0.1382,
          0.1226, -0.0055, -0.0814,  0.1454,  0.1080,  0.1458, -0.0688, -0.1132,
          0.0275,  0.1415,  0.0774,  0.1376, -0.0596,  0.0408, -0.0770,  0.0177,
          0.0758, -0.1366, -0.0098, -0.1489,  0.0349,  0.0199, -0.0863,  0.0923,
          0.0698,  0.1108,  0.0507,  0.0890,  0.1375,  0.1508, -0.0994, -0.0386,
         -0.1129, -0.1241, -0.0763,  0.0039,  0.0757, -0.1073, -0.0283,  0.1082,
          0.1145, -0.0998, -0.1142,  0.1014,  0.0834,  0.1343, -0.1386, -0.0277]],
       device='cuda:0') 
parameter:
 Parameter containing:
tensor([[ 0.0755,  0.0805,  0.0897, -0.1434, -0.0519, -0.1220,  0.1173,  0.0879,
          0.0763, -0.0218,  0.0435, -0.1082, -0.0991,  0.0256,  0.0636,  0.1261,
          0.1470,  0.0977,  0.1425,  0.0268,  0.0089,  0.0188, -0.1527, -0.0714,
          0.0159, -0.0052,  0.1035,  0.0373,  0.1170,  0.0150,  0.0373, -0.0660,
         -0.1111, -0.0248, -0.0565, -0.0355, -0.0008,  0.0702,  0.1235, -0.1405,
         -0.1427,  0.1302, -0.1519, -0.1067,  0.0337,  0.0460,  0.0912,  0.0864,
          0.0501,  0.0743, -0.0002,  0.0878,  0.1239,  0.0129,  0.1003,  0.0385,
          0.0790, -0.0481, -0.1131, -0.1513, -0.0313,  0.0967, -0.1310,  0.0615,
          0.1131,  0.1184, -0.0442,  0.1167,  0.1465,  0.1507, -0.1479, -0.1522,
         -0.0150,  0.0565,  0.0498,  0.0446,  0.0855,  0.0719, -0.0993, -0.1332,
          0.1146,  0.0594, -0.1146, -0.0349,  0.0119, -0.0355,  0.0920, -0.1082,
          0.0656, -0.0845,  0.0175, -0.0235, -0.0960,  0.0408, -0.0165, -0.0114,
         -0.1495, -0.0690, -0.1128, -0.0141, -0.0036,  0.0145, -0.0848,  0.1395,
          0.0654, -0.1266,  0.0604,  0.0919, -0.1001, -0.1501, -0.1477, -0.1513,
         -0.0165,  0.0573,  0.0809,  0.0960, -0.0817,  0.0817, -0.0885,  0.1184,
         -0.1448, -0.1244,  0.1468, -0.1111, -0.1466, -0.0426,  0.0847,  0.0310,
         -0.0616, -0.0719, -0.1379, -0.1167, -0.1404,  0.0800, -0.0758, -0.0486,
         -0.1166,  0.0992, -0.1067,  0.0241,  0.0253,  0.0450, -0.0316,  0.0383,
         -0.0972,  0.0779,  0.0625, -0.1123, -0.0674,  0.0688,  0.0281, -0.0808,
         -0.1104,  0.0678, -0.0740, -0.1239, -0.1453, -0.0648,  0.0610, -0.0785,
          0.0721,  0.1286,  0.0091, -0.1322,  0.0310,  0.1035,  0.0872,  0.1054,
         -0.1305, -0.1000, -0.0740, -0.1261, -0.0899,  0.0153,  0.0681,  0.0840,
          0.1153, -0.0397,  0.0712,  0.0374,  0.0778,  0.1317,  0.0285,  0.0623,
          0.1225,  0.0558,  0.0155, -0.0727,  0.0021, -0.1313, -0.0592, -0.1238,
          0.0482,  0.0701,  0.0496, -0.1092, -0.0645, -0.1057, -0.0461, -0.0961,
         -0.1258,  0.0888, -0.1010, -0.0645,  0.1060, -0.0347, -0.0980,  0.1382,
          0.1226, -0.0055, -0.0814,  0.1454,  0.1080,  0.1458, -0.0688, -0.1132,
          0.0275,  0.1415,  0.0774,  0.1376, -0.0596,  0.0408, -0.0770,  0.0177,
          0.0758, -0.1366, -0.0098, -0.1489,  0.0349,  0.0199, -0.0863,  0.0923,
          0.0698,  0.1108,  0.0507,  0.0890,  0.1375,  0.1508, -0.0994, -0.0386,
         -0.1129, -0.1241, -0.0763,  0.0039,  0.0757, -0.1073, -0.0283,  0.1082,
          0.1145, -0.0998, -0.1142,  0.1014,  0.0834,  0.1343, -0.1386, -0.0277]],
       device='cuda:0', requires_grad=True)

name conv1.bias 
shape:
 torch.Size([256]) 
grad:
 True 
date:
 tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0') 
parameter:
 Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)

name conv2.weight 
shape:
 torch.Size([256, 128]) 
grad:
 True 
date:
 tensor([[ 0.1033, -0.1131, -0.0232,  ..., -0.0121,  0.1186, -0.1117],
        [ 0.0875,  0.0634, -0.0450,  ..., -0.1234, -0.0231,  0.0862],
        [ 0.0364, -0.0200, -0.0325,  ..., -0.1155,  0.0152,  0.0577],
        ...,
        [ 0.0343,  0.0688, -0.0271,  ..., -0.0225, -0.0410,  0.0887],
        [-0.1190,  0.0623, -0.0277,  ..., -0.0911,  0.0930, -0.0883],
        [ 0.0785,  0.0157,  0.0790,  ..., -0.0892, -0.0557,  0.0060]],
       device='cuda:0') 
parameter:
 Parameter containing:
tensor([[ 0.1033, -0.1131, -0.0232,  ..., -0.0121,  0.1186, -0.1117],
        [ 0.0875,  0.0634, -0.0450,  ..., -0.1234, -0.0231,  0.0862],
        [ 0.0364, -0.0200, -0.0325,  ..., -0.1155,  0.0152,  0.0577],
        ...,
        [ 0.0343,  0.0688, -0.0271,  ..., -0.0225, -0.0410,  0.0887],
        [-0.1190,  0.0623, -0.0277,  ..., -0.0911,  0.0930, -0.0883],
        [ 0.0785,  0.0157,  0.0790,  ..., -0.0892, -0.0557,  0.0060]],
       device='cuda:0', requires_grad=True)

name conv2.bias 
shape:
 torch.Size([128]) 
grad:
 True 
date:
 tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0') 
parameter:
 Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)

name conv3.weight 
shape:
 torch.Size([128, 64]) 
grad:
 True 
date:
 tensor([[ 0.1074,  0.0395, -0.0181,  ...,  0.1562,  0.1711, -0.1662],
        [ 0.0282,  0.0266, -0.0902,  ...,  0.1137, -0.1077, -0.0763],
        [ 0.1363,  0.0054,  0.0843,  ..., -0.0802, -0.1350,  0.1134],
        ...,
        [ 0.1295, -0.1234, -0.0756,  ...,  0.1202,  0.1351, -0.1454],
        [ 0.1354, -0.1356,  0.1601,  ..., -0.1751,  0.0287, -0.1559],
        [-0.0554, -0.0236,  0.0794,  ..., -0.1155, -0.1172,  0.0500]],
       device='cuda:0') 
parameter:
 Parameter containing:
tensor([[ 0.1074,  0.0395, -0.0181,  ...,  0.1562,  0.1711, -0.1662],
        [ 0.0282,  0.0266, -0.0902,  ...,  0.1137, -0.1077, -0.0763],
        [ 0.1363,  0.0054,  0.0843,  ..., -0.0802, -0.1350,  0.1134],
        ...,
        [ 0.1295, -0.1234, -0.0756,  ...,  0.1202,  0.1351, -0.1454],
        [ 0.1354, -0.1356,  0.1601,  ..., -0.1751,  0.0287, -0.1559],
        [-0.0554, -0.0236,  0.0794,  ..., -0.1155, -0.1172,  0.0500]],
       device='cuda:0', requires_grad=True)

name conv3.bias 
shape:
 torch.Size([64]) 
grad:
 True 
date:
 tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0') 
parameter:
 Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)

name conv4.weight 
shape:
 torch.Size([64, 32]) 
grad:
 True 
date:
 tensor([[-0.1462,  0.1963,  0.0688,  ...,  0.0816,  0.0623,  0.0693],
        [-0.1146,  0.0367, -0.0501,  ...,  0.0535,  0.2478, -0.1548],
        [-0.1817, -0.1085, -0.1385,  ...,  0.2410, -0.1913, -0.0235],
        ...,
        [-0.0972, -0.0675,  0.1357,  ..., -0.0017,  0.1811,  0.0687],
        [-0.2139, -0.0594,  0.0369,  ..., -0.1103, -0.0692,  0.2090],
        [ 0.2348, -0.2424, -0.1721,  ..., -0.2321,  0.1812,  0.1810]],
       device='cuda:0') 
parameter:
 Parameter containing:
tensor([[-0.1462,  0.1963,  0.0688,  ...,  0.0816,  0.0623,  0.0693],
        [-0.1146,  0.0367, -0.0501,  ...,  0.0535,  0.2478, -0.1548],
        [-0.1817, -0.1085, -0.1385,  ...,  0.2410, -0.1913, -0.0235],
        ...,
        [-0.0972, -0.0675,  0.1357,  ..., -0.0017,  0.1811,  0.0687],
        [-0.2139, -0.0594,  0.0369,  ..., -0.1103, -0.0692,  0.2090],
        [ 0.2348, -0.2424, -0.1721,  ..., -0.2321,  0.1812,  0.1810]],
       device='cuda:0', requires_grad=True)

name conv4.bias 
shape:
 torch.Size([32]) 
grad:
 True 
date:
 tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0') 
parameter:
 Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)

name conv5.weight 
shape:
 torch.Size([32, 1]) 
grad:
 True 
date:
 tensor([[ 0.0473],
        [-0.1479],
        [ 0.2096],
        [-0.0384],
        [-0.0943],
        [-0.0339],
        [ 0.0113],
        [-0.0246],
        [ 0.1281],
        [ 0.1990],
        [-0.0576],
        [-0.0322],
        [ 0.2623],
        [ 0.2076],
        [ 0.1497],
        [-0.3733],
        [-0.4025],
        [-0.0094],
        [ 0.0306],
        [ 0.1796],
        [ 0.1328],
        [-0.0501],
        [ 0.1231],
        [ 0.4113],
        [ 0.0117],
        [ 0.1731],
        [-0.3579],
        [-0.3662],
        [-0.3792],
        [-0.1484],
        [-0.4055],
        [ 0.1664]], device='cuda:0') 
parameter:
 Parameter containing:
tensor([[ 0.0473],
        [-0.1479],
        [ 0.2096],
        [-0.0384],
        [-0.0943],
        [-0.0339],
        [ 0.0113],
        [-0.0246],
        [ 0.1281],
        [ 0.1990],
        [-0.0576],
        [-0.0322],
        [ 0.2623],
        [ 0.2076],
        [ 0.1497],
        [-0.3733],
        [-0.4025],
        [-0.0094],
        [ 0.0306],
        [ 0.1796],
        [ 0.1328],
        [-0.0501],
        [ 0.1231],
        [ 0.4113],
        [ 0.0117],
        [ 0.1731],
        [-0.3579],
        [-0.3662],
        [-0.3792],
        [-0.1484],
        [-0.4055],
        [ 0.1664]], device='cuda:0', requires_grad=True)

name conv5.bias 
shape:
 torch.Size([1]) 
grad:
 True 
date:
 tensor([0.], device='cuda:0') 
parameter:
 Parameter containing:
tensor([0.], device='cuda:0', requires_grad=True)

net when the batchsize is 2 GCN(
  (conv1): GraphConv(in=1, out=256, normalization=both, activation=None)
  (conv2): GraphConv(in=256, out=128, normalization=both, activation=None)
  (conv3): GraphConv(in=128, out=64, normalization=both, activation=None)
  (conv4): GraphConv(in=64, out=32, normalization=both, activation=None)
  (conv5): GraphConv(in=32, out=1, normalization=both, activation=None)
) 
number of the free learnable parameters: 43777

parameters of the network when the batchsize is 2:

name conv1.weight 
shape:
 torch.Size([1, 256]) 
grad:
 True 
date:
 tensor([[ 0.0214,  0.1264, -0.1271,  0.0609,  0.0807,  0.0166,  0.0513,  0.1053,
          0.0546, -0.0563,  0.0763,  0.0845,  0.0694,  0.1004, -0.1176,  0.0464,
         -0.0202, -0.1443, -0.0091,  0.0213, -0.0390, -0.0645, -0.0033,  0.0115,
         -0.1375, -0.0782, -0.0284, -0.1232,  0.1212, -0.1493, -0.1359,  0.0741,
         -0.1489,  0.1297,  0.1282, -0.0754, -0.0560,  0.0006, -0.1472, -0.0753,
         -0.1167,  0.0137,  0.1422, -0.0934,  0.1159, -0.0282,  0.0636,  0.0891,
          0.1077, -0.0893, -0.1286, -0.1315, -0.1267,  0.0959,  0.0455, -0.1070,
         -0.1453, -0.0836,  0.0128,  0.1325, -0.0925, -0.0239, -0.0608, -0.1049,
          0.0699,  0.1177,  0.0438, -0.0241,  0.0040, -0.1129, -0.0950, -0.1037,
          0.1060,  0.0370, -0.0575,  0.0605,  0.0093, -0.1405, -0.0380,  0.1132,
          0.1097,  0.0986, -0.1094, -0.1475, -0.0463,  0.0836, -0.1012, -0.0581,
         -0.1005,  0.0969,  0.1155,  0.0548,  0.0097, -0.0816,  0.0961,  0.1099,
         -0.0896,  0.1214,  0.0317, -0.0200,  0.0949,  0.0237, -0.0155, -0.0847,
          0.1149, -0.0618, -0.1387,  0.0535, -0.1416,  0.0805,  0.1425, -0.0905,
          0.0804, -0.1299, -0.1348, -0.0774,  0.0902, -0.0050,  0.0602, -0.0800,
          0.0574,  0.0309,  0.1375,  0.0416,  0.0250,  0.0071,  0.0441,  0.0034,
         -0.0799,  0.0588, -0.1296, -0.1196,  0.0998,  0.1449,  0.0800,  0.1049,
          0.0220, -0.0989, -0.0980, -0.1098,  0.1386, -0.0290, -0.0297,  0.0035,
         -0.1250, -0.0624, -0.1486, -0.0727, -0.0443,  0.1268,  0.0180, -0.1435,
          0.1164, -0.0072, -0.0030, -0.1507,  0.0002,  0.1197, -0.0683,  0.0144,
          0.1160,  0.0335, -0.1283,  0.0854,  0.0706, -0.1301, -0.0802,  0.0837,
          0.0346, -0.1495,  0.1285, -0.0044, -0.0337,  0.0593,  0.1465,  0.0186,
          0.1029, -0.0707, -0.0711,  0.0052,  0.0922,  0.0140,  0.0085,  0.1181,
          0.0637,  0.1352,  0.0712, -0.0789,  0.0514, -0.1388, -0.0558,  0.1139,
         -0.1528,  0.0188, -0.1484,  0.0202,  0.0275, -0.0912,  0.1195,  0.0337,
         -0.0990, -0.0380,  0.1110, -0.1112,  0.0921,  0.0343, -0.1122, -0.0515,
         -0.1192, -0.0541, -0.0393, -0.0499, -0.0475,  0.0076,  0.0831,  0.1294,
          0.1262,  0.0506, -0.0951,  0.0635, -0.0330,  0.1046,  0.0868,  0.0391,
         -0.0582, -0.1052, -0.0764, -0.1063, -0.0855, -0.0060,  0.1468,  0.0975,
         -0.0585,  0.0550,  0.0467, -0.1525, -0.1032, -0.0370,  0.0035,  0.0259,
         -0.0371,  0.0250,  0.0138,  0.1245,  0.1377,  0.0127,  0.0888, -0.1310,
          0.0084,  0.1441, -0.0126,  0.0546,  0.0605, -0.0540,  0.0011, -0.0930]],
       device='cuda:0') 
parameter:
 Parameter containing:
tensor([[ 0.0214,  0.1264, -0.1271,  0.0609,  0.0807,  0.0166,  0.0513,  0.1053,
          0.0546, -0.0563,  0.0763,  0.0845,  0.0694,  0.1004, -0.1176,  0.0464,
         -0.0202, -0.1443, -0.0091,  0.0213, -0.0390, -0.0645, -0.0033,  0.0115,
         -0.1375, -0.0782, -0.0284, -0.1232,  0.1212, -0.1493, -0.1359,  0.0741,
         -0.1489,  0.1297,  0.1282, -0.0754, -0.0560,  0.0006, -0.1472, -0.0753,
         -0.1167,  0.0137,  0.1422, -0.0934,  0.1159, -0.0282,  0.0636,  0.0891,
          0.1077, -0.0893, -0.1286, -0.1315, -0.1267,  0.0959,  0.0455, -0.1070,
         -0.1453, -0.0836,  0.0128,  0.1325, -0.0925, -0.0239, -0.0608, -0.1049,
          0.0699,  0.1177,  0.0438, -0.0241,  0.0040, -0.1129, -0.0950, -0.1037,
          0.1060,  0.0370, -0.0575,  0.0605,  0.0093, -0.1405, -0.0380,  0.1132,
          0.1097,  0.0986, -0.1094, -0.1475, -0.0463,  0.0836, -0.1012, -0.0581,
         -0.1005,  0.0969,  0.1155,  0.0548,  0.0097, -0.0816,  0.0961,  0.1099,
         -0.0896,  0.1214,  0.0317, -0.0200,  0.0949,  0.0237, -0.0155, -0.0847,
          0.1149, -0.0618, -0.1387,  0.0535, -0.1416,  0.0805,  0.1425, -0.0905,
          0.0804, -0.1299, -0.1348, -0.0774,  0.0902, -0.0050,  0.0602, -0.0800,
          0.0574,  0.0309,  0.1375,  0.0416,  0.0250,  0.0071,  0.0441,  0.0034,
         -0.0799,  0.0588, -0.1296, -0.1196,  0.0998,  0.1449,  0.0800,  0.1049,
          0.0220, -0.0989, -0.0980, -0.1098,  0.1386, -0.0290, -0.0297,  0.0035,
         -0.1250, -0.0624, -0.1486, -0.0727, -0.0443,  0.1268,  0.0180, -0.1435,
          0.1164, -0.0072, -0.0030, -0.1507,  0.0002,  0.1197, -0.0683,  0.0144,
          0.1160,  0.0335, -0.1283,  0.0854,  0.0706, -0.1301, -0.0802,  0.0837,
          0.0346, -0.1495,  0.1285, -0.0044, -0.0337,  0.0593,  0.1465,  0.0186,
          0.1029, -0.0707, -0.0711,  0.0052,  0.0922,  0.0140,  0.0085,  0.1181,
          0.0637,  0.1352,  0.0712, -0.0789,  0.0514, -0.1388, -0.0558,  0.1139,
         -0.1528,  0.0188, -0.1484,  0.0202,  0.0275, -0.0912,  0.1195,  0.0337,
         -0.0990, -0.0380,  0.1110, -0.1112,  0.0921,  0.0343, -0.1122, -0.0515,
         -0.1192, -0.0541, -0.0393, -0.0499, -0.0475,  0.0076,  0.0831,  0.1294,
          0.1262,  0.0506, -0.0951,  0.0635, -0.0330,  0.1046,  0.0868,  0.0391,
         -0.0582, -0.1052, -0.0764, -0.1063, -0.0855, -0.0060,  0.1468,  0.0975,
         -0.0585,  0.0550,  0.0467, -0.1525, -0.1032, -0.0370,  0.0035,  0.0259,
         -0.0371,  0.0250,  0.0138,  0.1245,  0.1377,  0.0127,  0.0888, -0.1310,
          0.0084,  0.1441, -0.0126,  0.0546,  0.0605, -0.0540,  0.0011, -0.0930]],
       device='cuda:0', requires_grad=True)

name conv1.bias 
shape:
 torch.Size([256]) 
grad:
 True 
date:
 tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0') 
parameter:
 Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)

name conv2.weight 
shape:
 torch.Size([256, 128]) 
grad:
 True 
date:
 tensor([[-0.0745, -0.0476,  0.0123,  ..., -0.0899, -0.0830, -0.0493],
        [ 0.1096,  0.0246, -0.1041,  ..., -0.0052, -0.0215,  0.0554],
        [-0.0880,  0.1059, -0.0148,  ..., -0.1128,  0.0474, -0.0997],
        ...,
        [ 0.0668, -0.1180,  0.0689,  ...,  0.0929,  0.0960,  0.1250],
        [ 0.0456,  0.0819,  0.1064,  ..., -0.0259,  0.1193,  0.0498],
        [-0.0979, -0.1214,  0.0882,  ..., -0.0489,  0.0921,  0.0762]],
       device='cuda:0') 
parameter:
 Parameter containing:
tensor([[-0.0745, -0.0476,  0.0123,  ..., -0.0899, -0.0830, -0.0493],
        [ 0.1096,  0.0246, -0.1041,  ..., -0.0052, -0.0215,  0.0554],
        [-0.0880,  0.1059, -0.0148,  ..., -0.1128,  0.0474, -0.0997],
        ...,
        [ 0.0668, -0.1180,  0.0689,  ...,  0.0929,  0.0960,  0.1250],
        [ 0.0456,  0.0819,  0.1064,  ..., -0.0259,  0.1193,  0.0498],
        [-0.0979, -0.1214,  0.0882,  ..., -0.0489,  0.0921,  0.0762]],
       device='cuda:0', requires_grad=True)

name conv2.bias 
shape:
 torch.Size([128]) 
grad:
 True 
date:
 tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0') 
parameter:
 Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)

name conv3.weight 
shape:
 torch.Size([128, 64]) 
grad:
 True 
date:
 tensor([[ 0.0428,  0.1621, -0.1719,  ..., -0.0777, -0.0873,  0.0909],
        [ 0.1070,  0.1129,  0.1539,  ...,  0.0901, -0.0098,  0.0338],
        [-0.0792,  0.0438,  0.1146,  ..., -0.0334,  0.1712,  0.1609],
        ...,
        [ 0.0583,  0.0875, -0.0837,  ..., -0.1115,  0.0354, -0.0617],
        [-0.0906, -0.1168, -0.1024,  ...,  0.0082,  0.1488, -0.0823],
        [-0.0332, -0.0826,  0.0397,  ..., -0.1625, -0.0290, -0.0333]],
       device='cuda:0') 
parameter:
 Parameter containing:
tensor([[ 0.0428,  0.1621, -0.1719,  ..., -0.0777, -0.0873,  0.0909],
        [ 0.1070,  0.1129,  0.1539,  ...,  0.0901, -0.0098,  0.0338],
        [-0.0792,  0.0438,  0.1146,  ..., -0.0334,  0.1712,  0.1609],
        ...,
        [ 0.0583,  0.0875, -0.0837,  ..., -0.1115,  0.0354, -0.0617],
        [-0.0906, -0.1168, -0.1024,  ...,  0.0082,  0.1488, -0.0823],
        [-0.0332, -0.0826,  0.0397,  ..., -0.1625, -0.0290, -0.0333]],
       device='cuda:0', requires_grad=True)

name conv3.bias 
shape:
 torch.Size([64]) 
grad:
 True 
date:
 tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0') 
parameter:
 Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)

name conv4.weight 
shape:
 torch.Size([64, 32]) 
grad:
 True 
date:
 tensor([[-0.2256, -0.0867, -0.0321,  ..., -0.1752,  0.0916,  0.1610],
        [-0.1366, -0.1466,  0.1436,  ...,  0.2028, -0.1758, -0.0349],
        [ 0.2360,  0.0386,  0.1517,  ..., -0.2263, -0.1425, -0.0223],
        ...,
        [-0.2372, -0.1196,  0.1505,  ...,  0.2204,  0.1700,  0.1957],
        [ 0.0985, -0.0125, -0.1363,  ...,  0.0150, -0.1197,  0.2254],
        [ 0.0029, -0.1289, -0.1381,  ...,  0.0504, -0.0095,  0.1926]],
       device='cuda:0') 
parameter:
 Parameter containing:
tensor([[-0.2256, -0.0867, -0.0321,  ..., -0.1752,  0.0916,  0.1610],
        [-0.1366, -0.1466,  0.1436,  ...,  0.2028, -0.1758, -0.0349],
        [ 0.2360,  0.0386,  0.1517,  ..., -0.2263, -0.1425, -0.0223],
        ...,
        [-0.2372, -0.1196,  0.1505,  ...,  0.2204,  0.1700,  0.1957],
        [ 0.0985, -0.0125, -0.1363,  ...,  0.0150, -0.1197,  0.2254],
        [ 0.0029, -0.1289, -0.1381,  ...,  0.0504, -0.0095,  0.1926]],
       device='cuda:0', requires_grad=True)

name conv4.bias 
shape:
 torch.Size([32]) 
grad:
 True 
date:
 tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0') 
parameter:
 Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)

name conv5.weight 
shape:
 torch.Size([32, 1]) 
grad:
 True 
date:
 tensor([[-0.2510],
        [-0.3039],
        [-0.1801],
        [ 0.2431],
        [ 0.2490],
        [-0.3700],
        [-0.2988],
        [-0.0062],
        [-0.0778],
        [-0.1146],
        [ 0.0254],
        [ 0.3377],
        [-0.1486],
        [ 0.0135],
        [-0.1486],
        [ 0.1059],
        [ 0.3219],
        [-0.2735],
        [-0.3547],
        [ 0.2414],
        [ 0.1132],
        [ 0.2966],
        [ 0.1196],
        [ 0.4036],
        [-0.3106],
        [-0.3670],
        [-0.3206],
        [ 0.2107],
        [-0.2133],
        [-0.1704],
        [-0.1675],
        [-0.3663]], device='cuda:0') 
parameter:
 Parameter containing:
tensor([[-0.2510],
        [-0.3039],
        [-0.1801],
        [ 0.2431],
        [ 0.2490],
        [-0.3700],
        [-0.2988],
        [-0.0062],
        [-0.0778],
        [-0.1146],
        [ 0.0254],
        [ 0.3377],
        [-0.1486],
        [ 0.0135],
        [-0.1486],
        [ 0.1059],
        [ 0.3219],
        [-0.2735],
        [-0.3547],
        [ 0.2414],
        [ 0.1132],
        [ 0.2966],
        [ 0.1196],
        [ 0.4036],
        [-0.3106],
        [-0.3670],
        [-0.3206],
        [ 0.2107],
        [-0.2133],
        [-0.1704],
        [-0.1675],
        [-0.3663]], device='cuda:0', requires_grad=True)

name conv5.bias 
shape:
 torch.Size([1]) 
grad:
 True 
date:
 tensor([0.], device='cuda:0') 
parameter:
 Parameter containing:
tensor([0.], device='cuda:0', requires_grad=True)



input node feature: 
g.ndata[nfet] tensor([[0.],
        [0.],
        [0.],
        ...,
        [0.],
        [0.],
        [0.]], device='cuda:0') 
g.ndata[nfet].shape torch.Size([6796, 1]) 
g.ndata[nfet].sum tensor(82.4738, device='cuda:0')



input graph: 
g Graph(num_nodes=6796, num_edges=73186,
      ndata_schemes={'nfet': Scheme(shape=(1,), dtype=torch.float32), 'h1': Scheme(shape=(256,), dtype=torch.float32), 'h2': Scheme(shape=(128,), dtype=torch.float32), 'h3': Scheme(shape=(64,), dtype=torch.float32)}
      edata_schemes={'efet': Scheme(shape=(1,), dtype=torch.float32)}) 
g.edata[efet].shape torch.Size([73186, 1]) 
g.edata[efet] tensor([[1.],
        [1.],
        [1.],
        ...,
        [1.],
        [1.],
        [1.]], device='cuda:0', requires_grad=True) 
g.edata[efet].sum tensor(73186., device='cuda:0', grad_fn=<SumBackward0>) 
g.ndata[nfet].shape torch.Size([6796, 1]) 
g.ndata[nfet] tensor([[0.],
        [0.],
        [0.],
        ...,
        [0.],
        [0.],
        [0.]], device='cuda:0') 
g.ndata[nfet].sum tensor(82.4738, device='cuda:0')
param0_0.shape torch.Size([256])
param.data[:, 0].shape torch.Size([256])



h after the first convolutional layer: 
 tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='cuda:0',
       grad_fn=<AddBackward0>) 
h.shape torch.Size([6796, 256]) 
h.sum tensor(-4.0435, device='cuda:0', grad_fn=<SumBackward0>)



h[:, 0].sum tensor(-2.9277, device='cuda:0', grad_fn=<SumBackward0>)

g.ndata[nfet].sum() * conv1.weight[0] tensor(-2.9932, device='cuda:0')



h[100].sum tensor(2.6610, device='cuda:0', grad_fn=<SumBackward0>)

g.ndata[nfet].sum() * conv1.weight[100] tensor(2.7206, device='cuda:0')



h[200].sum tensor(8.4554, device='cuda:0', grad_fn=<SumBackward0>)

g.ndata[nfet].sum() * conv1.weight[200] tensor(8.6447, device='cuda:0')



h1 after relu, the first updating, and another relu: 
 tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='cuda:0',
       grad_fn=<ReluBackward0>) 
h.shape torch.Size([6796, 256]) 
h.sum tensor(10597.5791, device='cuda:0', grad_fn=<SumBackward0>)



h2 after the second convolutional layer: 
 tensor([[0.0185, 0.0024, 0.0000,  ..., 0.0000, 0.0238, 0.0139],
        [0.0087, 0.0011, 0.0000,  ..., 0.0000, 0.0112, 0.0065],
        [0.0024, 0.0003, 0.0000,  ..., 0.0000, 0.0031, 0.0018],
        ...,
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]],
       device='cuda:0', grad_fn=<ReluBackward0>) 
h2.shape torch.Size([6796, 128]) 
h2.sum tensor(66647.7812, device='cuda:0', grad_fn=<SumBackward0>)



h2[0].sum tensor(1869.1360, device='cuda:0', grad_fn=<SumBackward0>)

(h1.sum(axis=0) * param0_2).sum() + bias0 tensor(118.8372, device='cuda:0', grad_fn=<AddBackward0>)



h2[100].sum tensor(590.3242, device='cuda:0', grad_fn=<SumBackward0>)

(h1.sum(axis=0) * param50_2).sum() + bias50 tensor(37.5305, device='cuda:0', grad_fn=<AddBackward0>)



h2[200].sum tensor(918.1503, device='cuda:0', grad_fn=<SumBackward0>)

(h1.sum(axis=0) * param100_2).sum() + bias100 tensor(58.3811, device='cuda:0', grad_fn=<AddBackward0>)



g Graph(num_nodes=6796, num_edges=73186,
      ndata_schemes={'nfet': Scheme(shape=(1,), dtype=torch.float32), 'h1': Scheme(shape=(256,), dtype=torch.float32), 'h2': Scheme(shape=(128,), dtype=torch.float32), 'h3': Scheme(shape=(64,), dtype=torch.float32)}
      edata_schemes={'efet': Scheme(shape=(1,), dtype=torch.float32)})



 output, 
h5 tensor([[-0.0906],
        [-0.0638],
        [-0.0430],
        ...,
        [ 0.0000],
        [ 0.0000],
        [ 0.0000]], device='cuda:0', grad_fn=<AddBackward0>) 
h5.shape torch.Size([6796, 1]) 
h5.sum tensor(-4193.7412, device='cuda:0', grad_fn=<SumBackward0>) 
g.edata[efet] tensor([[1.],
        [1.],
        [1.],
        ...,
        [1.],
        [1.],
        [1.]], device='cuda:0', requires_grad=True) 
g.edata[efet].shape torch.Size([73186, 1]) 
g.edata[efet].sum tensor(73186., device='cuda:0', grad_fn=<SumBackward0>)
Traceback (most recent call last):
  File "/hpcfs/bes/mlgpu/hoseinkk/MLTracking/otherparticles/pppipi/DGLBhaGcnReNewestweight7N4/./ModelBha.py", line 138, in <module>
    fig.colorbar(ax1.matshow(sitonsquare(TraTen[EvBTr]), aspect=2, vmin=0, vmax=1, extent=[0, 288, 0, 43], origin='lower')\
  File "/hpcfs/bes/mlgpu/hoseinkk/Miniconda3/envs/dgl1/lib/python3.9/site-packages/matplotlib/figure.py", line 1176, in colorbar
    cb = cbar.Colorbar(cax, mappable, **cb_kw)
  File "/hpcfs/bes/mlgpu/hoseinkk/Miniconda3/envs/dgl1/lib/python3.9/site-packages/matplotlib/colorbar.py", line 1197, in __init__
    super().__init__(ax, **kwargs)
  File "/hpcfs/bes/mlgpu/hoseinkk/Miniconda3/envs/dgl1/lib/python3.9/site-packages/matplotlib/_api/deprecation.py", line 471, in wrapper
    return func(*args, **kwargs)
TypeError: __init__() got an unexpected keyword argument 'fractqion'

real	0m22.911s
user	0m15.601s
sys	0m4.983s
