0: cmsgpu001.ihep.ac.cn
GPU 0: NVIDIA A100-PCIE-40GB (UUID: GPU-83673d1f-01b2-490d-5bc6-a84aaf3ddc65)
Allocate GPU cards : 0

modinfo:
filename:       /lib/modules/3.10.0-1160.71.1.el7.x86_64/extra/nvidia.ko.xz
firmware:       nvidia/515.65.01/gsp.bin
alias:          char-major-195-*
version:        515.65.01
supported:      external
license:        NVIDIA
retpoline:      Y
rhelversion:    7.9
srcversion:     8049D44E2C1B08F41E1B8A6
alias:          pci:v000010DEd*sv*sd*bc06sc80i00*
alias:          pci:v000010DEd*sv*sd*bc03sc02i00*
alias:          pci:v000010DEd*sv*sd*bc03sc00i00*
depends:        drm
vermagic:       3.10.0-1160.71.1.el7.x86_64 SMP mod_unload modversions 
signer:         DKMS module signing key
sig_key:        9B:9E:55:A9:86:D9:50:0B:6D:2D:9F:BA:A7:E6:45:39:D4:DD:5F:C6
sig_hashalgo:   sha512
parm:           NvSwitchRegDwords:NvSwitch regkey (charp)
parm:           NvSwitchBlacklist:NvSwitchBlacklist=uuid[,uuid...] (charp)
parm:           NVreg_ResmanDebugLevel:int
parm:           NVreg_RmLogonRC:int
parm:           NVreg_ModifyDeviceFiles:int
parm:           NVreg_DeviceFileUID:int
parm:           NVreg_DeviceFileGID:int
parm:           NVreg_DeviceFileMode:int
parm:           NVreg_InitializeSystemMemoryAllocations:int
parm:           NVreg_UsePageAttributeTable:int
parm:           NVreg_EnablePCIeGen3:int
parm:           NVreg_EnableMSI:int
parm:           NVreg_TCEBypassMode:int
parm:           NVreg_EnableStreamMemOPs:int
parm:           NVreg_RestrictProfilingToAdminUsers:int
parm:           NVreg_PreserveVideoMemoryAllocations:int
parm:           NVreg_EnableS0ixPowerManagement:int
parm:           NVreg_S0ixPowerManagementVideoMemoryThreshold:int
parm:           NVreg_DynamicPowerManagement:int
parm:           NVreg_DynamicPowerManagementVideoMemoryThreshold:int
parm:           NVreg_EnableGpuFirmware:int
parm:           NVreg_EnableGpuFirmwareLogs:int
parm:           NVreg_OpenRmEnableUnsupportedGpus:int
parm:           NVreg_EnableUserNUMAManagement:int
parm:           NVreg_MemoryPoolSize:int
parm:           NVreg_KMallocHeapMaxSize:int
parm:           NVreg_VMallocHeapMaxSize:int
parm:           NVreg_IgnoreMMIOCheck:int
parm:           NVreg_NvLinkDisable:int
parm:           NVreg_EnablePCIERelaxedOrderingMode:int
parm:           NVreg_RegisterPCIDriver:int
parm:           NVreg_EnableDbgBreakpoint:int
parm:           NVreg_RegistryDwords:charp
parm:           NVreg_RegistryDwordsPerDevice:charp
parm:           NVreg_RmMsg:charp
parm:           NVreg_GpuBlacklist:charp
parm:           NVreg_TemporaryFilePath:charp
parm:           NVreg_ExcludedGpus:charp
parm:           NVreg_DmaRemapPeerMmio:int
parm:           rm_firmware_active:charp

nvidia-smi:
Mon Sep 19 05:29:35 2022       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 515.65.01    Driver Version: 515.65.01    CUDA Version: 11.7     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  NVIDIA A100-PCI...  On   | 00000000:3B:00.0 Off |                    0 |
| N/A   25C    P0    32W / 250W |      0MiB / 40960MiB |      0%      Default |
|                               |                      |             Disabled |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+

nvcc --version:
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2021 NVIDIA Corporation
Built on Sun_Mar_21_19:15:46_PDT_2021
Cuda compilation tools, release 11.3, V11.3.58
Build cuda_11.3.r11.3/compiler.29745058_0

 torch version: 1.10.2

 cuda version: 11.3

 is cuda available: True

 CUDNN VERSION: 8200

 Number CUDA Devices: 1

 CUDA Device Name: NVIDIA A100-PCIE-40GB

 CUDA Device Total Memory [GB]: 42.358472704

 Device capability: (8, 0) 

 Cuda deviice: <torch.cuda.device object at 0x2b016b59a8e0> 

 Is cuda initialized: True

 CUDA_HOME: /hpcfs/bes/mlgpu/hoseinkk/Miniconda3/envs/dgl1

real	0m4.635s
user	0m2.483s
sys	0m1.116s
/hpcfs/bes/mlgpu/hoseinkk/Miniconda3/envs/dgl1/lib/python3.9/site-packages/cupy/_environment.py:438: UserWarning: 
--------------------------------------------------------------------------------

  CuPy may not function correctly because multiple CuPy packages are installed
  in your environment:

    cupy, cupy-cuda110

  Follow these steps to resolve this issue:

    1. For all packages listed above, run the following command to remove all
       existing CuPy installations:

         $ pip uninstall <package_name>

      If you previously installed CuPy via conda, also run the following:

         $ conda uninstall cupy

    2. Install the appropriate CuPy package.
       Refer to the Installation Guide for detailed instructions.

         https://docs.cupy.dev/en/stable/install.html

--------------------------------------------------------------------------------

  warnings.warn(f'''
[05:29:58] /opt/dgl/src/runtime/tensordispatch.cc:43: TensorDispatcher: dlopen failed: /hpcfs/bes/mlgpu/hoseinkk/Miniconda3/envs/dgl1/lib/python3.9/site-packages/dgl/tensoradapter/pytorch/libtensoradapter_pytorch_1.10.2.so: cannot open shared object file: No such file or directory
Using backend: pytorch





 Loading data ... 



training set shape (80000, 6796) 
sum 8401300

target set shape (80000, 6796) 
sum 5574226

TraTen and TrvTen shape:
 torch.Size([80000, 6796]) torch.Size([80000, 6796])




 The Network ... 






 The graph ... 



edge_index
 tensor([[   0,    1,    2,  ..., 4907, 4907, 4907],
        [   1,    2,    3,  ..., 4918, 4919, 4920]]) 

edge_index shape
 torch.Size([2, 36593])
graph: Graph(num_nodes=6796, num_edges=36593,
      ndata_schemes={}
      edata_schemes={}) 
nodes: tensor([   0,    1,    2,  ..., 6793, 6794, 6795], device='cuda:0') 
nodes shape: torch.Size([6796]) 
edges: (tensor([   0,    1,    2,  ..., 4907, 4907, 4907], device='cuda:0'), tensor([   1,    2,    3,  ..., 4918, 4919, 4920], device='cuda:0')) 
edges shae:

number of nodes: 6796

number of edges: 73186

node features (random input): tensor([[-0.3253],
        [ 0.6484],
        [-0.9367],
        ...,
        [ 0.1503],
        [ 0.7739],
        [-1.5413]], device='cuda:0', requires_grad=True) 
node features sum: tensor(120.1565, device='cuda:0', grad_fn=<SumBackward0>)

edges features: tensor([[1.],
        [1.],
        [1.],
        ...,
        [1.],
        [1.],
        [1.]], device='cuda:0', requires_grad=True) 
edges features sum: tensor(73186., device='cuda:0', grad_fn=<SumBackward0>)

example: 
Out degrees of node 234: 14

In degrees of node 234: 14
Model name: DGLBhaGcnReNewestweight7N4

net GCN(
  (conv1): GraphConv(in=1, out=256, normalization=both, activation=None)
  (conv2): GraphConv(in=256, out=128, normalization=both, activation=None)
  (conv3): GraphConv(in=128, out=64, normalization=both, activation=None)
  (conv4): GraphConv(in=64, out=32, normalization=both, activation=None)
  (conv5): GraphConv(in=32, out=1, normalization=both, activation=None)
) 
number of the free learnable parameters: 43777

parameters of the network:

name conv1.weight 
shape:
 torch.Size([1, 256]) 
grad:
 True 
date:
 tensor([[-0.0159, -0.0814, -0.0522,  0.1513,  0.0250,  0.0677,  0.0746,  0.1474,
         -0.1146, -0.1482, -0.0364, -0.0595,  0.1417, -0.0688,  0.0907,  0.1288,
         -0.0536, -0.0770,  0.1432, -0.0980, -0.0042,  0.0441,  0.0857,  0.0151,
          0.1527,  0.0755, -0.1002,  0.1058, -0.0033,  0.0093,  0.0650,  0.0807,
         -0.1272, -0.0833, -0.1410, -0.0585, -0.1150,  0.0671, -0.0411,  0.1345,
         -0.0995,  0.0031,  0.0382, -0.0278, -0.1486,  0.1136,  0.0253,  0.0913,
          0.0714, -0.0797, -0.0487, -0.1193,  0.0976,  0.1208,  0.1071, -0.1480,
          0.0179,  0.1398,  0.0612,  0.1341,  0.1229, -0.0864,  0.0848,  0.1329,
          0.0303,  0.0874, -0.0097,  0.1026, -0.0596,  0.0715,  0.0634,  0.0929,
          0.0883,  0.1462, -0.0535,  0.0633,  0.1045,  0.0349, -0.1222,  0.0818,
         -0.1491,  0.1411, -0.0861,  0.0560, -0.1201,  0.1098,  0.0142,  0.1128,
         -0.0634, -0.1324,  0.1173, -0.1165, -0.0493,  0.0132, -0.0131, -0.1273,
          0.0461,  0.0433, -0.0671, -0.0186,  0.1360,  0.0628,  0.1244, -0.0549,
         -0.0236,  0.0529,  0.0688, -0.1062,  0.1427, -0.0258, -0.1497, -0.0352,
         -0.0202,  0.0288,  0.0680, -0.0229,  0.0996, -0.0541,  0.0149,  0.0719,
          0.0670, -0.1373, -0.0033, -0.1089,  0.0157,  0.1504, -0.1333,  0.0890,
         -0.0060,  0.1160,  0.0141, -0.0752, -0.1523, -0.1355, -0.0313, -0.0485,
         -0.1186,  0.1225, -0.0130,  0.0582,  0.0732,  0.0606, -0.0817, -0.0131,
          0.0148,  0.1061, -0.1095, -0.0813, -0.1338, -0.0946, -0.0136, -0.0931,
          0.1239,  0.0191, -0.0919, -0.0456, -0.0363, -0.0036,  0.1420,  0.1166,
         -0.0094, -0.1315,  0.0931,  0.0416, -0.0525,  0.0745, -0.0663, -0.0640,
         -0.0046,  0.0238,  0.0075, -0.0516, -0.0699, -0.1352,  0.0520,  0.1514,
         -0.0063, -0.0860, -0.1165,  0.1082,  0.0283,  0.1220,  0.0904,  0.0560,
          0.1296, -0.0005,  0.0141, -0.0632, -0.1383, -0.0483,  0.0760, -0.0674,
         -0.0173,  0.0025,  0.0158, -0.0959, -0.1038, -0.1228,  0.1474, -0.1342,
          0.0913, -0.0029, -0.0117,  0.0254, -0.0139,  0.0341, -0.1185,  0.0978,
         -0.0459,  0.0618, -0.1363,  0.0851,  0.0823,  0.0359, -0.1260,  0.1398,
          0.0914, -0.0666,  0.0096,  0.1432, -0.0233,  0.0439, -0.0105, -0.0489,
         -0.0154, -0.1112,  0.0210,  0.1315, -0.0623,  0.0147,  0.0526,  0.0063,
          0.1095,  0.0535,  0.0006, -0.0660,  0.0402, -0.0958,  0.0484, -0.0659,
          0.1487, -0.1422, -0.0219, -0.0936,  0.1187, -0.0121, -0.1310,  0.1255,
          0.0591, -0.0383, -0.0923,  0.0350, -0.1503, -0.1460, -0.1314,  0.1185]],
       device='cuda:0') 
parameter:
 Parameter containing:
tensor([[-0.0159, -0.0814, -0.0522,  0.1513,  0.0250,  0.0677,  0.0746,  0.1474,
         -0.1146, -0.1482, -0.0364, -0.0595,  0.1417, -0.0688,  0.0907,  0.1288,
         -0.0536, -0.0770,  0.1432, -0.0980, -0.0042,  0.0441,  0.0857,  0.0151,
          0.1527,  0.0755, -0.1002,  0.1058, -0.0033,  0.0093,  0.0650,  0.0807,
         -0.1272, -0.0833, -0.1410, -0.0585, -0.1150,  0.0671, -0.0411,  0.1345,
         -0.0995,  0.0031,  0.0382, -0.0278, -0.1486,  0.1136,  0.0253,  0.0913,
          0.0714, -0.0797, -0.0487, -0.1193,  0.0976,  0.1208,  0.1071, -0.1480,
          0.0179,  0.1398,  0.0612,  0.1341,  0.1229, -0.0864,  0.0848,  0.1329,
          0.0303,  0.0874, -0.0097,  0.1026, -0.0596,  0.0715,  0.0634,  0.0929,
          0.0883,  0.1462, -0.0535,  0.0633,  0.1045,  0.0349, -0.1222,  0.0818,
         -0.1491,  0.1411, -0.0861,  0.0560, -0.1201,  0.1098,  0.0142,  0.1128,
         -0.0634, -0.1324,  0.1173, -0.1165, -0.0493,  0.0132, -0.0131, -0.1273,
          0.0461,  0.0433, -0.0671, -0.0186,  0.1360,  0.0628,  0.1244, -0.0549,
         -0.0236,  0.0529,  0.0688, -0.1062,  0.1427, -0.0258, -0.1497, -0.0352,
         -0.0202,  0.0288,  0.0680, -0.0229,  0.0996, -0.0541,  0.0149,  0.0719,
          0.0670, -0.1373, -0.0033, -0.1089,  0.0157,  0.1504, -0.1333,  0.0890,
         -0.0060,  0.1160,  0.0141, -0.0752, -0.1523, -0.1355, -0.0313, -0.0485,
         -0.1186,  0.1225, -0.0130,  0.0582,  0.0732,  0.0606, -0.0817, -0.0131,
          0.0148,  0.1061, -0.1095, -0.0813, -0.1338, -0.0946, -0.0136, -0.0931,
          0.1239,  0.0191, -0.0919, -0.0456, -0.0363, -0.0036,  0.1420,  0.1166,
         -0.0094, -0.1315,  0.0931,  0.0416, -0.0525,  0.0745, -0.0663, -0.0640,
         -0.0046,  0.0238,  0.0075, -0.0516, -0.0699, -0.1352,  0.0520,  0.1514,
         -0.0063, -0.0860, -0.1165,  0.1082,  0.0283,  0.1220,  0.0904,  0.0560,
          0.1296, -0.0005,  0.0141, -0.0632, -0.1383, -0.0483,  0.0760, -0.0674,
         -0.0173,  0.0025,  0.0158, -0.0959, -0.1038, -0.1228,  0.1474, -0.1342,
          0.0913, -0.0029, -0.0117,  0.0254, -0.0139,  0.0341, -0.1185,  0.0978,
         -0.0459,  0.0618, -0.1363,  0.0851,  0.0823,  0.0359, -0.1260,  0.1398,
          0.0914, -0.0666,  0.0096,  0.1432, -0.0233,  0.0439, -0.0105, -0.0489,
         -0.0154, -0.1112,  0.0210,  0.1315, -0.0623,  0.0147,  0.0526,  0.0063,
          0.1095,  0.0535,  0.0006, -0.0660,  0.0402, -0.0958,  0.0484, -0.0659,
          0.1487, -0.1422, -0.0219, -0.0936,  0.1187, -0.0121, -0.1310,  0.1255,
          0.0591, -0.0383, -0.0923,  0.0350, -0.1503, -0.1460, -0.1314,  0.1185]],
       device='cuda:0', requires_grad=True)

name conv1.bias 
shape:
 torch.Size([256]) 
grad:
 True 
date:
 tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0') 
parameter:
 Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)

name conv2.weight 
shape:
 torch.Size([256, 128]) 
grad:
 True 
date:
 tensor([[ 0.1090, -0.0418, -0.0600,  ..., -0.0035,  0.0387,  0.0771],
        [-0.1176,  0.0302,  0.1020,  ...,  0.1089,  0.0105, -0.0701],
        [ 0.0920,  0.0782,  0.1157,  ...,  0.0766, -0.1167, -0.0335],
        ...,
        [-0.0335, -0.0604, -0.0545,  ..., -0.0054, -0.0383,  0.0926],
        [-0.0776, -0.0294,  0.1066,  ...,  0.0126,  0.0573,  0.0806],
        [ 0.1067, -0.1136,  0.1135,  ..., -0.0985,  0.0245,  0.0572]],
       device='cuda:0') 
parameter:
 Parameter containing:
tensor([[ 0.1090, -0.0418, -0.0600,  ..., -0.0035,  0.0387,  0.0771],
        [-0.1176,  0.0302,  0.1020,  ...,  0.1089,  0.0105, -0.0701],
        [ 0.0920,  0.0782,  0.1157,  ...,  0.0766, -0.1167, -0.0335],
        ...,
        [-0.0335, -0.0604, -0.0545,  ..., -0.0054, -0.0383,  0.0926],
        [-0.0776, -0.0294,  0.1066,  ...,  0.0126,  0.0573,  0.0806],
        [ 0.1067, -0.1136,  0.1135,  ..., -0.0985,  0.0245,  0.0572]],
       device='cuda:0', requires_grad=True)

name conv2.bias 
shape:
 torch.Size([128]) 
grad:
 True 
date:
 tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0') 
parameter:
 Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)

name conv3.weight 
shape:
 torch.Size([128, 64]) 
grad:
 True 
date:
 tensor([[-0.1534,  0.0072,  0.1200,  ...,  0.0979,  0.1747, -0.1365],
        [ 0.1117,  0.1371, -0.0653,  ...,  0.1706,  0.0114,  0.0868],
        [-0.0921,  0.0655, -0.1206,  ..., -0.1555, -0.1006, -0.0997],
        ...,
        [-0.0249,  0.0658,  0.1706,  ...,  0.1233,  0.1583,  0.1025],
        [ 0.1716,  0.0859,  0.0829,  ...,  0.1356,  0.0361,  0.1646],
        [ 0.0438, -0.0612, -0.0008,  ...,  0.1209, -0.1285,  0.1688]],
       device='cuda:0') 
parameter:
 Parameter containing:
tensor([[-0.1534,  0.0072,  0.1200,  ...,  0.0979,  0.1747, -0.1365],
        [ 0.1117,  0.1371, -0.0653,  ...,  0.1706,  0.0114,  0.0868],
        [-0.0921,  0.0655, -0.1206,  ..., -0.1555, -0.1006, -0.0997],
        ...,
        [-0.0249,  0.0658,  0.1706,  ...,  0.1233,  0.1583,  0.1025],
        [ 0.1716,  0.0859,  0.0829,  ...,  0.1356,  0.0361,  0.1646],
        [ 0.0438, -0.0612, -0.0008,  ...,  0.1209, -0.1285,  0.1688]],
       device='cuda:0', requires_grad=True)

name conv3.bias 
shape:
 torch.Size([64]) 
grad:
 True 
date:
 tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0') 
parameter:
 Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)

name conv4.weight 
shape:
 torch.Size([64, 32]) 
grad:
 True 
date:
 tensor([[ 0.1371,  0.1845,  0.0941,  ...,  0.0883,  0.1411, -0.1936],
        [-0.0893,  0.1247,  0.2381,  ...,  0.1244, -0.1070, -0.0055],
        [-0.1273, -0.1188,  0.1300,  ..., -0.1296, -0.2075,  0.0650],
        ...,
        [-0.1844, -0.0325, -0.1824,  ...,  0.0989,  0.0059,  0.0501],
        [-0.1950, -0.1405, -0.1989,  ...,  0.2232,  0.1627, -0.1124],
        [-0.1415,  0.2426,  0.0826,  ..., -0.1869, -0.1680, -0.1264]],
       device='cuda:0') 
parameter:
 Parameter containing:
tensor([[ 0.1371,  0.1845,  0.0941,  ...,  0.0883,  0.1411, -0.1936],
        [-0.0893,  0.1247,  0.2381,  ...,  0.1244, -0.1070, -0.0055],
        [-0.1273, -0.1188,  0.1300,  ..., -0.1296, -0.2075,  0.0650],
        ...,
        [-0.1844, -0.0325, -0.1824,  ...,  0.0989,  0.0059,  0.0501],
        [-0.1950, -0.1405, -0.1989,  ...,  0.2232,  0.1627, -0.1124],
        [-0.1415,  0.2426,  0.0826,  ..., -0.1869, -0.1680, -0.1264]],
       device='cuda:0', requires_grad=True)

name conv4.bias 
shape:
 torch.Size([32]) 
grad:
 True 
date:
 tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0') 
parameter:
 Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)

name conv5.weight 
shape:
 torch.Size([32, 1]) 
grad:
 True 
date:
 tensor([[-0.0073],
        [-0.0123],
        [ 0.0430],
        [-0.4216],
        [-0.1820],
        [-0.1399],
        [-0.0740],
        [ 0.2454],
        [-0.0413],
        [ 0.0205],
        [-0.0932],
        [ 0.1480],
        [-0.2561],
        [-0.4220],
        [ 0.1795],
        [-0.0132],
        [-0.0666],
        [ 0.3278],
        [ 0.1030],
        [ 0.0502],
        [ 0.1394],
        [ 0.2824],
        [ 0.0341],
        [-0.3403],
        [-0.3499],
        [ 0.0501],
        [ 0.1634],
        [ 0.4115],
        [-0.4074],
        [-0.3427],
        [ 0.2566],
        [ 0.0780]], device='cuda:0') 
parameter:
 Parameter containing:
tensor([[-0.0073],
        [-0.0123],
        [ 0.0430],
        [-0.4216],
        [-0.1820],
        [-0.1399],
        [-0.0740],
        [ 0.2454],
        [-0.0413],
        [ 0.0205],
        [-0.0932],
        [ 0.1480],
        [-0.2561],
        [-0.4220],
        [ 0.1795],
        [-0.0132],
        [-0.0666],
        [ 0.3278],
        [ 0.1030],
        [ 0.0502],
        [ 0.1394],
        [ 0.2824],
        [ 0.0341],
        [-0.3403],
        [-0.3499],
        [ 0.0501],
        [ 0.1634],
        [ 0.4115],
        [-0.4074],
        [-0.3427],
        [ 0.2566],
        [ 0.0780]], device='cuda:0', requires_grad=True)

name conv5.bias 
shape:
 torch.Size([1]) 
grad:
 True 
date:
 tensor([0.], device='cuda:0') 
parameter:
 Parameter containing:
tensor([0.], device='cuda:0', requires_grad=True)
Traceback (most recent call last):
  File "/hpcfs/bes/mlgpu/hoseinkk/MLTracking/otherparticles/pppipi/DGLBhaGcnReNewestweight7N4/./Results.py", line 2, in <module>
    from ModelBha import *
  File "/hpcfs/bes/mlgpu/hoseinkk/MLTracking/otherparticles/pppipi/DGLBhaGcnReNewestweight7N4/ModelBha.py", line 132, in <module>
    net = GCN(1, 1).to('device')
  File "/hpcfs/bes/mlgpu/hoseinkk/Miniconda3/envs/dgl1/lib/python3.9/site-packages/torch/nn/modules/module.py", line 880, in to
    device, dtype, non_blocking, convert_to_format = torch._C._nn._parse_to(*args, **kwargs)
RuntimeError: Expected one of cpu, cuda, xpu, mkldnn, opengl, opencl, ideep, hip, ve, ort, mlc, xla, lazy, vulkan, meta, hpu device type at start of device string: device

real	0m21.480s
user	0m14.968s
sys	0m4.412s
