0: cmsgpu001.ihep.ac.cn
GPU 0: NVIDIA A100-PCIE-40GB (UUID: GPU-83673d1f-01b2-490d-5bc6-a84aaf3ddc65)
Allocate GPU cards : 0

modinfo:
filename:       /lib/modules/3.10.0-1160.71.1.el7.x86_64/extra/nvidia.ko.xz
firmware:       nvidia/515.65.01/gsp.bin
alias:          char-major-195-*
version:        515.65.01
supported:      external
license:        NVIDIA
retpoline:      Y
rhelversion:    7.9
srcversion:     8049D44E2C1B08F41E1B8A6
alias:          pci:v000010DEd*sv*sd*bc06sc80i00*
alias:          pci:v000010DEd*sv*sd*bc03sc02i00*
alias:          pci:v000010DEd*sv*sd*bc03sc00i00*
depends:        drm
vermagic:       3.10.0-1160.71.1.el7.x86_64 SMP mod_unload modversions 
signer:         DKMS module signing key
sig_key:        9B:9E:55:A9:86:D9:50:0B:6D:2D:9F:BA:A7:E6:45:39:D4:DD:5F:C6
sig_hashalgo:   sha512
parm:           NvSwitchRegDwords:NvSwitch regkey (charp)
parm:           NvSwitchBlacklist:NvSwitchBlacklist=uuid[,uuid...] (charp)
parm:           NVreg_ResmanDebugLevel:int
parm:           NVreg_RmLogonRC:int
parm:           NVreg_ModifyDeviceFiles:int
parm:           NVreg_DeviceFileUID:int
parm:           NVreg_DeviceFileGID:int
parm:           NVreg_DeviceFileMode:int
parm:           NVreg_InitializeSystemMemoryAllocations:int
parm:           NVreg_UsePageAttributeTable:int
parm:           NVreg_EnablePCIeGen3:int
parm:           NVreg_EnableMSI:int
parm:           NVreg_TCEBypassMode:int
parm:           NVreg_EnableStreamMemOPs:int
parm:           NVreg_RestrictProfilingToAdminUsers:int
parm:           NVreg_PreserveVideoMemoryAllocations:int
parm:           NVreg_EnableS0ixPowerManagement:int
parm:           NVreg_S0ixPowerManagementVideoMemoryThreshold:int
parm:           NVreg_DynamicPowerManagement:int
parm:           NVreg_DynamicPowerManagementVideoMemoryThreshold:int
parm:           NVreg_EnableGpuFirmware:int
parm:           NVreg_EnableGpuFirmwareLogs:int
parm:           NVreg_OpenRmEnableUnsupportedGpus:int
parm:           NVreg_EnableUserNUMAManagement:int
parm:           NVreg_MemoryPoolSize:int
parm:           NVreg_KMallocHeapMaxSize:int
parm:           NVreg_VMallocHeapMaxSize:int
parm:           NVreg_IgnoreMMIOCheck:int
parm:           NVreg_NvLinkDisable:int
parm:           NVreg_EnablePCIERelaxedOrderingMode:int
parm:           NVreg_RegisterPCIDriver:int
parm:           NVreg_EnableDbgBreakpoint:int
parm:           NVreg_RegistryDwords:charp
parm:           NVreg_RegistryDwordsPerDevice:charp
parm:           NVreg_RmMsg:charp
parm:           NVreg_GpuBlacklist:charp
parm:           NVreg_TemporaryFilePath:charp
parm:           NVreg_ExcludedGpus:charp
parm:           NVreg_DmaRemapPeerMmio:int
parm:           rm_firmware_active:charp

nvidia-smi:
Sat Sep 17 06:21:59 2022       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 515.65.01    Driver Version: 515.65.01    CUDA Version: 11.7     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  NVIDIA A100-PCI...  On   | 00000000:3B:00.0 Off |                    0 |
| N/A   21C    P0    31W / 250W |      0MiB / 40960MiB |      0%      Default |
|                               |                      |             Disabled |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+

nvcc --version:
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2021 NVIDIA Corporation
Built on Sun_Mar_21_19:15:46_PDT_2021
Cuda compilation tools, release 11.3, V11.3.58
Build cuda_11.3.r11.3/compiler.29745058_0

 torch version: 1.10.2

 cuda version: 11.3

 is cuda available: True

 CUDNN VERSION: 8200

 Number CUDA Devices: 1

 CUDA Device Name: NVIDIA A100-PCIE-40GB

 CUDA Device Total Memory [GB]: 42.358472704

 Device capability: (8, 0) 

 Cuda deviice: <torch.cuda.device object at 0x2b884a7128e0> 

 Is cuda initialized: True

 CUDA_HOME: /hpcfs/bes/mlgpu/hoseinkk/Miniconda3/envs/dgl1

real	0m4.742s
user	0m2.523s
sys	0m1.089s
[06:22:06] /opt/dgl/src/runtime/tensordispatch.cc:43: TensorDispatcher: dlopen failed: /hpcfs/bes/mlgpu/hoseinkk/Miniconda3/envs/dgl1/lib/python3.9/site-packages/dgl/tensoradapter/pytorch/libtensoradapter_pytorch_1.10.2.so: cannot open shared object file: No such file or directory
Using backend: pytorch
/hpcfs/bes/mlgpu/hoseinkk/Miniconda3/envs/dgl1/lib/python3.9/site-packages/cupy/_environment.py:438: UserWarning: 
--------------------------------------------------------------------------------

  CuPy may not function correctly because multiple CuPy packages are installed
  in your environment:

    cupy, cupy-cuda110

  Follow these steps to resolve this issue:

    1. For all packages listed above, run the following command to remove all
       existing CuPy installations:

         $ pip uninstall <package_name>

      If you previously installed CuPy via conda, also run the following:

         $ conda uninstall cupy

    2. Install the appropriate CuPy package.
       Refer to the Installation Guide for detailed instructions.

         https://docs.cupy.dev/en/stable/install.html

--------------------------------------------------------------------------------

  warnings.warn(f'''




 The Network ... 






 The graph ... 



edge_index
 tensor([[   0,    1,    2,  ..., 4907, 4907, 4907],
        [   1,    2,    3,  ..., 4918, 4919, 4920]]) 

edge_index shape
 torch.Size([2, 36593])
graph: Graph(num_nodes=6796, num_edges=36593,
      ndata_schemes={}
      edata_schemes={}) 
nodes: tensor([   0,    1,    2,  ..., 6793, 6794, 6795], device='cuda:0') 
nodes shape: torch.Size([6796]) 
edges: (tensor([   0,    1,    2,  ..., 4907, 4907, 4907], device='cuda:0'), tensor([   1,    2,    3,  ..., 4918, 4919, 4920], device='cuda:0')) 
edges shae:

number of nodes: 6796

number of edges: 73186

node features (random input): tensor([[ 1.1791],
        [-1.9738],
        [-1.0884],
        ...,
        [ 1.8724],
        [ 1.7623],
        [ 1.3894]], device='cuda:0', requires_grad=True) 
node features sum: tensor(-100.5481, device='cuda:0', grad_fn=<SumBackward0>)

edges features: tensor([[1.],
        [1.],
        [1.],
        ...,
        [1.],
        [1.],
        [1.]], device='cuda:0', requires_grad=True) 
edges features sum: tensor(73186., device='cuda:0', grad_fn=<SumBackward0>)

example: 
Out degrees of node 234: 14

In degrees of node 234: 14





 Loading data ... 



training set shape (80000, 6796) 
sum 8401300

target set shape (80000, 6796) 
sum 5574226

TraTen and TrvTen shape:
 torch.Size([80000, 6796]) torch.Size([80000, 6796])
Model name: DGLBhaGcnReNewestweight7N4

net GCN(
  (conv1): GraphConv(in=1, out=256, normalization=both, activation=None)
  (conv2): GraphConv(in=256, out=128, normalization=both, activation=None)
  (conv3): GraphConv(in=128, out=64, normalization=both, activation=None)
  (conv4): GraphConv(in=64, out=32, normalization=both, activation=None)
  (conv5): GraphConv(in=32, out=1, normalization=both, activation=None)
) 
number of the free learnable parameters: 43777

parameters of the network:

name conv1.weight 
shape:
 torch.Size([1, 256]) 
grad:
 True 
date:
 tensor([[-0.1067,  0.0837,  0.0386, -0.0027,  0.1164, -0.0334, -0.1210,  0.1461,
          0.0885, -0.0771, -0.1340, -0.0611,  0.1079,  0.1454,  0.1395,  0.0945,
          0.1447,  0.0892,  0.1164,  0.0491, -0.1416, -0.1229, -0.1052, -0.0477,
         -0.1003,  0.1000, -0.0410,  0.0604, -0.0481, -0.0054, -0.1397,  0.0249,
          0.1404, -0.0766,  0.0853, -0.1517, -0.0661,  0.0410,  0.0276,  0.1090,
         -0.1138,  0.1236, -0.1208,  0.1224, -0.0492, -0.0018, -0.0616,  0.1151,
          0.0782,  0.0518,  0.0419,  0.0875,  0.1190, -0.0061, -0.0274, -0.0744,
         -0.0782, -0.0421, -0.0755,  0.0986, -0.1016,  0.1512, -0.1095, -0.1299,
          0.1241, -0.1329, -0.0131,  0.0421,  0.0516, -0.0053,  0.0404,  0.0085,
         -0.0705, -0.0206, -0.0967,  0.0478,  0.0878, -0.1045, -0.1189, -0.0539,
          0.0846, -0.0199, -0.1146,  0.0252, -0.0494, -0.1383, -0.0071,  0.1366,
         -0.0733, -0.0199,  0.1486, -0.1400,  0.0184,  0.1376, -0.0971, -0.0718,
          0.0311,  0.1380,  0.1215, -0.0286,  0.0655, -0.0684, -0.0833, -0.1431,
          0.0869, -0.0596,  0.1365, -0.0243, -0.0703, -0.1200,  0.0409,  0.0855,
          0.0699, -0.0404, -0.0230,  0.1197, -0.0788, -0.0875,  0.0161,  0.1381,
          0.1320,  0.1473, -0.0832, -0.0349,  0.1273,  0.0652,  0.0236,  0.0821,
          0.0413,  0.1130,  0.0075, -0.0188,  0.0706, -0.1421,  0.0119, -0.1265,
          0.0127,  0.0101, -0.1441, -0.1424,  0.0110, -0.0128,  0.1015,  0.1170,
          0.0475,  0.0479, -0.0006, -0.0237,  0.0962,  0.1401, -0.0569,  0.1523,
         -0.1124,  0.0693,  0.0084, -0.0693, -0.0491, -0.0206,  0.0331,  0.0131,
          0.0857,  0.0141, -0.0438, -0.1406, -0.1261, -0.0517, -0.0377,  0.0940,
          0.0730,  0.1230,  0.0802,  0.0888,  0.0863, -0.0309, -0.0563, -0.0362,
         -0.1000, -0.0700,  0.0495, -0.1075,  0.1508, -0.0789,  0.1248, -0.1142,
          0.0523, -0.0472,  0.1169,  0.0573, -0.1017, -0.0397, -0.0215,  0.0016,
          0.1447,  0.0468,  0.0051, -0.0328,  0.0009, -0.0346, -0.0099, -0.0116,
         -0.0579,  0.0692,  0.0798, -0.0571,  0.0819, -0.1230,  0.0614, -0.1052,
          0.1356,  0.1019, -0.0525, -0.1461,  0.1348, -0.0180, -0.0797, -0.0875,
         -0.0249, -0.1014, -0.0172,  0.0221,  0.1044,  0.0260,  0.1228,  0.0702,
         -0.0315, -0.0539,  0.0597, -0.1159, -0.1091, -0.1180,  0.0773,  0.0749,
          0.0102, -0.0931, -0.0701,  0.1043,  0.1456, -0.0166, -0.1143,  0.0584,
          0.0562, -0.0457, -0.0791, -0.1358,  0.0745,  0.0994, -0.0723,  0.1512,
         -0.1458,  0.0947,  0.1143, -0.1471,  0.1078,  0.1062,  0.0417,  0.0946]],
       device='cuda:0') 
parameter:
 Parameter containing:
tensor([[-0.1067,  0.0837,  0.0386, -0.0027,  0.1164, -0.0334, -0.1210,  0.1461,
          0.0885, -0.0771, -0.1340, -0.0611,  0.1079,  0.1454,  0.1395,  0.0945,
          0.1447,  0.0892,  0.1164,  0.0491, -0.1416, -0.1229, -0.1052, -0.0477,
         -0.1003,  0.1000, -0.0410,  0.0604, -0.0481, -0.0054, -0.1397,  0.0249,
          0.1404, -0.0766,  0.0853, -0.1517, -0.0661,  0.0410,  0.0276,  0.1090,
         -0.1138,  0.1236, -0.1208,  0.1224, -0.0492, -0.0018, -0.0616,  0.1151,
          0.0782,  0.0518,  0.0419,  0.0875,  0.1190, -0.0061, -0.0274, -0.0744,
         -0.0782, -0.0421, -0.0755,  0.0986, -0.1016,  0.1512, -0.1095, -0.1299,
          0.1241, -0.1329, -0.0131,  0.0421,  0.0516, -0.0053,  0.0404,  0.0085,
         -0.0705, -0.0206, -0.0967,  0.0478,  0.0878, -0.1045, -0.1189, -0.0539,
          0.0846, -0.0199, -0.1146,  0.0252, -0.0494, -0.1383, -0.0071,  0.1366,
         -0.0733, -0.0199,  0.1486, -0.1400,  0.0184,  0.1376, -0.0971, -0.0718,
          0.0311,  0.1380,  0.1215, -0.0286,  0.0655, -0.0684, -0.0833, -0.1431,
          0.0869, -0.0596,  0.1365, -0.0243, -0.0703, -0.1200,  0.0409,  0.0855,
          0.0699, -0.0404, -0.0230,  0.1197, -0.0788, -0.0875,  0.0161,  0.1381,
          0.1320,  0.1473, -0.0832, -0.0349,  0.1273,  0.0652,  0.0236,  0.0821,
          0.0413,  0.1130,  0.0075, -0.0188,  0.0706, -0.1421,  0.0119, -0.1265,
          0.0127,  0.0101, -0.1441, -0.1424,  0.0110, -0.0128,  0.1015,  0.1170,
          0.0475,  0.0479, -0.0006, -0.0237,  0.0962,  0.1401, -0.0569,  0.1523,
         -0.1124,  0.0693,  0.0084, -0.0693, -0.0491, -0.0206,  0.0331,  0.0131,
          0.0857,  0.0141, -0.0438, -0.1406, -0.1261, -0.0517, -0.0377,  0.0940,
          0.0730,  0.1230,  0.0802,  0.0888,  0.0863, -0.0309, -0.0563, -0.0362,
         -0.1000, -0.0700,  0.0495, -0.1075,  0.1508, -0.0789,  0.1248, -0.1142,
          0.0523, -0.0472,  0.1169,  0.0573, -0.1017, -0.0397, -0.0215,  0.0016,
          0.1447,  0.0468,  0.0051, -0.0328,  0.0009, -0.0346, -0.0099, -0.0116,
         -0.0579,  0.0692,  0.0798, -0.0571,  0.0819, -0.1230,  0.0614, -0.1052,
          0.1356,  0.1019, -0.0525, -0.1461,  0.1348, -0.0180, -0.0797, -0.0875,
         -0.0249, -0.1014, -0.0172,  0.0221,  0.1044,  0.0260,  0.1228,  0.0702,
         -0.0315, -0.0539,  0.0597, -0.1159, -0.1091, -0.1180,  0.0773,  0.0749,
          0.0102, -0.0931, -0.0701,  0.1043,  0.1456, -0.0166, -0.1143,  0.0584,
          0.0562, -0.0457, -0.0791, -0.1358,  0.0745,  0.0994, -0.0723,  0.1512,
         -0.1458,  0.0947,  0.1143, -0.1471,  0.1078,  0.1062,  0.0417,  0.0946]],
       device='cuda:0', requires_grad=True)

name conv1.bias 
shape:
 torch.Size([256]) 
grad:
 True 
date:
 tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0') 
parameter:
 Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)

name conv2.weight 
shape:
 torch.Size([256, 128]) 
grad:
 True 
date:
 tensor([[-0.0804,  0.0557, -0.1210,  ..., -0.0975, -0.0920, -0.0242],
        [-0.1195, -0.0749, -0.0242,  ..., -0.0608,  0.1074,  0.0283],
        [ 0.0351,  0.0633, -0.0612,  ...,  0.0554,  0.0264,  0.0319],
        ...,
        [ 0.0607, -0.0148,  0.0118,  ...,  0.0529, -0.0116, -0.0336],
        [-0.0726, -0.0783, -0.0041,  ..., -0.0683,  0.0497, -0.0751],
        [-0.0875,  0.0745, -0.0541,  ..., -0.0507,  0.0379, -0.1122]],
       device='cuda:0') 
parameter:
 Parameter containing:
tensor([[-0.0804,  0.0557, -0.1210,  ..., -0.0975, -0.0920, -0.0242],
        [-0.1195, -0.0749, -0.0242,  ..., -0.0608,  0.1074,  0.0283],
        [ 0.0351,  0.0633, -0.0612,  ...,  0.0554,  0.0264,  0.0319],
        ...,
        [ 0.0607, -0.0148,  0.0118,  ...,  0.0529, -0.0116, -0.0336],
        [-0.0726, -0.0783, -0.0041,  ..., -0.0683,  0.0497, -0.0751],
        [-0.0875,  0.0745, -0.0541,  ..., -0.0507,  0.0379, -0.1122]],
       device='cuda:0', requires_grad=True)

name conv2.bias 
shape:
 torch.Size([128]) 
grad:
 True 
date:
 tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0') 
parameter:
 Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)

name conv3.weight 
shape:
 torch.Size([128, 64]) 
grad:
 True 
date:
 tensor([[ 0.1730, -0.1543,  0.0936,  ...,  0.0136,  0.1262,  0.0114],
        [-0.0899,  0.1124, -0.0060,  ..., -0.1654, -0.1026, -0.1685],
        [-0.1349, -0.0120,  0.1241,  ..., -0.0778, -0.0765,  0.1468],
        ...,
        [-0.0694, -0.1495,  0.0735,  ...,  0.0789,  0.0795,  0.1696],
        [-0.1745, -0.1024,  0.0741,  ...,  0.0241,  0.1607,  0.1475],
        [ 0.1269, -0.0734,  0.1705,  ...,  0.1143,  0.0154,  0.0811]],
       device='cuda:0') 
parameter:
 Parameter containing:
tensor([[ 0.1730, -0.1543,  0.0936,  ...,  0.0136,  0.1262,  0.0114],
        [-0.0899,  0.1124, -0.0060,  ..., -0.1654, -0.1026, -0.1685],
        [-0.1349, -0.0120,  0.1241,  ..., -0.0778, -0.0765,  0.1468],
        ...,
        [-0.0694, -0.1495,  0.0735,  ...,  0.0789,  0.0795,  0.1696],
        [-0.1745, -0.1024,  0.0741,  ...,  0.0241,  0.1607,  0.1475],
        [ 0.1269, -0.0734,  0.1705,  ...,  0.1143,  0.0154,  0.0811]],
       device='cuda:0', requires_grad=True)

name conv3.bias 
shape:
 torch.Size([64]) 
grad:
 True 
date:
 tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0') 
parameter:
 Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)

name conv4.weight 
shape:
 torch.Size([64, 32]) 
grad:
 True 
date:
 tensor([[-0.2439,  0.1949, -0.1985,  ..., -0.0519,  0.0102,  0.1124],
        [-0.1160, -0.2106,  0.0680,  ..., -0.1285, -0.1294,  0.1893],
        [ 0.0429,  0.2185, -0.1585,  ..., -0.0420, -0.2472,  0.1170],
        ...,
        [ 0.0168,  0.0722,  0.1170,  ..., -0.0970, -0.2421, -0.1489],
        [ 0.2191, -0.0897, -0.0215,  ..., -0.0096, -0.0538, -0.0862],
        [-0.2180,  0.0364, -0.1346,  ..., -0.2314, -0.1704, -0.0646]],
       device='cuda:0') 
parameter:
 Parameter containing:
tensor([[-0.2439,  0.1949, -0.1985,  ..., -0.0519,  0.0102,  0.1124],
        [-0.1160, -0.2106,  0.0680,  ..., -0.1285, -0.1294,  0.1893],
        [ 0.0429,  0.2185, -0.1585,  ..., -0.0420, -0.2472,  0.1170],
        ...,
        [ 0.0168,  0.0722,  0.1170,  ..., -0.0970, -0.2421, -0.1489],
        [ 0.2191, -0.0897, -0.0215,  ..., -0.0096, -0.0538, -0.0862],
        [-0.2180,  0.0364, -0.1346,  ..., -0.2314, -0.1704, -0.0646]],
       device='cuda:0', requires_grad=True)

name conv4.bias 
shape:
 torch.Size([32]) 
grad:
 True 
date:
 tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0') 
parameter:
 Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)

name conv5.weight 
shape:
 torch.Size([32, 1]) 
grad:
 True 
date:
 tensor([[ 0.0722],
        [ 0.2177],
        [-0.2335],
        [ 0.3408],
        [ 0.2560],
        [ 0.1862],
        [ 0.0471],
        [-0.4114],
        [ 0.1544],
        [ 0.1306],
        [-0.1214],
        [-0.2708],
        [ 0.1684],
        [-0.2254],
        [-0.0149],
        [-0.1911],
        [-0.3344],
        [-0.1471],
        [-0.0660],
        [-0.1196],
        [ 0.1572],
        [ 0.0815],
        [ 0.3256],
        [-0.1762],
        [-0.2179],
        [-0.2697],
        [-0.3326],
        [-0.3461],
        [-0.1426],
        [ 0.0901],
        [ 0.3411],
        [ 0.0820]], device='cuda:0') 
parameter:
 Parameter containing:
tensor([[ 0.0722],
        [ 0.2177],
        [-0.2335],
        [ 0.3408],
        [ 0.2560],
        [ 0.1862],
        [ 0.0471],
        [-0.4114],
        [ 0.1544],
        [ 0.1306],
        [-0.1214],
        [-0.2708],
        [ 0.1684],
        [-0.2254],
        [-0.0149],
        [-0.1911],
        [-0.3344],
        [-0.1471],
        [-0.0660],
        [-0.1196],
        [ 0.1572],
        [ 0.0815],
        [ 0.3256],
        [-0.1762],
        [-0.2179],
        [-0.2697],
        [-0.3326],
        [-0.3461],
        [-0.1426],
        [ 0.0901],
        [ 0.3411],
        [ 0.0820]], device='cuda:0', requires_grad=True)

name conv5.bias 
shape:
 torch.Size([1]) 
grad:
 True 
date:
 tensor([0.], device='cuda:0') 
parameter:
 Parameter containing:
tensor([0.], device='cuda:0', requires_grad=True)

net when the batchsize is 2 GCN(
  (conv1): GraphConv(in=1, out=256, normalization=both, activation=None)
  (conv2): GraphConv(in=256, out=128, normalization=both, activation=None)
  (conv3): GraphConv(in=128, out=64, normalization=both, activation=None)
  (conv4): GraphConv(in=64, out=32, normalization=both, activation=None)
  (conv5): GraphConv(in=32, out=1, normalization=both, activation=None)
) 
number of the free learnable parameters: 43777

parameters of the network when the batchsize is 2:

name conv1.weight 
shape:
 torch.Size([1, 256]) 
grad:
 True 
date:
 tensor([[-0.0468,  0.0633, -0.0161, -0.0680,  0.0092, -0.0138,  0.0791, -0.0402,
         -0.0319, -0.0088, -0.1332, -0.1436, -0.1390, -0.1382, -0.1320, -0.0580,
          0.1217,  0.1021,  0.1265, -0.0151, -0.0488, -0.0380,  0.0277, -0.1243,
         -0.1065,  0.0716,  0.1448,  0.0084, -0.0577,  0.1491, -0.1058,  0.0832,
         -0.1421, -0.1347, -0.0140,  0.1066, -0.1024, -0.0160,  0.1412, -0.1302,
          0.0396, -0.1459,  0.1380,  0.1028, -0.1102,  0.1514,  0.1038, -0.0801,
          0.0584, -0.1113, -0.0739,  0.1420, -0.0573,  0.0470,  0.0307,  0.1501,
          0.0656,  0.1342, -0.1518,  0.0081,  0.0677,  0.0822,  0.0632,  0.1251,
         -0.0976,  0.0205, -0.0940,  0.1191, -0.1451, -0.1097,  0.0610, -0.1089,
          0.1179,  0.1039,  0.0187,  0.0564, -0.0502,  0.0153,  0.0431,  0.0544,
          0.0484, -0.1014, -0.1470,  0.1432, -0.0525,  0.0511, -0.1455, -0.1342,
         -0.0408, -0.0477,  0.0329,  0.0891, -0.1363, -0.1414,  0.0858, -0.0531,
         -0.0575,  0.0421,  0.0778,  0.1128,  0.0357,  0.0029, -0.0691,  0.1072,
          0.0758,  0.0965, -0.0493, -0.1192,  0.0707, -0.1487, -0.1512, -0.0260,
         -0.0243, -0.0635,  0.0649,  0.1400, -0.1029, -0.0777, -0.1007, -0.0564,
         -0.0031,  0.0677, -0.1473, -0.0060,  0.0398,  0.0692,  0.1017, -0.0277,
         -0.0638,  0.1367,  0.1273, -0.0426, -0.1013, -0.0314,  0.0645,  0.0916,
          0.0048, -0.0977,  0.0268, -0.0566,  0.0060, -0.0888,  0.0430,  0.0987,
          0.0085,  0.0690,  0.1478,  0.1336, -0.0062,  0.1422,  0.0315, -0.0861,
         -0.0194,  0.1105, -0.0862,  0.0954,  0.1209,  0.0949,  0.0262, -0.0597,
         -0.0265,  0.1526, -0.0491, -0.0766, -0.1080,  0.0370,  0.1468, -0.0337,
         -0.0361, -0.1169, -0.0287, -0.0442,  0.1477, -0.1073, -0.0252,  0.1165,
          0.1326,  0.1124,  0.0597, -0.0162,  0.0817,  0.0887, -0.0721, -0.1522,
          0.1458, -0.1371,  0.0673,  0.0341, -0.0423,  0.1421,  0.0197, -0.0488,
         -0.1105,  0.1371,  0.1299,  0.1463,  0.0421, -0.0996,  0.1048, -0.0325,
         -0.1414, -0.0108,  0.0653,  0.1525, -0.0470, -0.1232,  0.1500, -0.1221,
          0.1321,  0.0021, -0.0361, -0.1054, -0.0601, -0.0468,  0.1037, -0.0842,
         -0.1410, -0.0349,  0.0613, -0.1144,  0.0382,  0.0190,  0.0397,  0.1323,
          0.1230,  0.0748, -0.1370,  0.0492, -0.1093,  0.1361, -0.0688, -0.0186,
         -0.0840,  0.0598,  0.0215, -0.0754,  0.1224,  0.0282,  0.0057, -0.1284,
          0.0312, -0.1042, -0.0811,  0.0302,  0.0484, -0.0408, -0.1039,  0.0725,
          0.0790, -0.0494, -0.0849, -0.1142,  0.1515,  0.1210,  0.0207, -0.1298]],
       device='cuda:0') 
parameter:
 Parameter containing:
tensor([[-0.0468,  0.0633, -0.0161, -0.0680,  0.0092, -0.0138,  0.0791, -0.0402,
         -0.0319, -0.0088, -0.1332, -0.1436, -0.1390, -0.1382, -0.1320, -0.0580,
          0.1217,  0.1021,  0.1265, -0.0151, -0.0488, -0.0380,  0.0277, -0.1243,
         -0.1065,  0.0716,  0.1448,  0.0084, -0.0577,  0.1491, -0.1058,  0.0832,
         -0.1421, -0.1347, -0.0140,  0.1066, -0.1024, -0.0160,  0.1412, -0.1302,
          0.0396, -0.1459,  0.1380,  0.1028, -0.1102,  0.1514,  0.1038, -0.0801,
          0.0584, -0.1113, -0.0739,  0.1420, -0.0573,  0.0470,  0.0307,  0.1501,
          0.0656,  0.1342, -0.1518,  0.0081,  0.0677,  0.0822,  0.0632,  0.1251,
         -0.0976,  0.0205, -0.0940,  0.1191, -0.1451, -0.1097,  0.0610, -0.1089,
          0.1179,  0.1039,  0.0187,  0.0564, -0.0502,  0.0153,  0.0431,  0.0544,
          0.0484, -0.1014, -0.1470,  0.1432, -0.0525,  0.0511, -0.1455, -0.1342,
         -0.0408, -0.0477,  0.0329,  0.0891, -0.1363, -0.1414,  0.0858, -0.0531,
         -0.0575,  0.0421,  0.0778,  0.1128,  0.0357,  0.0029, -0.0691,  0.1072,
          0.0758,  0.0965, -0.0493, -0.1192,  0.0707, -0.1487, -0.1512, -0.0260,
         -0.0243, -0.0635,  0.0649,  0.1400, -0.1029, -0.0777, -0.1007, -0.0564,
         -0.0031,  0.0677, -0.1473, -0.0060,  0.0398,  0.0692,  0.1017, -0.0277,
         -0.0638,  0.1367,  0.1273, -0.0426, -0.1013, -0.0314,  0.0645,  0.0916,
          0.0048, -0.0977,  0.0268, -0.0566,  0.0060, -0.0888,  0.0430,  0.0987,
          0.0085,  0.0690,  0.1478,  0.1336, -0.0062,  0.1422,  0.0315, -0.0861,
         -0.0194,  0.1105, -0.0862,  0.0954,  0.1209,  0.0949,  0.0262, -0.0597,
         -0.0265,  0.1526, -0.0491, -0.0766, -0.1080,  0.0370,  0.1468, -0.0337,
         -0.0361, -0.1169, -0.0287, -0.0442,  0.1477, -0.1073, -0.0252,  0.1165,
          0.1326,  0.1124,  0.0597, -0.0162,  0.0817,  0.0887, -0.0721, -0.1522,
          0.1458, -0.1371,  0.0673,  0.0341, -0.0423,  0.1421,  0.0197, -0.0488,
         -0.1105,  0.1371,  0.1299,  0.1463,  0.0421, -0.0996,  0.1048, -0.0325,
         -0.1414, -0.0108,  0.0653,  0.1525, -0.0470, -0.1232,  0.1500, -0.1221,
          0.1321,  0.0021, -0.0361, -0.1054, -0.0601, -0.0468,  0.1037, -0.0842,
         -0.1410, -0.0349,  0.0613, -0.1144,  0.0382,  0.0190,  0.0397,  0.1323,
          0.1230,  0.0748, -0.1370,  0.0492, -0.1093,  0.1361, -0.0688, -0.0186,
         -0.0840,  0.0598,  0.0215, -0.0754,  0.1224,  0.0282,  0.0057, -0.1284,
          0.0312, -0.1042, -0.0811,  0.0302,  0.0484, -0.0408, -0.1039,  0.0725,
          0.0790, -0.0494, -0.0849, -0.1142,  0.1515,  0.1210,  0.0207, -0.1298]],
       device='cuda:0', requires_grad=True)

name conv1.bias 
shape:
 torch.Size([256]) 
grad:
 True 
date:
 tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0') 
parameter:
 Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)

name conv2.weight 
shape:
 torch.Size([256, 128]) 
grad:
 True 
date:
 tensor([[-0.0499,  0.0481,  0.1110,  ...,  0.0773,  0.0554,  0.0806],
        [ 0.0828,  0.0939,  0.0057,  ..., -0.0960,  0.0480, -0.0076],
        [ 0.1008,  0.0562,  0.0601,  ...,  0.0213, -0.0326, -0.0397],
        ...,
        [ 0.0073,  0.0463, -0.1212,  ..., -0.0684,  0.0179,  0.0746],
        [-0.0753, -0.0790,  0.0604,  ...,  0.1087, -0.0134, -0.1117],
        [-0.0014, -0.0142, -0.0745,  ...,  0.0444, -0.0417,  0.0715]],
       device='cuda:0') 
parameter:
 Parameter containing:
tensor([[-0.0499,  0.0481,  0.1110,  ...,  0.0773,  0.0554,  0.0806],
        [ 0.0828,  0.0939,  0.0057,  ..., -0.0960,  0.0480, -0.0076],
        [ 0.1008,  0.0562,  0.0601,  ...,  0.0213, -0.0326, -0.0397],
        ...,
        [ 0.0073,  0.0463, -0.1212,  ..., -0.0684,  0.0179,  0.0746],
        [-0.0753, -0.0790,  0.0604,  ...,  0.1087, -0.0134, -0.1117],
        [-0.0014, -0.0142, -0.0745,  ...,  0.0444, -0.0417,  0.0715]],
       device='cuda:0', requires_grad=True)

name conv2.bias 
shape:
 torch.Size([128]) 
grad:
 True 
date:
 tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0') 
parameter:
 Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)

name conv3.weight 
shape:
 torch.Size([128, 64]) 
grad:
 True 
date:
 tensor([[-0.1225,  0.0704, -0.1069,  ...,  0.1351, -0.1332,  0.1577],
        [-0.1666, -0.1594,  0.0345,  ..., -0.0775,  0.0467,  0.1476],
        [-0.1118,  0.1422,  0.0021,  ..., -0.0840, -0.0694, -0.0115],
        ...,
        [-0.0914, -0.0786,  0.0459,  ...,  0.0474,  0.0377, -0.0734],
        [-0.0717, -0.1393, -0.1291,  ..., -0.1442, -0.0818, -0.1051],
        [ 0.1172, -0.0232, -0.0818,  ..., -0.1762, -0.0382,  0.0556]],
       device='cuda:0') 
parameter:
 Parameter containing:
tensor([[-0.1225,  0.0704, -0.1069,  ...,  0.1351, -0.1332,  0.1577],
        [-0.1666, -0.1594,  0.0345,  ..., -0.0775,  0.0467,  0.1476],
        [-0.1118,  0.1422,  0.0021,  ..., -0.0840, -0.0694, -0.0115],
        ...,
        [-0.0914, -0.0786,  0.0459,  ...,  0.0474,  0.0377, -0.0734],
        [-0.0717, -0.1393, -0.1291,  ..., -0.1442, -0.0818, -0.1051],
        [ 0.1172, -0.0232, -0.0818,  ..., -0.1762, -0.0382,  0.0556]],
       device='cuda:0', requires_grad=True)

name conv3.bias 
shape:
 torch.Size([64]) 
grad:
 True 
date:
 tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0') 
parameter:
 Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)

name conv4.weight 
shape:
 torch.Size([64, 32]) 
grad:
 True 
date:
 tensor([[-2.2148e-01, -6.7225e-02, -1.0137e-01,  ...,  1.6229e-01,
          1.6930e-01,  1.3284e-01],
        [-2.3220e-01, -2.4510e-01,  1.2066e-01,  ..., -2.1913e-01,
          5.3468e-04, -6.2420e-02],
        [-1.8949e-01,  4.0661e-02, -9.5266e-02,  ..., -1.4365e-01,
          2.4797e-01, -1.7017e-01],
        ...,
        [ 9.0423e-02,  2.4997e-01,  4.7765e-03,  ..., -4.8613e-02,
          7.6234e-02,  1.2739e-02],
        [-1.1804e-01, -1.1301e-01, -1.6269e-01,  ...,  1.3972e-01,
          2.3063e-01, -2.2900e-02],
        [ 7.4650e-02,  2.0988e-01,  2.9057e-05,  ..., -1.1108e-01,
          8.1177e-02, -7.2151e-02]], device='cuda:0') 
parameter:
 Parameter containing:
tensor([[-2.2148e-01, -6.7225e-02, -1.0137e-01,  ...,  1.6229e-01,
          1.6930e-01,  1.3284e-01],
        [-2.3220e-01, -2.4510e-01,  1.2066e-01,  ..., -2.1913e-01,
          5.3468e-04, -6.2420e-02],
        [-1.8949e-01,  4.0661e-02, -9.5266e-02,  ..., -1.4365e-01,
          2.4797e-01, -1.7017e-01],
        ...,
        [ 9.0423e-02,  2.4997e-01,  4.7765e-03,  ..., -4.8613e-02,
          7.6234e-02,  1.2739e-02],
        [-1.1804e-01, -1.1301e-01, -1.6269e-01,  ...,  1.3972e-01,
          2.3063e-01, -2.2900e-02],
        [ 7.4650e-02,  2.0988e-01,  2.9057e-05,  ..., -1.1108e-01,
          8.1177e-02, -7.2151e-02]], device='cuda:0', requires_grad=True)

name conv4.bias 
shape:
 torch.Size([32]) 
grad:
 True 
date:
 tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0') 
parameter:
 Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)

name conv5.weight 
shape:
 torch.Size([32, 1]) 
grad:
 True 
date:
 tensor([[ 0.3213],
        [ 0.2378],
        [-0.0033],
        [-0.2578],
        [ 0.4116],
        [ 0.1669],
        [ 0.4168],
        [ 0.1179],
        [-0.2370],
        [-0.3889],
        [-0.2582],
        [-0.1199],
        [ 0.0180],
        [ 0.2590],
        [-0.1461],
        [ 0.4238],
        [ 0.4037],
        [ 0.2978],
        [-0.2563],
        [-0.1199],
        [ 0.4016],
        [ 0.4077],
        [-0.1739],
        [-0.0211],
        [-0.1663],
        [ 0.4019],
        [-0.2425],
        [-0.0564],
        [-0.0573],
        [-0.3794],
        [ 0.2090],
        [-0.2005]], device='cuda:0') 
parameter:
 Parameter containing:
tensor([[ 0.3213],
        [ 0.2378],
        [-0.0033],
        [-0.2578],
        [ 0.4116],
        [ 0.1669],
        [ 0.4168],
        [ 0.1179],
        [-0.2370],
        [-0.3889],
        [-0.2582],
        [-0.1199],
        [ 0.0180],
        [ 0.2590],
        [-0.1461],
        [ 0.4238],
        [ 0.4037],
        [ 0.2978],
        [-0.2563],
        [-0.1199],
        [ 0.4016],
        [ 0.4077],
        [-0.1739],
        [-0.0211],
        [-0.1663],
        [ 0.4019],
        [-0.2425],
        [-0.0564],
        [-0.0573],
        [-0.3794],
        [ 0.2090],
        [-0.2005]], device='cuda:0', requires_grad=True)

name conv5.bias 
shape:
 torch.Size([1]) 
grad:
 True 
date:
 tensor([0.], device='cuda:0') 
parameter:
 Parameter containing:
tensor([0.], device='cuda:0', requires_grad=True)



input node feature: 
g.ndata[nfet] tensor([[0.],
        [0.],
        [0.],
        ...,
        [0.],
        [0.],
        [0.]], device='cuda:0') 
g.ndata[nfet].shape torch.Size([6796, 1]) 
g.ndata[nfet].sum tensor(82.4738, device='cuda:0')



input graph: 
g Graph(num_nodes=6796, num_edges=73186,
      ndata_schemes={'nfet': Scheme(shape=(1,), dtype=torch.float32), 'h1': Scheme(shape=(256,), dtype=torch.float32), 'h2': Scheme(shape=(128,), dtype=torch.float32), 'h3': Scheme(shape=(64,), dtype=torch.float32)}
      edata_schemes={'efet': Scheme(shape=(1,), dtype=torch.float32)}) 
g.edata[efet].shape torch.Size([73186, 1]) 
g.edata[efet] tensor([[1.],
        [1.],
        [1.],
        ...,
        [1.],
        [1.],
        [1.]], device='cuda:0', requires_grad=True) 
g.edata[efet].sum tensor(73186., device='cuda:0', grad_fn=<SumBackward0>) 
g.ndata[nfet].shape torch.Size([6796, 1]) 
g.ndata[nfet] tensor([[0.],
        [0.],
        [0.],
        ...,
        [0.],
        [0.],
        [0.]], device='cuda:0') 
g.ndata[nfet].sum tensor(82.4738, device='cuda:0')
param0_0.shape torch.Size([256])
param.data[:, 0].shape torch.Size([256])



h after the first convolutional layer: 
 tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='cuda:0',
       grad_fn=<AddBackward0>) 
h.shape torch.Size([6796, 256]) 
h.sum tensor(80.5995, device='cuda:0', grad_fn=<SumBackward0>)



h[:, 0].sum tensor(-7.6743, device='cuda:0', grad_fn=<SumBackward0>)

g.ndata[nfet].sum() * conv1.weight[0] tensor(-7.8460, device='cuda:0')



h[100].sum tensor(10.4505, device='cuda:0', grad_fn=<SumBackward0>)

g.ndata[nfet].sum() * conv1.weight[100] tensor(10.6844, device='cuda:0')



h[200].sum tensor(7.8151, device='cuda:0', grad_fn=<SumBackward0>)

g.ndata[nfet].sum() * conv1.weight[200] tensor(7.9900, device='cuda:0')



h1 after relu, the first updating, and another relu: 
 tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='cuda:0',
       grad_fn=<ReluBackward0>) 
h.shape torch.Size([6796, 256]) 
h.sum tensor(10538.8223, device='cuda:0', grad_fn=<SumBackward0>)



h2 after the second convolutional layer: 
 tensor([[0.0084, 0.0000, 0.0000,  ..., 0.0156, 0.0000, 0.0056],
        [0.0039, 0.0000, 0.0000,  ..., 0.0073, 0.0000, 0.0026],
        [0.0011, 0.0000, 0.0000,  ..., 0.0021, 0.0000, 0.0007],
        ...,
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]],
       device='cuda:0', grad_fn=<ReluBackward0>) 
h2.shape torch.Size([6796, 128]) 
h2.sum tensor(63159.1484, device='cuda:0', grad_fn=<SumBackward0>)



h2[0].sum tensor(848.0339, device='cuda:0', grad_fn=<SumBackward0>)

(h1.sum(axis=0) * param0_2).sum() + bias0 tensor(53.9192, device='cuda:0', grad_fn=<AddBackward0>)



h2[100].sum tensor(0., device='cuda:0', grad_fn=<SumBackward0>)

(h1.sum(axis=0) * param50_2).sum() + bias50 tensor(-112.9033, device='cuda:0', grad_fn=<AddBackward0>)



h2[200].sum tensor(0., device='cuda:0', grad_fn=<SumBackward0>)

(h1.sum(axis=0) * param100_2).sum() + bias100 tensor(-25.9152, device='cuda:0', grad_fn=<AddBackward0>)



g Graph(num_nodes=6796, num_edges=73186,
      ndata_schemes={'nfet': Scheme(shape=(1,), dtype=torch.float32), 'h1': Scheme(shape=(256,), dtype=torch.float32), 'h2': Scheme(shape=(128,), dtype=torch.float32), 'h3': Scheme(shape=(64,), dtype=torch.float32)}
      edata_schemes={'efet': Scheme(shape=(1,), dtype=torch.float32)})



 output, 
h5 tensor([[-0.6328],
        [-0.4457],
        [-0.3000],
        ...,
        [ 0.0000],
        [ 0.0000],
        [ 0.0000]], device='cuda:0', grad_fn=<AddBackward0>) 
h5.shape torch.Size([6796, 1]) 
h5.sum tensor(-29277.2031, device='cuda:0', grad_fn=<SumBackward0>) 
g.edata[efet] tensor([[1.],
        [1.],
        [1.],
        ...,
        [1.],
        [1.],
        [1.]], device='cuda:0', requires_grad=True) 
g.edata[efet].shape torch.Size([73186, 1]) 
g.edata[efet].sum tensor(73186., device='cuda:0', grad_fn=<SumBackward0>)

Passing event 1007 from the network before training input tensor([0., 0., 0.,  ..., 0., 0., 0.], device='cuda:0') 
result1: tensor([[-0.6328],
        [-0.4457],
        [-0.3000],
        ...,
        [ 0.0000],
        [ 0.0000],
        [ 0.0000]], device='cuda:0', grad_fn=<AddBackward0>) 
result1.shape: torch.Size([6796, 1])
Traceback (most recent call last):
  File "/hpcfs/bes/mlgpu/hoseinkk/MLTracking/otherparticles/pppipi/DGLBhaGcnReNewestweight7N4/./ModelBha.py", line 177, in <module>
    result2 = net(dglgraph, batten)
  File "/hpcfs/bes/mlgpu/hoseinkk/Miniconda3/envs/dgl1/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/hpcfs/bes/mlgpu/hoseinkk/MLTracking/otherparticles/pppipi/DGLBhaGcnReNewestweight7N4/./ModelBha.py", line 37, in forward
    g.ndata['nfet'] = in_fet
  File "/hpcfs/bes/mlgpu/hoseinkk/Miniconda3/envs/dgl1/lib/python3.9/site-packages/dgl/view.py", line 81, in __setitem__
    self._graph._set_n_repr(self._ntid, self._nodes, {key : val})
  File "/hpcfs/bes/mlgpu/hoseinkk/Miniconda3/envs/dgl1/lib/python3.9/site-packages/dgl/heterograph.py", line 4110, in _set_n_repr
    raise DGLError('Expect number of features to match number of nodes (len(u)).'
dgl._ffi.base.DGLError: Expect number of features to match number of nodes (len(u)). Got 20 and 6796 instead.

real	0m23.316s
user	0m16.087s
sys	0m4.878s
