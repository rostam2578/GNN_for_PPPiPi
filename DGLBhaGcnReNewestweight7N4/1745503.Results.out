0: cmsgpu001.ihep.ac.cn
GPU 0: NVIDIA A100-PCIE-40GB (UUID: GPU-83673d1f-01b2-490d-5bc6-a84aaf3ddc65)
Allocate GPU cards : 0

modinfo:
filename:       /lib/modules/3.10.0-1160.71.1.el7.x86_64/extra/nvidia.ko.xz
firmware:       nvidia/515.65.01/gsp.bin
alias:          char-major-195-*
version:        515.65.01
supported:      external
license:        NVIDIA
retpoline:      Y
rhelversion:    7.9
srcversion:     8049D44E2C1B08F41E1B8A6
alias:          pci:v000010DEd*sv*sd*bc06sc80i00*
alias:          pci:v000010DEd*sv*sd*bc03sc02i00*
alias:          pci:v000010DEd*sv*sd*bc03sc00i00*
depends:        drm
vermagic:       3.10.0-1160.71.1.el7.x86_64 SMP mod_unload modversions 
signer:         DKMS module signing key
sig_key:        9B:9E:55:A9:86:D9:50:0B:6D:2D:9F:BA:A7:E6:45:39:D4:DD:5F:C6
sig_hashalgo:   sha512
parm:           NvSwitchRegDwords:NvSwitch regkey (charp)
parm:           NvSwitchBlacklist:NvSwitchBlacklist=uuid[,uuid...] (charp)
parm:           NVreg_ResmanDebugLevel:int
parm:           NVreg_RmLogonRC:int
parm:           NVreg_ModifyDeviceFiles:int
parm:           NVreg_DeviceFileUID:int
parm:           NVreg_DeviceFileGID:int
parm:           NVreg_DeviceFileMode:int
parm:           NVreg_InitializeSystemMemoryAllocations:int
parm:           NVreg_UsePageAttributeTable:int
parm:           NVreg_EnablePCIeGen3:int
parm:           NVreg_EnableMSI:int
parm:           NVreg_TCEBypassMode:int
parm:           NVreg_EnableStreamMemOPs:int
parm:           NVreg_RestrictProfilingToAdminUsers:int
parm:           NVreg_PreserveVideoMemoryAllocations:int
parm:           NVreg_EnableS0ixPowerManagement:int
parm:           NVreg_S0ixPowerManagementVideoMemoryThreshold:int
parm:           NVreg_DynamicPowerManagement:int
parm:           NVreg_DynamicPowerManagementVideoMemoryThreshold:int
parm:           NVreg_EnableGpuFirmware:int
parm:           NVreg_EnableGpuFirmwareLogs:int
parm:           NVreg_OpenRmEnableUnsupportedGpus:int
parm:           NVreg_EnableUserNUMAManagement:int
parm:           NVreg_MemoryPoolSize:int
parm:           NVreg_KMallocHeapMaxSize:int
parm:           NVreg_VMallocHeapMaxSize:int
parm:           NVreg_IgnoreMMIOCheck:int
parm:           NVreg_NvLinkDisable:int
parm:           NVreg_EnablePCIERelaxedOrderingMode:int
parm:           NVreg_RegisterPCIDriver:int
parm:           NVreg_EnableDbgBreakpoint:int
parm:           NVreg_RegistryDwords:charp
parm:           NVreg_RegistryDwordsPerDevice:charp
parm:           NVreg_RmMsg:charp
parm:           NVreg_GpuBlacklist:charp
parm:           NVreg_TemporaryFilePath:charp
parm:           NVreg_ExcludedGpus:charp
parm:           NVreg_DmaRemapPeerMmio:int
parm:           rm_firmware_active:charp

nvidia-smi:
Sat Sep 17 19:42:39 2022       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 515.65.01    Driver Version: 515.65.01    CUDA Version: 11.7     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  NVIDIA A100-PCI...  On   | 00000000:3B:00.0 Off |                    0 |
| N/A   24C    P0    32W / 250W |      0MiB / 40960MiB |      0%      Default |
|                               |                      |             Disabled |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+

nvcc --version:
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2021 NVIDIA Corporation
Built on Sun_Mar_21_19:15:46_PDT_2021
Cuda compilation tools, release 11.3, V11.3.58
Build cuda_11.3.r11.3/compiler.29745058_0

 torch version: 1.10.2

 cuda version: 11.3

 is cuda available: True

 CUDNN VERSION: 8200

 Number CUDA Devices: 1

 CUDA Device Name: NVIDIA A100-PCIE-40GB

 CUDA Device Total Memory [GB]: 42.358472704

 Device capability: (8, 0) 

 Cuda deviice: <torch.cuda.device object at 0x2b40a2bbb8e0> 

 Is cuda initialized: True

 CUDA_HOME: /hpcfs/bes/mlgpu/hoseinkk/Miniconda3/envs/dgl1

real	0m52.775s
user	0m3.814s
sys	0m3.548s
/hpcfs/bes/mlgpu/hoseinkk/Miniconda3/envs/dgl1/lib/python3.9/site-packages/cupy/_environment.py:438: UserWarning: 
--------------------------------------------------------------------------------

  CuPy may not function correctly because multiple CuPy packages are installed
  in your environment:

    cupy, cupy-cuda110

  Follow these steps to resolve this issue:

    1. For all packages listed above, run the following command to remove all
       existing CuPy installations:

         $ pip uninstall <package_name>

      If you previously installed CuPy via conda, also run the following:

         $ conda uninstall cupy

    2. Install the appropriate CuPy package.
       Refer to the Installation Guide for detailed instructions.

         https://docs.cupy.dev/en/stable/install.html

--------------------------------------------------------------------------------

  warnings.warn(f'''
[19:44:23] /opt/dgl/src/runtime/tensordispatch.cc:43: TensorDispatcher: dlopen failed: /hpcfs/bes/mlgpu/hoseinkk/Miniconda3/envs/dgl1/lib/python3.9/site-packages/dgl/tensoradapter/pytorch/libtensoradapter_pytorch_1.10.2.so: cannot open shared object file: No such file or directory
Using backend: pytorch





 Loading data ... 



training set shape (80000, 6796) 
sum 8401300

target set shape (80000, 6796) 
sum 5574226

TraTen and TrvTen shape:
 torch.Size([80000, 6796]) torch.Size([80000, 6796])




 The Network ... 






 The graph ... 



edge_index
 tensor([[   0,    1,    2,  ..., 4907, 4907, 4907],
        [   1,    2,    3,  ..., 4918, 4919, 4920]]) 

edge_index shape
 torch.Size([2, 36593])
graph: Graph(num_nodes=6796, num_edges=36593,
      ndata_schemes={}
      edata_schemes={}) 
nodes: tensor([   0,    1,    2,  ..., 6793, 6794, 6795], device='cuda:0') 
nodes shape: torch.Size([6796]) 
edges: (tensor([   0,    1,    2,  ..., 4907, 4907, 4907], device='cuda:0'), tensor([   1,    2,    3,  ..., 4918, 4919, 4920], device='cuda:0')) 
edges shae:

number of nodes: 6796

number of edges: 73186

node features (random input): tensor([[ 0.8933],
        [-1.6371],
        [ 1.3208],
        ...,
        [ 0.6519],
        [ 1.2678],
        [ 0.4729]], device='cuda:0', requires_grad=True) 
node features sum: tensor(-38.9875, device='cuda:0', grad_fn=<SumBackward0>)

edges features: tensor([[1.],
        [1.],
        [1.],
        ...,
        [1.],
        [1.],
        [1.]], device='cuda:0', requires_grad=True) 
edges features sum: tensor(73186., device='cuda:0', grad_fn=<SumBackward0>)

example: 
Out degrees of node 234: 14

In degrees of node 234: 14
Model name: DGLBhaGcnReNewestweight7N4

net GCN(
  (conv1): GraphConv(in=1, out=256, normalization=both, activation=None)
  (conv2): GraphConv(in=256, out=128, normalization=both, activation=None)
  (conv3): GraphConv(in=128, out=64, normalization=both, activation=None)
  (conv4): GraphConv(in=64, out=32, normalization=both, activation=None)
  (conv5): GraphConv(in=32, out=1, normalization=both, activation=None)
) 
number of the free learnable parameters: 43777

parameters of the network:

name conv1.weight 
shape:
 torch.Size([1, 256]) 
grad:
 True 
date:
 tensor([[ 0.1254,  0.1246,  0.0418, -0.1062, -0.1342,  0.0531, -0.0149,  0.1034,
         -0.0791,  0.0682, -0.1152,  0.0524,  0.1074,  0.0543, -0.0318, -0.0883,
         -0.0494,  0.0858, -0.1235, -0.1075, -0.1202, -0.0769, -0.0139, -0.0528,
          0.0870, -0.1303,  0.1026,  0.0031,  0.0348,  0.0654,  0.0550,  0.1428,
          0.1263,  0.1299,  0.0370, -0.0175,  0.0506,  0.1382, -0.0690,  0.0028,
          0.0687,  0.0910, -0.0061,  0.1262, -0.0990, -0.1183, -0.1497,  0.0784,
         -0.0072, -0.0535,  0.1396,  0.0149, -0.0407,  0.0700,  0.1501,  0.0247,
         -0.0386,  0.0845,  0.0023,  0.0673, -0.1338,  0.1348,  0.0597, -0.0572,
         -0.0383, -0.0974, -0.0067,  0.1507,  0.0175, -0.1108, -0.1197, -0.1323,
         -0.0413, -0.0632, -0.0151,  0.0814, -0.1408,  0.0992,  0.1167, -0.0969,
          0.0218, -0.0891,  0.0139,  0.0381, -0.0621, -0.0977, -0.0571,  0.1478,
          0.1187,  0.0261,  0.1235, -0.0083, -0.0125,  0.1341, -0.0678,  0.1242,
         -0.1495,  0.0577, -0.1428,  0.0739,  0.1203,  0.0071,  0.1119,  0.0966,
          0.1128, -0.0116, -0.1118,  0.1096, -0.0671,  0.1080, -0.1411,  0.0267,
         -0.0290,  0.1031, -0.1519, -0.0818, -0.0949, -0.1409,  0.1455, -0.1461,
         -0.0441, -0.0134,  0.0104, -0.1038,  0.0126,  0.0107, -0.1223, -0.0833,
          0.0711,  0.0412, -0.0142, -0.1489,  0.0204,  0.0813, -0.0851, -0.0608,
         -0.0718,  0.1425, -0.1380,  0.1480,  0.0013, -0.0039,  0.0582,  0.0188,
          0.0678, -0.0853,  0.0966, -0.1210, -0.1316,  0.1527,  0.0796,  0.0664,
         -0.0769,  0.1243,  0.0702, -0.0618,  0.1323, -0.0867,  0.0957, -0.0135,
         -0.0461,  0.1178,  0.1445,  0.0973, -0.1132, -0.0611, -0.0607,  0.0322,
          0.0139, -0.0624,  0.0723, -0.0040,  0.0196,  0.0478,  0.0719, -0.1300,
          0.0239, -0.0967, -0.0768, -0.0743, -0.0142,  0.0318,  0.0756,  0.0643,
          0.1324, -0.0049, -0.1096,  0.1426, -0.0167,  0.0361,  0.0244, -0.1437,
          0.1017,  0.1255, -0.0797,  0.0188,  0.0529, -0.0868, -0.0425,  0.1309,
          0.0496, -0.1330, -0.1090, -0.0216, -0.0317, -0.0838, -0.0482,  0.0208,
          0.0877,  0.0241,  0.0771,  0.0103,  0.0692,  0.1488, -0.1254,  0.0367,
         -0.1345, -0.0929, -0.1428, -0.0490, -0.0503,  0.0384, -0.1398, -0.1475,
          0.0167,  0.1333, -0.1266, -0.0877, -0.0930,  0.1247, -0.1295,  0.0621,
         -0.1100, -0.1319, -0.1034,  0.0543, -0.1204,  0.1187,  0.0912, -0.1149,
          0.1209, -0.0310,  0.1293,  0.0292, -0.1458, -0.0399, -0.1146, -0.1488,
          0.0213,  0.0219, -0.0231,  0.1478,  0.0522, -0.1186, -0.1367, -0.0602]]) 
parameter:
 Parameter containing:
tensor([[ 0.1254,  0.1246,  0.0418, -0.1062, -0.1342,  0.0531, -0.0149,  0.1034,
         -0.0791,  0.0682, -0.1152,  0.0524,  0.1074,  0.0543, -0.0318, -0.0883,
         -0.0494,  0.0858, -0.1235, -0.1075, -0.1202, -0.0769, -0.0139, -0.0528,
          0.0870, -0.1303,  0.1026,  0.0031,  0.0348,  0.0654,  0.0550,  0.1428,
          0.1263,  0.1299,  0.0370, -0.0175,  0.0506,  0.1382, -0.0690,  0.0028,
          0.0687,  0.0910, -0.0061,  0.1262, -0.0990, -0.1183, -0.1497,  0.0784,
         -0.0072, -0.0535,  0.1396,  0.0149, -0.0407,  0.0700,  0.1501,  0.0247,
         -0.0386,  0.0845,  0.0023,  0.0673, -0.1338,  0.1348,  0.0597, -0.0572,
         -0.0383, -0.0974, -0.0067,  0.1507,  0.0175, -0.1108, -0.1197, -0.1323,
         -0.0413, -0.0632, -0.0151,  0.0814, -0.1408,  0.0992,  0.1167, -0.0969,
          0.0218, -0.0891,  0.0139,  0.0381, -0.0621, -0.0977, -0.0571,  0.1478,
          0.1187,  0.0261,  0.1235, -0.0083, -0.0125,  0.1341, -0.0678,  0.1242,
         -0.1495,  0.0577, -0.1428,  0.0739,  0.1203,  0.0071,  0.1119,  0.0966,
          0.1128, -0.0116, -0.1118,  0.1096, -0.0671,  0.1080, -0.1411,  0.0267,
         -0.0290,  0.1031, -0.1519, -0.0818, -0.0949, -0.1409,  0.1455, -0.1461,
         -0.0441, -0.0134,  0.0104, -0.1038,  0.0126,  0.0107, -0.1223, -0.0833,
          0.0711,  0.0412, -0.0142, -0.1489,  0.0204,  0.0813, -0.0851, -0.0608,
         -0.0718,  0.1425, -0.1380,  0.1480,  0.0013, -0.0039,  0.0582,  0.0188,
          0.0678, -0.0853,  0.0966, -0.1210, -0.1316,  0.1527,  0.0796,  0.0664,
         -0.0769,  0.1243,  0.0702, -0.0618,  0.1323, -0.0867,  0.0957, -0.0135,
         -0.0461,  0.1178,  0.1445,  0.0973, -0.1132, -0.0611, -0.0607,  0.0322,
          0.0139, -0.0624,  0.0723, -0.0040,  0.0196,  0.0478,  0.0719, -0.1300,
          0.0239, -0.0967, -0.0768, -0.0743, -0.0142,  0.0318,  0.0756,  0.0643,
          0.1324, -0.0049, -0.1096,  0.1426, -0.0167,  0.0361,  0.0244, -0.1437,
          0.1017,  0.1255, -0.0797,  0.0188,  0.0529, -0.0868, -0.0425,  0.1309,
          0.0496, -0.1330, -0.1090, -0.0216, -0.0317, -0.0838, -0.0482,  0.0208,
          0.0877,  0.0241,  0.0771,  0.0103,  0.0692,  0.1488, -0.1254,  0.0367,
         -0.1345, -0.0929, -0.1428, -0.0490, -0.0503,  0.0384, -0.1398, -0.1475,
          0.0167,  0.1333, -0.1266, -0.0877, -0.0930,  0.1247, -0.1295,  0.0621,
         -0.1100, -0.1319, -0.1034,  0.0543, -0.1204,  0.1187,  0.0912, -0.1149,
          0.1209, -0.0310,  0.1293,  0.0292, -0.1458, -0.0399, -0.1146, -0.1488,
          0.0213,  0.0219, -0.0231,  0.1478,  0.0522, -0.1186, -0.1367, -0.0602]],
       requires_grad=True)

name conv1.bias 
shape:
 torch.Size([256]) 
grad:
 True 
date:
 tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]) 
parameter:
 Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       requires_grad=True)

name conv2.weight 
shape:
 torch.Size([256, 128]) 
grad:
 True 
date:
 tensor([[-0.0881, -0.0385,  0.0999,  ..., -0.0567, -0.0177, -0.0192],
        [-0.0700,  0.0517, -0.0248,  ...,  0.0661,  0.0333,  0.0466],
        [-0.0398, -0.0130,  0.0384,  ...,  0.0916,  0.0167, -0.0571],
        ...,
        [ 0.1037, -0.0611, -0.0134,  ..., -0.0491, -0.1045,  0.0296],
        [-0.0009, -0.1176,  0.0178,  ..., -0.0282,  0.0089, -0.0433],
        [ 0.0746, -0.0166,  0.0306,  ...,  0.0642,  0.0817,  0.0636]]) 
parameter:
 Parameter containing:
tensor([[-0.0881, -0.0385,  0.0999,  ..., -0.0567, -0.0177, -0.0192],
        [-0.0700,  0.0517, -0.0248,  ...,  0.0661,  0.0333,  0.0466],
        [-0.0398, -0.0130,  0.0384,  ...,  0.0916,  0.0167, -0.0571],
        ...,
        [ 0.1037, -0.0611, -0.0134,  ..., -0.0491, -0.1045,  0.0296],
        [-0.0009, -0.1176,  0.0178,  ..., -0.0282,  0.0089, -0.0433],
        [ 0.0746, -0.0166,  0.0306,  ...,  0.0642,  0.0817,  0.0636]],
       requires_grad=True)

name conv2.bias 
shape:
 torch.Size([128]) 
grad:
 True 
date:
 tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.]) 
parameter:
 Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], requires_grad=True)

name conv3.weight 
shape:
 torch.Size([128, 64]) 
grad:
 True 
date:
 tensor([[ 0.0739, -0.0905, -0.1357,  ...,  0.0328,  0.0491,  0.0879],
        [-0.0059,  0.0970, -0.0013,  ..., -0.0269,  0.1426,  0.0540],
        [-0.0153, -0.1549, -0.1357,  ...,  0.1334,  0.1243,  0.0795],
        ...,
        [-0.0150, -0.0113,  0.1601,  ..., -0.1320, -0.1213,  0.0016],
        [-0.0445,  0.0454, -0.0120,  ...,  0.0250, -0.1551,  0.0994],
        [ 0.0220, -0.0540, -0.1157,  ...,  0.0379, -0.0356, -0.1287]]) 
parameter:
 Parameter containing:
tensor([[ 0.0739, -0.0905, -0.1357,  ...,  0.0328,  0.0491,  0.0879],
        [-0.0059,  0.0970, -0.0013,  ..., -0.0269,  0.1426,  0.0540],
        [-0.0153, -0.1549, -0.1357,  ...,  0.1334,  0.1243,  0.0795],
        ...,
        [-0.0150, -0.0113,  0.1601,  ..., -0.1320, -0.1213,  0.0016],
        [-0.0445,  0.0454, -0.0120,  ...,  0.0250, -0.1551,  0.0994],
        [ 0.0220, -0.0540, -0.1157,  ...,  0.0379, -0.0356, -0.1287]],
       requires_grad=True)

name conv3.bias 
shape:
 torch.Size([64]) 
grad:
 True 
date:
 tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]) 
parameter:
 Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       requires_grad=True)

name conv4.weight 
shape:
 torch.Size([64, 32]) 
grad:
 True 
date:
 tensor([[ 0.2052,  0.1770, -0.1424,  ...,  0.1257,  0.0042, -0.0628],
        [ 0.2338,  0.1644, -0.2021,  ..., -0.1102, -0.1246,  0.1269],
        [ 0.0381,  0.0830,  0.1365,  ..., -0.1894, -0.1812, -0.1806],
        ...,
        [-0.0134,  0.1873, -0.0156,  ...,  0.1875, -0.0102,  0.0979],
        [ 0.0367,  0.2476, -0.1636,  ..., -0.0037, -0.1009, -0.0785],
        [-0.2326,  0.1849,  0.1369,  ..., -0.0388, -0.1943,  0.2372]]) 
parameter:
 Parameter containing:
tensor([[ 0.2052,  0.1770, -0.1424,  ...,  0.1257,  0.0042, -0.0628],
        [ 0.2338,  0.1644, -0.2021,  ..., -0.1102, -0.1246,  0.1269],
        [ 0.0381,  0.0830,  0.1365,  ..., -0.1894, -0.1812, -0.1806],
        ...,
        [-0.0134,  0.1873, -0.0156,  ...,  0.1875, -0.0102,  0.0979],
        [ 0.0367,  0.2476, -0.1636,  ..., -0.0037, -0.1009, -0.0785],
        [-0.2326,  0.1849,  0.1369,  ..., -0.0388, -0.1943,  0.2372]],
       requires_grad=True)

name conv4.bias 
shape:
 torch.Size([32]) 
grad:
 True 
date:
 tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.]) 
parameter:
 Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], requires_grad=True)

name conv5.weight 
shape:
 torch.Size([32, 1]) 
grad:
 True 
date:
 tensor([[-0.3088],
        [-0.0741],
        [-0.4159],
        [ 0.4036],
        [ 0.3975],
        [ 0.1419],
        [-0.2887],
        [ 0.3301],
        [ 0.4230],
        [-0.0418],
        [ 0.0027],
        [ 0.2066],
        [ 0.2280],
        [ 0.2638],
        [-0.3395],
        [-0.4147],
        [ 0.1142],
        [-0.1717],
        [-0.1532],
        [ 0.4077],
        [ 0.2416],
        [-0.3042],
        [ 0.0636],
        [-0.0861],
        [ 0.3594],
        [-0.2299],
        [-0.2865],
        [-0.2922],
        [-0.2606],
        [-0.2306],
        [-0.2005],
        [ 0.2656]]) 
parameter:
 Parameter containing:
tensor([[-0.3088],
        [-0.0741],
        [-0.4159],
        [ 0.4036],
        [ 0.3975],
        [ 0.1419],
        [-0.2887],
        [ 0.3301],
        [ 0.4230],
        [-0.0418],
        [ 0.0027],
        [ 0.2066],
        [ 0.2280],
        [ 0.2638],
        [-0.3395],
        [-0.4147],
        [ 0.1142],
        [-0.1717],
        [-0.1532],
        [ 0.4077],
        [ 0.2416],
        [-0.3042],
        [ 0.0636],
        [-0.0861],
        [ 0.3594],
        [-0.2299],
        [-0.2865],
        [-0.2922],
        [-0.2606],
        [-0.2306],
        [-0.2005],
        [ 0.2656]], requires_grad=True)

name conv5.bias 
shape:
 torch.Size([1]) 
grad:
 True 
date:
 tensor([0.]) 
parameter:
 Parameter containing:
tensor([0.], requires_grad=True)
Traceback (most recent call last):
  File "/hpcfs/bes/mlgpu/hoseinkk/MLTracking/otherparticles/pppipi/DGLBhaGcnReNewestweight7N4/./Results.py", line 2, in <module>
    from ModelBha import *
  File "/hpcfs/bes/mlgpu/hoseinkk/MLTracking/otherparticles/pppipi/DGLBhaGcnReNewestweight7N4/ModelBha.py", line 133, in <module>
    result1 = net(dglgraph, TraTen[1007].reshape(6796, 1))
  File "/hpcfs/bes/mlgpu/hoseinkk/Miniconda3/envs/dgl1/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/hpcfs/bes/mlgpu/hoseinkk/MLTracking/otherparticles/pppipi/DGLBhaGcnReNewestweight7N4/ModelBha.py", line 47, in forward
    h = self.conv1(g, in_fet)
  File "/hpcfs/bes/mlgpu/hoseinkk/Miniconda3/envs/dgl1/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/hpcfs/bes/mlgpu/hoseinkk/Miniconda3/envs/dgl1/lib/python3.9/site-packages/dgl/nn/pytorch/conv/graphconv.py", line 437, in forward
    rst = th.matmul(rst, weight)
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat2 in method wrapper_mm)

real	1m16.344s
user	0m16.758s
sys	0m10.723s
